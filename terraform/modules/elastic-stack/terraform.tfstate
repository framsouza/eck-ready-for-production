{
  "version": 4,
  "terraform_version": "1.1.8",
  "serial": 26,
  "lineage": "35c56828-f9d9-9980-b16c-acb70320459b",
  "outputs": {},
  "resources": [
    {
      "mode": "managed",
      "type": "kubernetes_manifest",
      "name": "agent_elastic_agent",
      "provider": "provider[\"registry.terraform.io/hashicorp/kubernetes\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "computed_fields": null,
            "field_manager": [],
            "manifest": {
              "value": {
                "apiVersion": "agent.k8s.elastic.co/v1alpha1",
                "kind": "Agent",
                "metadata": {
                  "name": "elastic-agent",
                  "namespace": "default"
                },
                "spec": {
                  "daemonSet": {
                    "podTemplate": {
                      "spec": {
                        "automountServiceAccountToken": true,
                        "containers": [
                          {
                            "name": "agent",
                            "volumeMounts": [
                              {
                                "mountPath": "/var/lib/docker/containers",
                                "name": "varlibdockercontainers"
                              },
                              {
                                "mountPath": "/var/log/containers",
                                "name": "varlogcontainers"
                              },
                              {
                                "mountPath": "/var/log/pods",
                                "name": "varlogpods"
                              }
                            ]
                          }
                        ],
                        "dnsPolicy": "ClusterFirstWithHostNet",
                        "hostNetwork": true,
                        "securityContext": {
                          "runAsUser": 0
                        },
                        "serviceAccountName": "elastic-agent",
                        "volumes": [
                          {
                            "hostPath": {
                              "path": "/var/lib/docker/containers"
                            },
                            "name": "varlibdockercontainers"
                          },
                          {
                            "hostPath": {
                              "path": "/var/log/containers"
                            },
                            "name": "varlogcontainers"
                          },
                          {
                            "hostPath": {
                              "path": "/var/log/pods"
                            },
                            "name": "varlogpods"
                          }
                        ]
                      }
                    }
                  },
                  "fleetServerRef": {
                    "name": "fleet-server"
                  },
                  "kibanaRef": {
                    "name": "kibana"
                  },
                  "mode": "fleet",
                  "version": "8.0.0"
                }
              },
              "type": [
                "object",
                {
                  "apiVersion": "string",
                  "kind": "string",
                  "metadata": [
                    "object",
                    {
                      "name": "string",
                      "namespace": "string"
                    }
                  ],
                  "spec": [
                    "object",
                    {
                      "daemonSet": [
                        "object",
                        {
                          "podTemplate": [
                            "object",
                            {
                              "spec": [
                                "object",
                                {
                                  "automountServiceAccountToken": "bool",
                                  "containers": [
                                    "tuple",
                                    [
                                      [
                                        "object",
                                        {
                                          "name": "string",
                                          "volumeMounts": [
                                            "tuple",
                                            [
                                              [
                                                "object",
                                                {
                                                  "mountPath": "string",
                                                  "name": "string"
                                                }
                                              ],
                                              [
                                                "object",
                                                {
                                                  "mountPath": "string",
                                                  "name": "string"
                                                }
                                              ],
                                              [
                                                "object",
                                                {
                                                  "mountPath": "string",
                                                  "name": "string"
                                                }
                                              ]
                                            ]
                                          ]
                                        }
                                      ]
                                    ]
                                  ],
                                  "dnsPolicy": "string",
                                  "hostNetwork": "bool",
                                  "securityContext": [
                                    "object",
                                    {
                                      "runAsUser": "number"
                                    }
                                  ],
                                  "serviceAccountName": "string",
                                  "volumes": [
                                    "tuple",
                                    [
                                      [
                                        "object",
                                        {
                                          "hostPath": [
                                            "object",
                                            {
                                              "path": "string"
                                            }
                                          ],
                                          "name": "string"
                                        }
                                      ],
                                      [
                                        "object",
                                        {
                                          "hostPath": [
                                            "object",
                                            {
                                              "path": "string"
                                            }
                                          ],
                                          "name": "string"
                                        }
                                      ],
                                      [
                                        "object",
                                        {
                                          "hostPath": [
                                            "object",
                                            {
                                              "path": "string"
                                            }
                                          ],
                                          "name": "string"
                                        }
                                      ]
                                    ]
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ],
                      "fleetServerRef": [
                        "object",
                        {
                          "name": "string"
                        }
                      ],
                      "kibanaRef": [
                        "object",
                        {
                          "name": "string"
                        }
                      ],
                      "mode": "string",
                      "version": "string"
                    }
                  ]
                }
              ]
            },
            "object": {
              "value": {
                "apiVersion": "agent.k8s.elastic.co/v1alpha1",
                "kind": "Agent",
                "metadata": {
                  "annotations": null,
                  "clusterName": null,
                  "creationTimestamp": null,
                  "deletionGracePeriodSeconds": null,
                  "deletionTimestamp": null,
                  "finalizers": null,
                  "generateName": null,
                  "generation": null,
                  "labels": null,
                  "managedFields": null,
                  "name": "elastic-agent",
                  "namespace": "default",
                  "ownerReferences": null,
                  "resourceVersion": null,
                  "selfLink": null,
                  "uid": null
                },
                "spec": {
                  "config": null,
                  "configRef": {
                    "secretName": null
                  },
                  "daemonSet": {
                    "podTemplate": {
                      "spec": {
                        "automountServiceAccountToken": true,
                        "containers": [
                          {
                            "name": "agent",
                            "volumeMounts": [
                              {
                                "mountPath": "/var/lib/docker/containers",
                                "name": "varlibdockercontainers"
                              },
                              {
                                "mountPath": "/var/log/containers",
                                "name": "varlogcontainers"
                              },
                              {
                                "mountPath": "/var/log/pods",
                                "name": "varlogpods"
                              }
                            ]
                          }
                        ],
                        "dnsPolicy": "ClusterFirstWithHostNet",
                        "hostNetwork": true,
                        "securityContext": {
                          "runAsUser": 0
                        },
                        "serviceAccountName": "elastic-agent",
                        "volumes": [
                          {
                            "hostPath": {
                              "path": "/var/lib/docker/containers"
                            },
                            "name": "varlibdockercontainers"
                          },
                          {
                            "hostPath": {
                              "path": "/var/log/containers"
                            },
                            "name": "varlogcontainers"
                          },
                          {
                            "hostPath": {
                              "path": "/var/log/pods"
                            },
                            "name": "varlogpods"
                          }
                        ]
                      }
                    },
                    "updateStrategy": {
                      "rollingUpdate": {
                        "maxSurge": null,
                        "maxUnavailable": null
                      },
                      "type": null
                    }
                  },
                  "deployment": {
                    "podTemplate": null,
                    "replicas": null,
                    "strategy": {
                      "rollingUpdate": {
                        "maxSurge": null,
                        "maxUnavailable": null
                      },
                      "type": null
                    }
                  },
                  "elasticsearchRefs": null,
                  "fleetServerEnabled": null,
                  "fleetServerRef": {
                    "name": "fleet-server",
                    "namespace": null,
                    "serviceName": null
                  },
                  "http": {
                    "service": {
                      "metadata": {
                        "annotations": null,
                        "finalizers": null,
                        "labels": null,
                        "name": null,
                        "namespace": null
                      },
                      "spec": {
                        "allocateLoadBalancerNodePorts": null,
                        "clusterIP": null,
                        "clusterIPs": null,
                        "externalIPs": null,
                        "externalName": null,
                        "externalTrafficPolicy": null,
                        "healthCheckNodePort": null,
                        "internalTrafficPolicy": null,
                        "ipFamilies": null,
                        "ipFamilyPolicy": null,
                        "loadBalancerClass": null,
                        "loadBalancerIP": null,
                        "loadBalancerSourceRanges": null,
                        "ports": null,
                        "publishNotReadyAddresses": null,
                        "selector": null,
                        "sessionAffinity": null,
                        "sessionAffinityConfig": {
                          "clientIP": {
                            "timeoutSeconds": null
                          }
                        },
                        "type": null
                      }
                    },
                    "tls": {
                      "certificate": {
                        "secretName": null
                      },
                      "selfSignedCertificate": {
                        "disabled": null,
                        "subjectAltNames": null
                      }
                    }
                  },
                  "image": null,
                  "kibanaRef": {
                    "name": "kibana",
                    "namespace": null,
                    "serviceName": null
                  },
                  "mode": "fleet",
                  "secureSettings": null,
                  "serviceAccountName": null,
                  "version": "8.0.0"
                }
              },
              "type": [
                "object",
                {
                  "apiVersion": "string",
                  "kind": "string",
                  "metadata": [
                    "object",
                    {
                      "annotations": [
                        "map",
                        "string"
                      ],
                      "clusterName": "string",
                      "creationTimestamp": "string",
                      "deletionGracePeriodSeconds": "number",
                      "deletionTimestamp": "string",
                      "finalizers": [
                        "list",
                        "string"
                      ],
                      "generateName": "string",
                      "generation": "number",
                      "labels": [
                        "map",
                        "string"
                      ],
                      "managedFields": [
                        "tuple",
                        [
                          [
                            "object",
                            {
                              "apiVersion": "string",
                              "fieldsType": "string",
                              "fieldsV1": "dynamic",
                              "manager": "string",
                              "operation": "string",
                              "time": "string"
                            }
                          ]
                        ]
                      ],
                      "name": "string",
                      "namespace": "string",
                      "ownerReferences": [
                        "list",
                        [
                          "object",
                          {
                            "apiVersion": "string",
                            "blockOwnerDeletion": "bool",
                            "controller": "bool",
                            "kind": "string",
                            "name": "string",
                            "uid": "string"
                          }
                        ]
                      ],
                      "resourceVersion": "string",
                      "selfLink": "string",
                      "uid": "string"
                    }
                  ],
                  "spec": [
                    "object",
                    {
                      "config": "dynamic",
                      "configRef": [
                        "object",
                        {
                          "secretName": "string"
                        }
                      ],
                      "daemonSet": [
                        "object",
                        {
                          "podTemplate": [
                            "object",
                            {
                              "spec": [
                                "object",
                                {
                                  "automountServiceAccountToken": "bool",
                                  "containers": [
                                    "tuple",
                                    [
                                      [
                                        "object",
                                        {
                                          "name": "string",
                                          "volumeMounts": [
                                            "tuple",
                                            [
                                              [
                                                "object",
                                                {
                                                  "mountPath": "string",
                                                  "name": "string"
                                                }
                                              ],
                                              [
                                                "object",
                                                {
                                                  "mountPath": "string",
                                                  "name": "string"
                                                }
                                              ],
                                              [
                                                "object",
                                                {
                                                  "mountPath": "string",
                                                  "name": "string"
                                                }
                                              ]
                                            ]
                                          ]
                                        }
                                      ]
                                    ]
                                  ],
                                  "dnsPolicy": "string",
                                  "hostNetwork": "bool",
                                  "securityContext": [
                                    "object",
                                    {
                                      "runAsUser": "number"
                                    }
                                  ],
                                  "serviceAccountName": "string",
                                  "volumes": [
                                    "tuple",
                                    [
                                      [
                                        "object",
                                        {
                                          "hostPath": [
                                            "object",
                                            {
                                              "path": "string"
                                            }
                                          ],
                                          "name": "string"
                                        }
                                      ],
                                      [
                                        "object",
                                        {
                                          "hostPath": [
                                            "object",
                                            {
                                              "path": "string"
                                            }
                                          ],
                                          "name": "string"
                                        }
                                      ],
                                      [
                                        "object",
                                        {
                                          "hostPath": [
                                            "object",
                                            {
                                              "path": "string"
                                            }
                                          ],
                                          "name": "string"
                                        }
                                      ]
                                    ]
                                  ]
                                }
                              ]
                            }
                          ],
                          "updateStrategy": [
                            "object",
                            {
                              "rollingUpdate": [
                                "object",
                                {
                                  "maxSurge": "string",
                                  "maxUnavailable": "string"
                                }
                              ],
                              "type": "string"
                            }
                          ]
                        }
                      ],
                      "deployment": [
                        "object",
                        {
                          "podTemplate": "dynamic",
                          "replicas": "number",
                          "strategy": [
                            "object",
                            {
                              "rollingUpdate": [
                                "object",
                                {
                                  "maxSurge": "string",
                                  "maxUnavailable": "string"
                                }
                              ],
                              "type": "string"
                            }
                          ]
                        }
                      ],
                      "elasticsearchRefs": [
                        "list",
                        [
                          "object",
                          {
                            "name": "string",
                            "namespace": "string",
                            "outputName": "string",
                            "serviceName": "string"
                          }
                        ]
                      ],
                      "fleetServerEnabled": "bool",
                      "fleetServerRef": [
                        "object",
                        {
                          "name": "string",
                          "namespace": "string",
                          "serviceName": "string"
                        }
                      ],
                      "http": [
                        "object",
                        {
                          "service": [
                            "object",
                            {
                              "metadata": [
                                "object",
                                {
                                  "annotations": [
                                    "map",
                                    "string"
                                  ],
                                  "finalizers": [
                                    "list",
                                    "string"
                                  ],
                                  "labels": [
                                    "map",
                                    "string"
                                  ],
                                  "name": "string",
                                  "namespace": "string"
                                }
                              ],
                              "spec": [
                                "object",
                                {
                                  "allocateLoadBalancerNodePorts": "bool",
                                  "clusterIP": "string",
                                  "clusterIPs": [
                                    "list",
                                    "string"
                                  ],
                                  "externalIPs": [
                                    "list",
                                    "string"
                                  ],
                                  "externalName": "string",
                                  "externalTrafficPolicy": "string",
                                  "healthCheckNodePort": "number",
                                  "internalTrafficPolicy": "string",
                                  "ipFamilies": [
                                    "list",
                                    "string"
                                  ],
                                  "ipFamilyPolicy": "string",
                                  "loadBalancerClass": "string",
                                  "loadBalancerIP": "string",
                                  "loadBalancerSourceRanges": [
                                    "list",
                                    "string"
                                  ],
                                  "ports": [
                                    "list",
                                    [
                                      "object",
                                      {
                                        "appProtocol": "string",
                                        "name": "string",
                                        "nodePort": "number",
                                        "port": "number",
                                        "protocol": "string",
                                        "targetPort": "string"
                                      }
                                    ]
                                  ],
                                  "publishNotReadyAddresses": "bool",
                                  "selector": [
                                    "map",
                                    "string"
                                  ],
                                  "sessionAffinity": "string",
                                  "sessionAffinityConfig": [
                                    "object",
                                    {
                                      "clientIP": [
                                        "object",
                                        {
                                          "timeoutSeconds": "number"
                                        }
                                      ]
                                    }
                                  ],
                                  "type": "string"
                                }
                              ]
                            }
                          ],
                          "tls": [
                            "object",
                            {
                              "certificate": [
                                "object",
                                {
                                  "secretName": "string"
                                }
                              ],
                              "selfSignedCertificate": [
                                "object",
                                {
                                  "disabled": "bool",
                                  "subjectAltNames": [
                                    "list",
                                    [
                                      "object",
                                      {
                                        "dns": "string",
                                        "ip": "string"
                                      }
                                    ]
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ],
                      "image": "string",
                      "kibanaRef": [
                        "object",
                        {
                          "name": "string",
                          "namespace": "string",
                          "serviceName": "string"
                        }
                      ],
                      "mode": "string",
                      "secureSettings": [
                        "list",
                        [
                          "object",
                          {
                            "entries": [
                              "list",
                              [
                                "object",
                                {
                                  "key": "string",
                                  "path": "string"
                                }
                              ]
                            ],
                            "secretName": "string"
                          }
                        ]
                      ],
                      "serviceAccountName": "string",
                      "version": "string"
                    }
                  ]
                }
              ]
            },
            "timeouts": [],
            "wait": [],
            "wait_for": null
          },
          "sensitive_attributes": []
        }
      ]
    },
    {
      "mode": "managed",
      "type": "kubernetes_manifest",
      "name": "agent_fleet_server",
      "provider": "provider[\"registry.terraform.io/hashicorp/kubernetes\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "computed_fields": null,
            "field_manager": [],
            "manifest": {
              "value": {
                "apiVersion": "agent.k8s.elastic.co/v1alpha1",
                "kind": "Agent",
                "metadata": {
                  "name": "fleet-server",
                  "namespace": "default"
                },
                "spec": {
                  "deployment": {
                    "podTemplate": {
                      "spec": {
                        "automountServiceAccountToken": true,
                        "securityContext": {
                          "runAsUser": 0
                        },
                        "serviceAccountName": "fleet-server"
                      }
                    },
                    "replicas": 1
                  },
                  "elasticsearchRefs": [
                    {
                      "name": "elasticsearch"
                    }
                  ],
                  "fleetServerEnabled": true,
                  "kibanaRef": {
                    "name": "kibana"
                  },
                  "mode": "fleet",
                  "version": "8.0.0"
                }
              },
              "type": [
                "object",
                {
                  "apiVersion": "string",
                  "kind": "string",
                  "metadata": [
                    "object",
                    {
                      "name": "string",
                      "namespace": "string"
                    }
                  ],
                  "spec": [
                    "object",
                    {
                      "deployment": [
                        "object",
                        {
                          "podTemplate": [
                            "object",
                            {
                              "spec": [
                                "object",
                                {
                                  "automountServiceAccountToken": "bool",
                                  "securityContext": [
                                    "object",
                                    {
                                      "runAsUser": "number"
                                    }
                                  ],
                                  "serviceAccountName": "string"
                                }
                              ]
                            }
                          ],
                          "replicas": "number"
                        }
                      ],
                      "elasticsearchRefs": [
                        "tuple",
                        [
                          [
                            "object",
                            {
                              "name": "string"
                            }
                          ]
                        ]
                      ],
                      "fleetServerEnabled": "bool",
                      "kibanaRef": [
                        "object",
                        {
                          "name": "string"
                        }
                      ],
                      "mode": "string",
                      "version": "string"
                    }
                  ]
                }
              ]
            },
            "object": {
              "value": {
                "apiVersion": "agent.k8s.elastic.co/v1alpha1",
                "kind": "Agent",
                "metadata": {
                  "annotations": null,
                  "clusterName": null,
                  "creationTimestamp": null,
                  "deletionGracePeriodSeconds": null,
                  "deletionTimestamp": null,
                  "finalizers": null,
                  "generateName": null,
                  "generation": null,
                  "labels": null,
                  "managedFields": null,
                  "name": "fleet-server",
                  "namespace": "default",
                  "ownerReferences": null,
                  "resourceVersion": null,
                  "selfLink": null,
                  "uid": null
                },
                "spec": {
                  "config": null,
                  "configRef": {
                    "secretName": null
                  },
                  "daemonSet": {
                    "podTemplate": null,
                    "updateStrategy": {
                      "rollingUpdate": {
                        "maxSurge": null,
                        "maxUnavailable": null
                      },
                      "type": null
                    }
                  },
                  "deployment": {
                    "podTemplate": {
                      "spec": {
                        "automountServiceAccountToken": true,
                        "securityContext": {
                          "runAsUser": 0
                        },
                        "serviceAccountName": "fleet-server"
                      }
                    },
                    "replicas": 1,
                    "strategy": {
                      "rollingUpdate": {
                        "maxSurge": null,
                        "maxUnavailable": null
                      },
                      "type": null
                    }
                  },
                  "elasticsearchRefs": [
                    {
                      "name": "elasticsearch",
                      "namespace": null,
                      "outputName": null,
                      "serviceName": null
                    }
                  ],
                  "fleetServerEnabled": true,
                  "fleetServerRef": {
                    "name": null,
                    "namespace": null,
                    "serviceName": null
                  },
                  "http": {
                    "service": {
                      "metadata": {
                        "annotations": null,
                        "finalizers": null,
                        "labels": null,
                        "name": null,
                        "namespace": null
                      },
                      "spec": {
                        "allocateLoadBalancerNodePorts": null,
                        "clusterIP": null,
                        "clusterIPs": null,
                        "externalIPs": null,
                        "externalName": null,
                        "externalTrafficPolicy": null,
                        "healthCheckNodePort": null,
                        "internalTrafficPolicy": null,
                        "ipFamilies": null,
                        "ipFamilyPolicy": null,
                        "loadBalancerClass": null,
                        "loadBalancerIP": null,
                        "loadBalancerSourceRanges": null,
                        "ports": null,
                        "publishNotReadyAddresses": null,
                        "selector": null,
                        "sessionAffinity": null,
                        "sessionAffinityConfig": {
                          "clientIP": {
                            "timeoutSeconds": null
                          }
                        },
                        "type": null
                      }
                    },
                    "tls": {
                      "certificate": {
                        "secretName": null
                      },
                      "selfSignedCertificate": {
                        "disabled": null,
                        "subjectAltNames": null
                      }
                    }
                  },
                  "image": null,
                  "kibanaRef": {
                    "name": "kibana",
                    "namespace": null,
                    "serviceName": null
                  },
                  "mode": "fleet",
                  "secureSettings": null,
                  "serviceAccountName": null,
                  "version": "8.0.0"
                }
              },
              "type": [
                "object",
                {
                  "apiVersion": "string",
                  "kind": "string",
                  "metadata": [
                    "object",
                    {
                      "annotations": [
                        "map",
                        "string"
                      ],
                      "clusterName": "string",
                      "creationTimestamp": "string",
                      "deletionGracePeriodSeconds": "number",
                      "deletionTimestamp": "string",
                      "finalizers": [
                        "list",
                        "string"
                      ],
                      "generateName": "string",
                      "generation": "number",
                      "labels": [
                        "map",
                        "string"
                      ],
                      "managedFields": [
                        "tuple",
                        [
                          [
                            "object",
                            {
                              "apiVersion": "string",
                              "fieldsType": "string",
                              "fieldsV1": "dynamic",
                              "manager": "string",
                              "operation": "string",
                              "time": "string"
                            }
                          ]
                        ]
                      ],
                      "name": "string",
                      "namespace": "string",
                      "ownerReferences": [
                        "list",
                        [
                          "object",
                          {
                            "apiVersion": "string",
                            "blockOwnerDeletion": "bool",
                            "controller": "bool",
                            "kind": "string",
                            "name": "string",
                            "uid": "string"
                          }
                        ]
                      ],
                      "resourceVersion": "string",
                      "selfLink": "string",
                      "uid": "string"
                    }
                  ],
                  "spec": [
                    "object",
                    {
                      "config": "dynamic",
                      "configRef": [
                        "object",
                        {
                          "secretName": "string"
                        }
                      ],
                      "daemonSet": [
                        "object",
                        {
                          "podTemplate": "dynamic",
                          "updateStrategy": [
                            "object",
                            {
                              "rollingUpdate": [
                                "object",
                                {
                                  "maxSurge": "string",
                                  "maxUnavailable": "string"
                                }
                              ],
                              "type": "string"
                            }
                          ]
                        }
                      ],
                      "deployment": [
                        "object",
                        {
                          "podTemplate": [
                            "object",
                            {
                              "spec": [
                                "object",
                                {
                                  "automountServiceAccountToken": "bool",
                                  "securityContext": [
                                    "object",
                                    {
                                      "runAsUser": "number"
                                    }
                                  ],
                                  "serviceAccountName": "string"
                                }
                              ]
                            }
                          ],
                          "replicas": "number",
                          "strategy": [
                            "object",
                            {
                              "rollingUpdate": [
                                "object",
                                {
                                  "maxSurge": "string",
                                  "maxUnavailable": "string"
                                }
                              ],
                              "type": "string"
                            }
                          ]
                        }
                      ],
                      "elasticsearchRefs": [
                        "list",
                        [
                          "object",
                          {
                            "name": "string",
                            "namespace": "string",
                            "outputName": "string",
                            "serviceName": "string"
                          }
                        ]
                      ],
                      "fleetServerEnabled": "bool",
                      "fleetServerRef": [
                        "object",
                        {
                          "name": "string",
                          "namespace": "string",
                          "serviceName": "string"
                        }
                      ],
                      "http": [
                        "object",
                        {
                          "service": [
                            "object",
                            {
                              "metadata": [
                                "object",
                                {
                                  "annotations": [
                                    "map",
                                    "string"
                                  ],
                                  "finalizers": [
                                    "list",
                                    "string"
                                  ],
                                  "labels": [
                                    "map",
                                    "string"
                                  ],
                                  "name": "string",
                                  "namespace": "string"
                                }
                              ],
                              "spec": [
                                "object",
                                {
                                  "allocateLoadBalancerNodePorts": "bool",
                                  "clusterIP": "string",
                                  "clusterIPs": [
                                    "list",
                                    "string"
                                  ],
                                  "externalIPs": [
                                    "list",
                                    "string"
                                  ],
                                  "externalName": "string",
                                  "externalTrafficPolicy": "string",
                                  "healthCheckNodePort": "number",
                                  "internalTrafficPolicy": "string",
                                  "ipFamilies": [
                                    "list",
                                    "string"
                                  ],
                                  "ipFamilyPolicy": "string",
                                  "loadBalancerClass": "string",
                                  "loadBalancerIP": "string",
                                  "loadBalancerSourceRanges": [
                                    "list",
                                    "string"
                                  ],
                                  "ports": [
                                    "list",
                                    [
                                      "object",
                                      {
                                        "appProtocol": "string",
                                        "name": "string",
                                        "nodePort": "number",
                                        "port": "number",
                                        "protocol": "string",
                                        "targetPort": "string"
                                      }
                                    ]
                                  ],
                                  "publishNotReadyAddresses": "bool",
                                  "selector": [
                                    "map",
                                    "string"
                                  ],
                                  "sessionAffinity": "string",
                                  "sessionAffinityConfig": [
                                    "object",
                                    {
                                      "clientIP": [
                                        "object",
                                        {
                                          "timeoutSeconds": "number"
                                        }
                                      ]
                                    }
                                  ],
                                  "type": "string"
                                }
                              ]
                            }
                          ],
                          "tls": [
                            "object",
                            {
                              "certificate": [
                                "object",
                                {
                                  "secretName": "string"
                                }
                              ],
                              "selfSignedCertificate": [
                                "object",
                                {
                                  "disabled": "bool",
                                  "subjectAltNames": [
                                    "list",
                                    [
                                      "object",
                                      {
                                        "dns": "string",
                                        "ip": "string"
                                      }
                                    ]
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ],
                      "image": "string",
                      "kibanaRef": [
                        "object",
                        {
                          "name": "string",
                          "namespace": "string",
                          "serviceName": "string"
                        }
                      ],
                      "mode": "string",
                      "secureSettings": [
                        "list",
                        [
                          "object",
                          {
                            "entries": [
                              "list",
                              [
                                "object",
                                {
                                  "key": "string",
                                  "path": "string"
                                }
                              ]
                            ],
                            "secretName": "string"
                          }
                        ]
                      ],
                      "serviceAccountName": "string",
                      "version": "string"
                    }
                  ]
                }
              ]
            },
            "timeouts": [],
            "wait": [],
            "wait_for": null
          },
          "sensitive_attributes": []
        }
      ]
    },
    {
      "mode": "managed",
      "type": "kubernetes_manifest",
      "name": "beat_heartbeat",
      "provider": "provider[\"registry.terraform.io/hashicorp/kubernetes\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "computed_fields": null,
            "field_manager": [],
            "manifest": {
              "value": {
                "apiVersion": "beat.k8s.elastic.co/v1beta1",
                "kind": "Beat",
                "metadata": {
                  "name": "heartbeat",
                  "namespace": "default"
                },
                "spec": {
                  "config": {
                    "heartbeat.monitors": [
                      {
                        "hosts": [
                          "elasticsearch-es-http.default.svc:9200"
                        ],
                        "schedule": "@every 5s",
                        "type": "tcp"
                      }
                    ]
                  },
                  "deployment": {
                    "podTemplate": {
                      "spec": {
                        "dnsPolicy": "ClusterFirstWithHostNet",
                        "securityContext": {
                          "runAsUser": 0
                        }
                      }
                    }
                  },
                  "elasticsearchRef": {
                    "name": "elasticsearch"
                  },
                  "type": "heartbeat",
                  "version": "8.0.0"
                }
              },
              "type": [
                "object",
                {
                  "apiVersion": "string",
                  "kind": "string",
                  "metadata": [
                    "object",
                    {
                      "name": "string",
                      "namespace": "string"
                    }
                  ],
                  "spec": [
                    "object",
                    {
                      "config": [
                        "object",
                        {
                          "heartbeat.monitors": [
                            "tuple",
                            [
                              [
                                "object",
                                {
                                  "hosts": [
                                    "tuple",
                                    [
                                      "string"
                                    ]
                                  ],
                                  "schedule": "string",
                                  "type": "string"
                                }
                              ]
                            ]
                          ]
                        }
                      ],
                      "deployment": [
                        "object",
                        {
                          "podTemplate": [
                            "object",
                            {
                              "spec": [
                                "object",
                                {
                                  "dnsPolicy": "string",
                                  "securityContext": [
                                    "object",
                                    {
                                      "runAsUser": "number"
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ],
                      "elasticsearchRef": [
                        "object",
                        {
                          "name": "string"
                        }
                      ],
                      "type": "string",
                      "version": "string"
                    }
                  ]
                }
              ]
            },
            "object": {
              "value": {
                "apiVersion": "beat.k8s.elastic.co/v1beta1",
                "kind": "Beat",
                "metadata": {
                  "annotations": null,
                  "clusterName": null,
                  "creationTimestamp": null,
                  "deletionGracePeriodSeconds": null,
                  "deletionTimestamp": null,
                  "finalizers": null,
                  "generateName": null,
                  "generation": null,
                  "labels": null,
                  "managedFields": null,
                  "name": "heartbeat",
                  "namespace": "default",
                  "ownerReferences": null,
                  "resourceVersion": null,
                  "selfLink": null,
                  "uid": null
                },
                "spec": {
                  "config": {
                    "heartbeat.monitors": [
                      {
                        "hosts": [
                          "elasticsearch-es-http.default.svc:9200"
                        ],
                        "schedule": "@every 5s",
                        "type": "tcp"
                      }
                    ]
                  },
                  "configRef": {
                    "secretName": null
                  },
                  "daemonSet": {
                    "podTemplate": null,
                    "updateStrategy": {
                      "rollingUpdate": {
                        "maxSurge": null,
                        "maxUnavailable": null
                      },
                      "type": null
                    }
                  },
                  "deployment": {
                    "podTemplate": {
                      "spec": {
                        "dnsPolicy": "ClusterFirstWithHostNet",
                        "securityContext": {
                          "runAsUser": 0
                        }
                      }
                    },
                    "replicas": null,
                    "strategy": {
                      "rollingUpdate": {
                        "maxSurge": null,
                        "maxUnavailable": null
                      },
                      "type": null
                    }
                  },
                  "elasticsearchRef": {
                    "name": "elasticsearch",
                    "namespace": null,
                    "serviceName": null
                  },
                  "image": null,
                  "kibanaRef": {
                    "name": null,
                    "namespace": null,
                    "serviceName": null
                  },
                  "secureSettings": null,
                  "serviceAccountName": null,
                  "type": "heartbeat",
                  "version": "8.0.0"
                }
              },
              "type": [
                "object",
                {
                  "apiVersion": "string",
                  "kind": "string",
                  "metadata": [
                    "object",
                    {
                      "annotations": [
                        "map",
                        "string"
                      ],
                      "clusterName": "string",
                      "creationTimestamp": "string",
                      "deletionGracePeriodSeconds": "number",
                      "deletionTimestamp": "string",
                      "finalizers": [
                        "list",
                        "string"
                      ],
                      "generateName": "string",
                      "generation": "number",
                      "labels": [
                        "map",
                        "string"
                      ],
                      "managedFields": [
                        "tuple",
                        [
                          [
                            "object",
                            {
                              "apiVersion": "string",
                              "fieldsType": "string",
                              "fieldsV1": "dynamic",
                              "manager": "string",
                              "operation": "string",
                              "time": "string"
                            }
                          ]
                        ]
                      ],
                      "name": "string",
                      "namespace": "string",
                      "ownerReferences": [
                        "list",
                        [
                          "object",
                          {
                            "apiVersion": "string",
                            "blockOwnerDeletion": "bool",
                            "controller": "bool",
                            "kind": "string",
                            "name": "string",
                            "uid": "string"
                          }
                        ]
                      ],
                      "resourceVersion": "string",
                      "selfLink": "string",
                      "uid": "string"
                    }
                  ],
                  "spec": [
                    "object",
                    {
                      "config": [
                        "object",
                        {
                          "heartbeat.monitors": [
                            "tuple",
                            [
                              [
                                "object",
                                {
                                  "hosts": [
                                    "tuple",
                                    [
                                      "string"
                                    ]
                                  ],
                                  "schedule": "string",
                                  "type": "string"
                                }
                              ]
                            ]
                          ]
                        }
                      ],
                      "configRef": [
                        "object",
                        {
                          "secretName": "string"
                        }
                      ],
                      "daemonSet": [
                        "object",
                        {
                          "podTemplate": "dynamic",
                          "updateStrategy": [
                            "object",
                            {
                              "rollingUpdate": [
                                "object",
                                {
                                  "maxSurge": "string",
                                  "maxUnavailable": "string"
                                }
                              ],
                              "type": "string"
                            }
                          ]
                        }
                      ],
                      "deployment": [
                        "object",
                        {
                          "podTemplate": [
                            "object",
                            {
                              "spec": [
                                "object",
                                {
                                  "dnsPolicy": "string",
                                  "securityContext": [
                                    "object",
                                    {
                                      "runAsUser": "number"
                                    }
                                  ]
                                }
                              ]
                            }
                          ],
                          "replicas": "number",
                          "strategy": [
                            "object",
                            {
                              "rollingUpdate": [
                                "object",
                                {
                                  "maxSurge": "string",
                                  "maxUnavailable": "string"
                                }
                              ],
                              "type": "string"
                            }
                          ]
                        }
                      ],
                      "elasticsearchRef": [
                        "object",
                        {
                          "name": "string",
                          "namespace": "string",
                          "serviceName": "string"
                        }
                      ],
                      "image": "string",
                      "kibanaRef": [
                        "object",
                        {
                          "name": "string",
                          "namespace": "string",
                          "serviceName": "string"
                        }
                      ],
                      "secureSettings": [
                        "list",
                        [
                          "object",
                          {
                            "entries": [
                              "list",
                              [
                                "object",
                                {
                                  "key": "string",
                                  "path": "string"
                                }
                              ]
                            ],
                            "secretName": "string"
                          }
                        ]
                      ],
                      "serviceAccountName": "string",
                      "type": "string",
                      "version": "string"
                    }
                  ]
                }
              ]
            },
            "timeouts": [],
            "wait": [],
            "wait_for": null
          },
          "sensitive_attributes": []
        }
      ]
    },
    {
      "mode": "managed",
      "type": "kubernetes_manifest",
      "name": "certificate_letsencrypt_cert",
      "provider": "provider[\"registry.terraform.io/hashicorp/kubernetes\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "computed_fields": null,
            "field_manager": [],
            "manifest": {
              "value": {
                "apiVersion": "cert-manager.io/v1",
                "kind": "Certificate",
                "metadata": {
                  "name": "letsencrypt-cert",
                  "namespace": "default"
                },
                "spec": {
                  "dnsNames": [
                    "kibana.framsouza.co",
                    "monitoring.framsouza.co"
                  ],
                  "issuerRef": {
                    "kind": "ClusterIssuer",
                    "name": "letsencrypt-production"
                  },
                  "secretName": "letsencrypt-cert"
                }
              },
              "type": [
                "object",
                {
                  "apiVersion": "string",
                  "kind": "string",
                  "metadata": [
                    "object",
                    {
                      "name": "string",
                      "namespace": "string"
                    }
                  ],
                  "spec": [
                    "object",
                    {
                      "dnsNames": [
                        "tuple",
                        [
                          "string",
                          "string"
                        ]
                      ],
                      "issuerRef": [
                        "object",
                        {
                          "kind": "string",
                          "name": "string"
                        }
                      ],
                      "secretName": "string"
                    }
                  ]
                }
              ]
            },
            "object": {
              "value": {
                "apiVersion": "cert-manager.io/v1",
                "kind": "Certificate",
                "metadata": {
                  "annotations": null,
                  "clusterName": null,
                  "creationTimestamp": null,
                  "deletionGracePeriodSeconds": null,
                  "deletionTimestamp": null,
                  "finalizers": null,
                  "generateName": null,
                  "generation": null,
                  "labels": null,
                  "managedFields": null,
                  "name": "letsencrypt-cert",
                  "namespace": "default",
                  "ownerReferences": null,
                  "resourceVersion": null,
                  "selfLink": null,
                  "uid": null
                },
                "spec": {
                  "additionalOutputFormats": null,
                  "commonName": null,
                  "dnsNames": [
                    "kibana.framsouza.co",
                    "monitoring.framsouza.co"
                  ],
                  "duration": null,
                  "emailAddresses": null,
                  "encodeUsagesInRequest": null,
                  "ipAddresses": null,
                  "isCA": null,
                  "issuerRef": {
                    "group": null,
                    "kind": "ClusterIssuer",
                    "name": "letsencrypt-production"
                  },
                  "keystores": {
                    "jks": {
                      "create": null,
                      "passwordSecretRef": {
                        "key": null,
                        "name": null
                      }
                    },
                    "pkcs12": {
                      "create": null,
                      "passwordSecretRef": {
                        "key": null,
                        "name": null
                      }
                    }
                  },
                  "privateKey": {
                    "algorithm": null,
                    "encoding": null,
                    "rotationPolicy": null,
                    "size": null
                  },
                  "renewBefore": null,
                  "revisionHistoryLimit": null,
                  "secretName": "letsencrypt-cert",
                  "secretTemplate": {
                    "annotations": null,
                    "labels": null
                  },
                  "subject": {
                    "countries": null,
                    "localities": null,
                    "organizationalUnits": null,
                    "organizations": null,
                    "postalCodes": null,
                    "provinces": null,
                    "serialNumber": null,
                    "streetAddresses": null
                  },
                  "uris": null,
                  "usages": null
                }
              },
              "type": [
                "object",
                {
                  "apiVersion": "string",
                  "kind": "string",
                  "metadata": [
                    "object",
                    {
                      "annotations": [
                        "map",
                        "string"
                      ],
                      "clusterName": "string",
                      "creationTimestamp": "string",
                      "deletionGracePeriodSeconds": "number",
                      "deletionTimestamp": "string",
                      "finalizers": [
                        "list",
                        "string"
                      ],
                      "generateName": "string",
                      "generation": "number",
                      "labels": [
                        "map",
                        "string"
                      ],
                      "managedFields": [
                        "tuple",
                        [
                          [
                            "object",
                            {
                              "apiVersion": "string",
                              "fieldsType": "string",
                              "fieldsV1": "dynamic",
                              "manager": "string",
                              "operation": "string",
                              "time": "string"
                            }
                          ]
                        ]
                      ],
                      "name": "string",
                      "namespace": "string",
                      "ownerReferences": [
                        "list",
                        [
                          "object",
                          {
                            "apiVersion": "string",
                            "blockOwnerDeletion": "bool",
                            "controller": "bool",
                            "kind": "string",
                            "name": "string",
                            "uid": "string"
                          }
                        ]
                      ],
                      "resourceVersion": "string",
                      "selfLink": "string",
                      "uid": "string"
                    }
                  ],
                  "spec": [
                    "object",
                    {
                      "additionalOutputFormats": [
                        "list",
                        [
                          "object",
                          {
                            "type": "string"
                          }
                        ]
                      ],
                      "commonName": "string",
                      "dnsNames": [
                        "list",
                        "string"
                      ],
                      "duration": "string",
                      "emailAddresses": [
                        "list",
                        "string"
                      ],
                      "encodeUsagesInRequest": "bool",
                      "ipAddresses": [
                        "list",
                        "string"
                      ],
                      "isCA": "bool",
                      "issuerRef": [
                        "object",
                        {
                          "group": "string",
                          "kind": "string",
                          "name": "string"
                        }
                      ],
                      "keystores": [
                        "object",
                        {
                          "jks": [
                            "object",
                            {
                              "create": "bool",
                              "passwordSecretRef": [
                                "object",
                                {
                                  "key": "string",
                                  "name": "string"
                                }
                              ]
                            }
                          ],
                          "pkcs12": [
                            "object",
                            {
                              "create": "bool",
                              "passwordSecretRef": [
                                "object",
                                {
                                  "key": "string",
                                  "name": "string"
                                }
                              ]
                            }
                          ]
                        }
                      ],
                      "privateKey": [
                        "object",
                        {
                          "algorithm": "string",
                          "encoding": "string",
                          "rotationPolicy": "string",
                          "size": "number"
                        }
                      ],
                      "renewBefore": "string",
                      "revisionHistoryLimit": "number",
                      "secretName": "string",
                      "secretTemplate": [
                        "object",
                        {
                          "annotations": [
                            "map",
                            "string"
                          ],
                          "labels": [
                            "map",
                            "string"
                          ]
                        }
                      ],
                      "subject": [
                        "object",
                        {
                          "countries": [
                            "list",
                            "string"
                          ],
                          "localities": [
                            "list",
                            "string"
                          ],
                          "organizationalUnits": [
                            "list",
                            "string"
                          ],
                          "organizations": [
                            "list",
                            "string"
                          ],
                          "postalCodes": [
                            "list",
                            "string"
                          ],
                          "provinces": [
                            "list",
                            "string"
                          ],
                          "serialNumber": "string",
                          "streetAddresses": [
                            "list",
                            "string"
                          ]
                        }
                      ],
                      "uris": [
                        "list",
                        "string"
                      ],
                      "usages": [
                        "list",
                        "string"
                      ]
                    }
                  ]
                }
              ]
            },
            "timeouts": [],
            "wait": [],
            "wait_for": null
          },
          "sensitive_attributes": []
        }
      ]
    },
    {
      "mode": "managed",
      "type": "kubernetes_manifest",
      "name": "clusterissuer_letsencrypt_production",
      "provider": "provider[\"registry.terraform.io/hashicorp/kubernetes\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "computed_fields": null,
            "field_manager": [],
            "manifest": {
              "value": {
                "apiVersion": "cert-manager.io/v1",
                "kind": "ClusterIssuer",
                "metadata": {
                  "name": "letsencrypt-production"
                },
                "spec": {
                  "acme": {
                    "email": "fsouza@elastic.co",
                    "privateKeySecretRef": {
                      "name": "issuer-letsencrypt-production"
                    },
                    "server": "https://acme-v02.api.letsencrypt.org/directory",
                    "solvers": [
                      {
                        "http01": {
                          "ingress": {
                            "class": "nginx"
                          }
                        }
                      }
                    ]
                  }
                }
              },
              "type": [
                "object",
                {
                  "apiVersion": "string",
                  "kind": "string",
                  "metadata": [
                    "object",
                    {
                      "name": "string"
                    }
                  ],
                  "spec": [
                    "object",
                    {
                      "acme": [
                        "object",
                        {
                          "email": "string",
                          "privateKeySecretRef": [
                            "object",
                            {
                              "name": "string"
                            }
                          ],
                          "server": "string",
                          "solvers": [
                            "tuple",
                            [
                              [
                                "object",
                                {
                                  "http01": [
                                    "object",
                                    {
                                      "ingress": [
                                        "object",
                                        {
                                          "class": "string"
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            ]
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "object": {
              "value": {
                "apiVersion": "cert-manager.io/v1",
                "kind": "ClusterIssuer",
                "metadata": {
                  "annotations": null,
                  "clusterName": null,
                  "creationTimestamp": null,
                  "deletionGracePeriodSeconds": null,
                  "deletionTimestamp": null,
                  "finalizers": null,
                  "generateName": null,
                  "generation": null,
                  "labels": null,
                  "managedFields": null,
                  "name": "letsencrypt-production",
                  "namespace": null,
                  "ownerReferences": null,
                  "resourceVersion": null,
                  "selfLink": null,
                  "uid": null
                },
                "spec": {
                  "acme": {
                    "disableAccountKeyGeneration": null,
                    "email": "fsouza@elastic.co",
                    "enableDurationFeature": null,
                    "externalAccountBinding": {
                      "keyAlgorithm": null,
                      "keyID": null,
                      "keySecretRef": {
                        "key": null,
                        "name": null
                      }
                    },
                    "preferredChain": "",
                    "privateKeySecretRef": {
                      "key": null,
                      "name": "issuer-letsencrypt-production"
                    },
                    "server": "https://acme-v02.api.letsencrypt.org/directory",
                    "skipTLSVerify": null,
                    "solvers": [
                      {
                        "dns01": {
                          "acmeDNS": {
                            "accountSecretRef": {
                              "key": null,
                              "name": null
                            },
                            "host": null
                          },
                          "akamai": {
                            "accessTokenSecretRef": {
                              "key": null,
                              "name": null
                            },
                            "clientSecretSecretRef": {
                              "key": null,
                              "name": null
                            },
                            "clientTokenSecretRef": {
                              "key": null,
                              "name": null
                            },
                            "serviceConsumerDomain": null
                          },
                          "azureDNS": {
                            "clientID": null,
                            "clientSecretSecretRef": {
                              "key": null,
                              "name": null
                            },
                            "environment": null,
                            "hostedZoneName": null,
                            "managedIdentity": {
                              "clientID": null,
                              "resourceID": null
                            },
                            "resourceGroupName": null,
                            "subscriptionID": null,
                            "tenantID": null
                          },
                          "cloudDNS": {
                            "hostedZoneName": null,
                            "project": null,
                            "serviceAccountSecretRef": {
                              "key": null,
                              "name": null
                            }
                          },
                          "cloudflare": {
                            "apiKeySecretRef": {
                              "key": null,
                              "name": null
                            },
                            "apiTokenSecretRef": {
                              "key": null,
                              "name": null
                            },
                            "email": null
                          },
                          "cnameStrategy": null,
                          "digitalocean": {
                            "tokenSecretRef": {
                              "key": null,
                              "name": null
                            }
                          },
                          "rfc2136": {
                            "nameserver": null,
                            "tsigAlgorithm": null,
                            "tsigKeyName": null,
                            "tsigSecretSecretRef": {
                              "key": null,
                              "name": null
                            }
                          },
                          "route53": {
                            "accessKeyID": null,
                            "hostedZoneID": null,
                            "region": null,
                            "role": null,
                            "secretAccessKeySecretRef": {
                              "key": null,
                              "name": null
                            }
                          },
                          "webhook": {
                            "config": null,
                            "groupName": null,
                            "solverName": null
                          }
                        },
                        "http01": {
                          "gatewayHTTPRoute": {
                            "labels": null,
                            "parentRefs": null,
                            "serviceType": null
                          },
                          "ingress": {
                            "class": "nginx",
                            "ingressTemplate": {
                              "metadata": {
                                "annotations": null,
                                "labels": null
                              }
                            },
                            "name": null,
                            "podTemplate": {
                              "metadata": {
                                "annotations": null,
                                "labels": null
                              },
                              "spec": {
                                "affinity": {
                                  "nodeAffinity": {
                                    "preferredDuringSchedulingIgnoredDuringExecution": null,
                                    "requiredDuringSchedulingIgnoredDuringExecution": {
                                      "nodeSelectorTerms": null
                                    }
                                  },
                                  "podAffinity": {
                                    "preferredDuringSchedulingIgnoredDuringExecution": null,
                                    "requiredDuringSchedulingIgnoredDuringExecution": null
                                  },
                                  "podAntiAffinity": {
                                    "preferredDuringSchedulingIgnoredDuringExecution": null,
                                    "requiredDuringSchedulingIgnoredDuringExecution": null
                                  }
                                },
                                "nodeSelector": null,
                                "priorityClassName": null,
                                "serviceAccountName": null,
                                "tolerations": null
                              }
                            },
                            "serviceType": null
                          }
                        },
                        "selector": {
                          "dnsNames": null,
                          "dnsZones": null,
                          "matchLabels": null
                        }
                      }
                    ]
                  },
                  "ca": {
                    "crlDistributionPoints": null,
                    "ocspServers": null,
                    "secretName": null
                  },
                  "selfSigned": {
                    "crlDistributionPoints": null
                  },
                  "vault": {
                    "auth": {
                      "appRole": {
                        "path": null,
                        "roleId": null,
                        "secretRef": {
                          "key": null,
                          "name": null
                        }
                      },
                      "kubernetes": {
                        "mountPath": null,
                        "role": null,
                        "secretRef": {
                          "key": null,
                          "name": null
                        }
                      },
                      "tokenSecretRef": {
                        "key": null,
                        "name": null
                      }
                    },
                    "caBundle": null,
                    "namespace": null,
                    "path": null,
                    "server": null
                  },
                  "venafi": {
                    "cloud": {
                      "apiTokenSecretRef": {
                        "key": null,
                        "name": null
                      },
                      "url": null
                    },
                    "tpp": {
                      "caBundle": null,
                      "credentialsRef": {
                        "name": null
                      },
                      "url": null
                    },
                    "zone": null
                  }
                }
              },
              "type": [
                "object",
                {
                  "apiVersion": "string",
                  "kind": "string",
                  "metadata": [
                    "object",
                    {
                      "annotations": [
                        "map",
                        "string"
                      ],
                      "clusterName": "string",
                      "creationTimestamp": "string",
                      "deletionGracePeriodSeconds": "number",
                      "deletionTimestamp": "string",
                      "finalizers": [
                        "list",
                        "string"
                      ],
                      "generateName": "string",
                      "generation": "number",
                      "labels": [
                        "map",
                        "string"
                      ],
                      "managedFields": [
                        "tuple",
                        [
                          [
                            "object",
                            {
                              "apiVersion": "string",
                              "fieldsType": "string",
                              "fieldsV1": "dynamic",
                              "manager": "string",
                              "operation": "string",
                              "time": "string"
                            }
                          ]
                        ]
                      ],
                      "name": "string",
                      "namespace": "string",
                      "ownerReferences": [
                        "list",
                        [
                          "object",
                          {
                            "apiVersion": "string",
                            "blockOwnerDeletion": "bool",
                            "controller": "bool",
                            "kind": "string",
                            "name": "string",
                            "uid": "string"
                          }
                        ]
                      ],
                      "resourceVersion": "string",
                      "selfLink": "string",
                      "uid": "string"
                    }
                  ],
                  "spec": [
                    "object",
                    {
                      "acme": [
                        "object",
                        {
                          "disableAccountKeyGeneration": "bool",
                          "email": "string",
                          "enableDurationFeature": "bool",
                          "externalAccountBinding": [
                            "object",
                            {
                              "keyAlgorithm": "string",
                              "keyID": "string",
                              "keySecretRef": [
                                "object",
                                {
                                  "key": "string",
                                  "name": "string"
                                }
                              ]
                            }
                          ],
                          "preferredChain": "string",
                          "privateKeySecretRef": [
                            "object",
                            {
                              "key": "string",
                              "name": "string"
                            }
                          ],
                          "server": "string",
                          "skipTLSVerify": "bool",
                          "solvers": [
                            "tuple",
                            [
                              [
                                "object",
                                {
                                  "dns01": [
                                    "object",
                                    {
                                      "acmeDNS": [
                                        "object",
                                        {
                                          "accountSecretRef": [
                                            "object",
                                            {
                                              "key": "string",
                                              "name": "string"
                                            }
                                          ],
                                          "host": "string"
                                        }
                                      ],
                                      "akamai": [
                                        "object",
                                        {
                                          "accessTokenSecretRef": [
                                            "object",
                                            {
                                              "key": "string",
                                              "name": "string"
                                            }
                                          ],
                                          "clientSecretSecretRef": [
                                            "object",
                                            {
                                              "key": "string",
                                              "name": "string"
                                            }
                                          ],
                                          "clientTokenSecretRef": [
                                            "object",
                                            {
                                              "key": "string",
                                              "name": "string"
                                            }
                                          ],
                                          "serviceConsumerDomain": "string"
                                        }
                                      ],
                                      "azureDNS": [
                                        "object",
                                        {
                                          "clientID": "string",
                                          "clientSecretSecretRef": [
                                            "object",
                                            {
                                              "key": "string",
                                              "name": "string"
                                            }
                                          ],
                                          "environment": "string",
                                          "hostedZoneName": "string",
                                          "managedIdentity": [
                                            "object",
                                            {
                                              "clientID": "string",
                                              "resourceID": "string"
                                            }
                                          ],
                                          "resourceGroupName": "string",
                                          "subscriptionID": "string",
                                          "tenantID": "string"
                                        }
                                      ],
                                      "cloudDNS": [
                                        "object",
                                        {
                                          "hostedZoneName": "string",
                                          "project": "string",
                                          "serviceAccountSecretRef": [
                                            "object",
                                            {
                                              "key": "string",
                                              "name": "string"
                                            }
                                          ]
                                        }
                                      ],
                                      "cloudflare": [
                                        "object",
                                        {
                                          "apiKeySecretRef": [
                                            "object",
                                            {
                                              "key": "string",
                                              "name": "string"
                                            }
                                          ],
                                          "apiTokenSecretRef": [
                                            "object",
                                            {
                                              "key": "string",
                                              "name": "string"
                                            }
                                          ],
                                          "email": "string"
                                        }
                                      ],
                                      "cnameStrategy": "string",
                                      "digitalocean": [
                                        "object",
                                        {
                                          "tokenSecretRef": [
                                            "object",
                                            {
                                              "key": "string",
                                              "name": "string"
                                            }
                                          ]
                                        }
                                      ],
                                      "rfc2136": [
                                        "object",
                                        {
                                          "nameserver": "string",
                                          "tsigAlgorithm": "string",
                                          "tsigKeyName": "string",
                                          "tsigSecretSecretRef": [
                                            "object",
                                            {
                                              "key": "string",
                                              "name": "string"
                                            }
                                          ]
                                        }
                                      ],
                                      "route53": [
                                        "object",
                                        {
                                          "accessKeyID": "string",
                                          "hostedZoneID": "string",
                                          "region": "string",
                                          "role": "string",
                                          "secretAccessKeySecretRef": [
                                            "object",
                                            {
                                              "key": "string",
                                              "name": "string"
                                            }
                                          ]
                                        }
                                      ],
                                      "webhook": [
                                        "object",
                                        {
                                          "config": "dynamic",
                                          "groupName": "string",
                                          "solverName": "string"
                                        }
                                      ]
                                    }
                                  ],
                                  "http01": [
                                    "object",
                                    {
                                      "gatewayHTTPRoute": [
                                        "object",
                                        {
                                          "labels": [
                                            "map",
                                            "string"
                                          ],
                                          "parentRefs": [
                                            "list",
                                            [
                                              "object",
                                              {
                                                "group": "string",
                                                "kind": "string",
                                                "name": "string",
                                                "namespace": "string",
                                                "sectionName": "string"
                                              }
                                            ]
                                          ],
                                          "serviceType": "string"
                                        }
                                      ],
                                      "ingress": [
                                        "object",
                                        {
                                          "class": "string",
                                          "ingressTemplate": [
                                            "object",
                                            {
                                              "metadata": [
                                                "object",
                                                {
                                                  "annotations": [
                                                    "map",
                                                    "string"
                                                  ],
                                                  "labels": [
                                                    "map",
                                                    "string"
                                                  ]
                                                }
                                              ]
                                            }
                                          ],
                                          "name": "string",
                                          "podTemplate": [
                                            "object",
                                            {
                                              "metadata": [
                                                "object",
                                                {
                                                  "annotations": [
                                                    "map",
                                                    "string"
                                                  ],
                                                  "labels": [
                                                    "map",
                                                    "string"
                                                  ]
                                                }
                                              ],
                                              "spec": [
                                                "object",
                                                {
                                                  "affinity": [
                                                    "object",
                                                    {
                                                      "nodeAffinity": [
                                                        "object",
                                                        {
                                                          "preferredDuringSchedulingIgnoredDuringExecution": [
                                                            "list",
                                                            [
                                                              "object",
                                                              {
                                                                "preference": [
                                                                  "object",
                                                                  {
                                                                    "matchExpressions": [
                                                                      "list",
                                                                      [
                                                                        "object",
                                                                        {
                                                                          "key": "string",
                                                                          "operator": "string",
                                                                          "values": [
                                                                            "list",
                                                                            "string"
                                                                          ]
                                                                        }
                                                                      ]
                                                                    ],
                                                                    "matchFields": [
                                                                      "list",
                                                                      [
                                                                        "object",
                                                                        {
                                                                          "key": "string",
                                                                          "operator": "string",
                                                                          "values": [
                                                                            "list",
                                                                            "string"
                                                                          ]
                                                                        }
                                                                      ]
                                                                    ]
                                                                  }
                                                                ],
                                                                "weight": "number"
                                                              }
                                                            ]
                                                          ],
                                                          "requiredDuringSchedulingIgnoredDuringExecution": [
                                                            "object",
                                                            {
                                                              "nodeSelectorTerms": [
                                                                "list",
                                                                [
                                                                  "object",
                                                                  {
                                                                    "matchExpressions": [
                                                                      "list",
                                                                      [
                                                                        "object",
                                                                        {
                                                                          "key": "string",
                                                                          "operator": "string",
                                                                          "values": [
                                                                            "list",
                                                                            "string"
                                                                          ]
                                                                        }
                                                                      ]
                                                                    ],
                                                                    "matchFields": [
                                                                      "list",
                                                                      [
                                                                        "object",
                                                                        {
                                                                          "key": "string",
                                                                          "operator": "string",
                                                                          "values": [
                                                                            "list",
                                                                            "string"
                                                                          ]
                                                                        }
                                                                      ]
                                                                    ]
                                                                  }
                                                                ]
                                                              ]
                                                            }
                                                          ]
                                                        }
                                                      ],
                                                      "podAffinity": [
                                                        "object",
                                                        {
                                                          "preferredDuringSchedulingIgnoredDuringExecution": [
                                                            "list",
                                                            [
                                                              "object",
                                                              {
                                                                "podAffinityTerm": [
                                                                  "object",
                                                                  {
                                                                    "labelSelector": [
                                                                      "object",
                                                                      {
                                                                        "matchExpressions": [
                                                                          "list",
                                                                          [
                                                                            "object",
                                                                            {
                                                                              "key": "string",
                                                                              "operator": "string",
                                                                              "values": [
                                                                                "list",
                                                                                "string"
                                                                              ]
                                                                            }
                                                                          ]
                                                                        ],
                                                                        "matchLabels": [
                                                                          "map",
                                                                          "string"
                                                                        ]
                                                                      }
                                                                    ],
                                                                    "namespaceSelector": [
                                                                      "object",
                                                                      {
                                                                        "matchExpressions": [
                                                                          "list",
                                                                          [
                                                                            "object",
                                                                            {
                                                                              "key": "string",
                                                                              "operator": "string",
                                                                              "values": [
                                                                                "list",
                                                                                "string"
                                                                              ]
                                                                            }
                                                                          ]
                                                                        ],
                                                                        "matchLabels": [
                                                                          "map",
                                                                          "string"
                                                                        ]
                                                                      }
                                                                    ],
                                                                    "namespaces": [
                                                                      "list",
                                                                      "string"
                                                                    ],
                                                                    "topologyKey": "string"
                                                                  }
                                                                ],
                                                                "weight": "number"
                                                              }
                                                            ]
                                                          ],
                                                          "requiredDuringSchedulingIgnoredDuringExecution": [
                                                            "list",
                                                            [
                                                              "object",
                                                              {
                                                                "labelSelector": [
                                                                  "object",
                                                                  {
                                                                    "matchExpressions": [
                                                                      "list",
                                                                      [
                                                                        "object",
                                                                        {
                                                                          "key": "string",
                                                                          "operator": "string",
                                                                          "values": [
                                                                            "list",
                                                                            "string"
                                                                          ]
                                                                        }
                                                                      ]
                                                                    ],
                                                                    "matchLabels": [
                                                                      "map",
                                                                      "string"
                                                                    ]
                                                                  }
                                                                ],
                                                                "namespaceSelector": [
                                                                  "object",
                                                                  {
                                                                    "matchExpressions": [
                                                                      "list",
                                                                      [
                                                                        "object",
                                                                        {
                                                                          "key": "string",
                                                                          "operator": "string",
                                                                          "values": [
                                                                            "list",
                                                                            "string"
                                                                          ]
                                                                        }
                                                                      ]
                                                                    ],
                                                                    "matchLabels": [
                                                                      "map",
                                                                      "string"
                                                                    ]
                                                                  }
                                                                ],
                                                                "namespaces": [
                                                                  "list",
                                                                  "string"
                                                                ],
                                                                "topologyKey": "string"
                                                              }
                                                            ]
                                                          ]
                                                        }
                                                      ],
                                                      "podAntiAffinity": [
                                                        "object",
                                                        {
                                                          "preferredDuringSchedulingIgnoredDuringExecution": [
                                                            "list",
                                                            [
                                                              "object",
                                                              {
                                                                "podAffinityTerm": [
                                                                  "object",
                                                                  {
                                                                    "labelSelector": [
                                                                      "object",
                                                                      {
                                                                        "matchExpressions": [
                                                                          "list",
                                                                          [
                                                                            "object",
                                                                            {
                                                                              "key": "string",
                                                                              "operator": "string",
                                                                              "values": [
                                                                                "list",
                                                                                "string"
                                                                              ]
                                                                            }
                                                                          ]
                                                                        ],
                                                                        "matchLabels": [
                                                                          "map",
                                                                          "string"
                                                                        ]
                                                                      }
                                                                    ],
                                                                    "namespaceSelector": [
                                                                      "object",
                                                                      {
                                                                        "matchExpressions": [
                                                                          "list",
                                                                          [
                                                                            "object",
                                                                            {
                                                                              "key": "string",
                                                                              "operator": "string",
                                                                              "values": [
                                                                                "list",
                                                                                "string"
                                                                              ]
                                                                            }
                                                                          ]
                                                                        ],
                                                                        "matchLabels": [
                                                                          "map",
                                                                          "string"
                                                                        ]
                                                                      }
                                                                    ],
                                                                    "namespaces": [
                                                                      "list",
                                                                      "string"
                                                                    ],
                                                                    "topologyKey": "string"
                                                                  }
                                                                ],
                                                                "weight": "number"
                                                              }
                                                            ]
                                                          ],
                                                          "requiredDuringSchedulingIgnoredDuringExecution": [
                                                            "list",
                                                            [
                                                              "object",
                                                              {
                                                                "labelSelector": [
                                                                  "object",
                                                                  {
                                                                    "matchExpressions": [
                                                                      "list",
                                                                      [
                                                                        "object",
                                                                        {
                                                                          "key": "string",
                                                                          "operator": "string",
                                                                          "values": [
                                                                            "list",
                                                                            "string"
                                                                          ]
                                                                        }
                                                                      ]
                                                                    ],
                                                                    "matchLabels": [
                                                                      "map",
                                                                      "string"
                                                                    ]
                                                                  }
                                                                ],
                                                                "namespaceSelector": [
                                                                  "object",
                                                                  {
                                                                    "matchExpressions": [
                                                                      "list",
                                                                      [
                                                                        "object",
                                                                        {
                                                                          "key": "string",
                                                                          "operator": "string",
                                                                          "values": [
                                                                            "list",
                                                                            "string"
                                                                          ]
                                                                        }
                                                                      ]
                                                                    ],
                                                                    "matchLabels": [
                                                                      "map",
                                                                      "string"
                                                                    ]
                                                                  }
                                                                ],
                                                                "namespaces": [
                                                                  "list",
                                                                  "string"
                                                                ],
                                                                "topologyKey": "string"
                                                              }
                                                            ]
                                                          ]
                                                        }
                                                      ]
                                                    }
                                                  ],
                                                  "nodeSelector": [
                                                    "map",
                                                    "string"
                                                  ],
                                                  "priorityClassName": "string",
                                                  "serviceAccountName": "string",
                                                  "tolerations": [
                                                    "list",
                                                    [
                                                      "object",
                                                      {
                                                        "effect": "string",
                                                        "key": "string",
                                                        "operator": "string",
                                                        "tolerationSeconds": "number",
                                                        "value": "string"
                                                      }
                                                    ]
                                                  ]
                                                }
                                              ]
                                            }
                                          ],
                                          "serviceType": "string"
                                        }
                                      ]
                                    }
                                  ],
                                  "selector": [
                                    "object",
                                    {
                                      "dnsNames": [
                                        "list",
                                        "string"
                                      ],
                                      "dnsZones": [
                                        "list",
                                        "string"
                                      ],
                                      "matchLabels": [
                                        "map",
                                        "string"
                                      ]
                                    }
                                  ]
                                }
                              ]
                            ]
                          ]
                        }
                      ],
                      "ca": [
                        "object",
                        {
                          "crlDistributionPoints": [
                            "list",
                            "string"
                          ],
                          "ocspServers": [
                            "list",
                            "string"
                          ],
                          "secretName": "string"
                        }
                      ],
                      "selfSigned": [
                        "object",
                        {
                          "crlDistributionPoints": [
                            "list",
                            "string"
                          ]
                        }
                      ],
                      "vault": [
                        "object",
                        {
                          "auth": [
                            "object",
                            {
                              "appRole": [
                                "object",
                                {
                                  "path": "string",
                                  "roleId": "string",
                                  "secretRef": [
                                    "object",
                                    {
                                      "key": "string",
                                      "name": "string"
                                    }
                                  ]
                                }
                              ],
                              "kubernetes": [
                                "object",
                                {
                                  "mountPath": "string",
                                  "role": "string",
                                  "secretRef": [
                                    "object",
                                    {
                                      "key": "string",
                                      "name": "string"
                                    }
                                  ]
                                }
                              ],
                              "tokenSecretRef": [
                                "object",
                                {
                                  "key": "string",
                                  "name": "string"
                                }
                              ]
                            }
                          ],
                          "caBundle": "string",
                          "namespace": "string",
                          "path": "string",
                          "server": "string"
                        }
                      ],
                      "venafi": [
                        "object",
                        {
                          "cloud": [
                            "object",
                            {
                              "apiTokenSecretRef": [
                                "object",
                                {
                                  "key": "string",
                                  "name": "string"
                                }
                              ],
                              "url": "string"
                            }
                          ],
                          "tpp": [
                            "object",
                            {
                              "caBundle": "string",
                              "credentialsRef": [
                                "object",
                                {
                                  "name": "string"
                                }
                              ],
                              "url": "string"
                            }
                          ],
                          "zone": "string"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "timeouts": [],
            "wait": [],
            "wait_for": null
          },
          "sensitive_attributes": []
        }
      ]
    },
    {
      "mode": "managed",
      "type": "kubernetes_manifest",
      "name": "clusterrole_elastic_agent",
      "provider": "provider[\"registry.terraform.io/hashicorp/kubernetes\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "computed_fields": null,
            "field_manager": [],
            "manifest": {
              "value": {
                "apiVersion": "rbac.authorization.k8s.io/v1",
                "kind": "ClusterRole",
                "metadata": {
                  "name": "elastic-agent"
                },
                "rules": [
                  {
                    "apiGroups": [
                      ""
                    ],
                    "resources": [
                      "pods",
                      "nodes",
                      "namespaces",
                      "events",
                      "services",
                      "configmaps"
                    ],
                    "verbs": [
                      "get",
                      "watch",
                      "list"
                    ]
                  },
                  {
                    "apiGroups": [
                      "coordination.k8s.io"
                    ],
                    "resources": [
                      "leases"
                    ],
                    "verbs": [
                      "get",
                      "create",
                      "update"
                    ]
                  },
                  {
                    "nonResourceURLs": [
                      "/metrics"
                    ],
                    "verbs": [
                      "get"
                    ]
                  },
                  {
                    "apiGroups": [
                      "extensions"
                    ],
                    "resources": [
                      "replicasets"
                    ],
                    "verbs": [
                      "get",
                      "list",
                      "watch"
                    ]
                  },
                  {
                    "apiGroups": [
                      "apps"
                    ],
                    "resources": [
                      "statefulsets",
                      "deployments",
                      "replicasets"
                    ],
                    "verbs": [
                      "get",
                      "list",
                      "watch"
                    ]
                  },
                  {
                    "apiGroups": [
                      ""
                    ],
                    "resources": [
                      "nodes/stats"
                    ],
                    "verbs": [
                      "get"
                    ]
                  },
                  {
                    "apiGroups": [
                      "batch"
                    ],
                    "resources": [
                      "jobs"
                    ],
                    "verbs": [
                      "get",
                      "list",
                      "watch"
                    ]
                  }
                ]
              },
              "type": [
                "object",
                {
                  "apiVersion": "string",
                  "kind": "string",
                  "metadata": [
                    "object",
                    {
                      "name": "string"
                    }
                  ],
                  "rules": [
                    "tuple",
                    [
                      [
                        "object",
                        {
                          "apiGroups": [
                            "tuple",
                            [
                              "string"
                            ]
                          ],
                          "resources": [
                            "tuple",
                            [
                              "string",
                              "string",
                              "string",
                              "string",
                              "string",
                              "string"
                            ]
                          ],
                          "verbs": [
                            "tuple",
                            [
                              "string",
                              "string",
                              "string"
                            ]
                          ]
                        }
                      ],
                      [
                        "object",
                        {
                          "apiGroups": [
                            "tuple",
                            [
                              "string"
                            ]
                          ],
                          "resources": [
                            "tuple",
                            [
                              "string"
                            ]
                          ],
                          "verbs": [
                            "tuple",
                            [
                              "string",
                              "string",
                              "string"
                            ]
                          ]
                        }
                      ],
                      [
                        "object",
                        {
                          "nonResourceURLs": [
                            "tuple",
                            [
                              "string"
                            ]
                          ],
                          "verbs": [
                            "tuple",
                            [
                              "string"
                            ]
                          ]
                        }
                      ],
                      [
                        "object",
                        {
                          "apiGroups": [
                            "tuple",
                            [
                              "string"
                            ]
                          ],
                          "resources": [
                            "tuple",
                            [
                              "string"
                            ]
                          ],
                          "verbs": [
                            "tuple",
                            [
                              "string",
                              "string",
                              "string"
                            ]
                          ]
                        }
                      ],
                      [
                        "object",
                        {
                          "apiGroups": [
                            "tuple",
                            [
                              "string"
                            ]
                          ],
                          "resources": [
                            "tuple",
                            [
                              "string",
                              "string",
                              "string"
                            ]
                          ],
                          "verbs": [
                            "tuple",
                            [
                              "string",
                              "string",
                              "string"
                            ]
                          ]
                        }
                      ],
                      [
                        "object",
                        {
                          "apiGroups": [
                            "tuple",
                            [
                              "string"
                            ]
                          ],
                          "resources": [
                            "tuple",
                            [
                              "string"
                            ]
                          ],
                          "verbs": [
                            "tuple",
                            [
                              "string"
                            ]
                          ]
                        }
                      ],
                      [
                        "object",
                        {
                          "apiGroups": [
                            "tuple",
                            [
                              "string"
                            ]
                          ],
                          "resources": [
                            "tuple",
                            [
                              "string"
                            ]
                          ],
                          "verbs": [
                            "tuple",
                            [
                              "string",
                              "string",
                              "string"
                            ]
                          ]
                        }
                      ]
                    ]
                  ]
                }
              ]
            },
            "object": {
              "value": {
                "aggregationRule": {
                  "clusterRoleSelectors": null
                },
                "apiVersion": "rbac.authorization.k8s.io/v1",
                "kind": "ClusterRole",
                "metadata": {
                  "annotations": null,
                  "clusterName": null,
                  "creationTimestamp": null,
                  "deletionGracePeriodSeconds": null,
                  "deletionTimestamp": null,
                  "finalizers": null,
                  "generateName": null,
                  "generation": null,
                  "labels": null,
                  "managedFields": null,
                  "name": "elastic-agent",
                  "namespace": null,
                  "ownerReferences": null,
                  "resourceVersion": null,
                  "selfLink": null,
                  "uid": null
                },
                "rules": [
                  {
                    "apiGroups": [
                      ""
                    ],
                    "nonResourceURLs": null,
                    "resourceNames": null,
                    "resources": [
                      "pods",
                      "nodes",
                      "namespaces",
                      "events",
                      "services",
                      "configmaps"
                    ],
                    "verbs": [
                      "get",
                      "watch",
                      "list"
                    ]
                  },
                  {
                    "apiGroups": [
                      "coordination.k8s.io"
                    ],
                    "nonResourceURLs": null,
                    "resourceNames": null,
                    "resources": [
                      "leases"
                    ],
                    "verbs": [
                      "get",
                      "create",
                      "update"
                    ]
                  },
                  {
                    "apiGroups": null,
                    "nonResourceURLs": [
                      "/metrics"
                    ],
                    "resourceNames": null,
                    "resources": null,
                    "verbs": [
                      "get"
                    ]
                  },
                  {
                    "apiGroups": [
                      "extensions"
                    ],
                    "nonResourceURLs": null,
                    "resourceNames": null,
                    "resources": [
                      "replicasets"
                    ],
                    "verbs": [
                      "get",
                      "list",
                      "watch"
                    ]
                  },
                  {
                    "apiGroups": [
                      "apps"
                    ],
                    "nonResourceURLs": null,
                    "resourceNames": null,
                    "resources": [
                      "statefulsets",
                      "deployments",
                      "replicasets"
                    ],
                    "verbs": [
                      "get",
                      "list",
                      "watch"
                    ]
                  },
                  {
                    "apiGroups": [
                      ""
                    ],
                    "nonResourceURLs": null,
                    "resourceNames": null,
                    "resources": [
                      "nodes/stats"
                    ],
                    "verbs": [
                      "get"
                    ]
                  },
                  {
                    "apiGroups": [
                      "batch"
                    ],
                    "nonResourceURLs": null,
                    "resourceNames": null,
                    "resources": [
                      "jobs"
                    ],
                    "verbs": [
                      "get",
                      "list",
                      "watch"
                    ]
                  }
                ]
              },
              "type": [
                "object",
                {
                  "aggregationRule": [
                    "object",
                    {
                      "clusterRoleSelectors": [
                        "list",
                        [
                          "object",
                          {
                            "matchExpressions": [
                              "list",
                              [
                                "object",
                                {
                                  "key": "string",
                                  "operator": "string",
                                  "values": [
                                    "list",
                                    "string"
                                  ]
                                }
                              ]
                            ],
                            "matchLabels": [
                              "map",
                              "string"
                            ]
                          }
                        ]
                      ]
                    }
                  ],
                  "apiVersion": "string",
                  "kind": "string",
                  "metadata": [
                    "object",
                    {
                      "annotations": [
                        "map",
                        "string"
                      ],
                      "clusterName": "string",
                      "creationTimestamp": "string",
                      "deletionGracePeriodSeconds": "number",
                      "deletionTimestamp": "string",
                      "finalizers": [
                        "list",
                        "string"
                      ],
                      "generateName": "string",
                      "generation": "number",
                      "labels": [
                        "map",
                        "string"
                      ],
                      "managedFields": [
                        "tuple",
                        [
                          [
                            "object",
                            {
                              "apiVersion": "string",
                              "fieldsType": "string",
                              "fieldsV1": "dynamic",
                              "manager": "string",
                              "operation": "string",
                              "time": "string"
                            }
                          ]
                        ]
                      ],
                      "name": "string",
                      "namespace": "string",
                      "ownerReferences": [
                        "list",
                        [
                          "object",
                          {
                            "apiVersion": "string",
                            "blockOwnerDeletion": "bool",
                            "controller": "bool",
                            "kind": "string",
                            "name": "string",
                            "uid": "string"
                          }
                        ]
                      ],
                      "resourceVersion": "string",
                      "selfLink": "string",
                      "uid": "string"
                    }
                  ],
                  "rules": [
                    "list",
                    [
                      "object",
                      {
                        "apiGroups": [
                          "list",
                          "string"
                        ],
                        "nonResourceURLs": [
                          "list",
                          "string"
                        ],
                        "resourceNames": [
                          "list",
                          "string"
                        ],
                        "resources": [
                          "list",
                          "string"
                        ],
                        "verbs": [
                          "list",
                          "string"
                        ]
                      }
                    ]
                  ]
                }
              ]
            },
            "timeouts": [],
            "wait": [],
            "wait_for": null
          },
          "sensitive_attributes": []
        }
      ]
    },
    {
      "mode": "managed",
      "type": "kubernetes_manifest",
      "name": "clusterrole_external_dns",
      "provider": "provider[\"registry.terraform.io/hashicorp/kubernetes\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "computed_fields": null,
            "field_manager": [],
            "manifest": {
              "value": {
                "apiVersion": "rbac.authorization.k8s.io/v1",
                "kind": "ClusterRole",
                "metadata": {
                  "name": "external-dns"
                },
                "rules": [
                  {
                    "apiGroups": [
                      ""
                    ],
                    "resources": [
                      "services",
                      "endpoints",
                      "pods"
                    ],
                    "verbs": [
                      "get",
                      "watch",
                      "list"
                    ]
                  },
                  {
                    "apiGroups": [
                      "extensions",
                      "networking.k8s.io"
                    ],
                    "resources": [
                      "ingresses"
                    ],
                    "verbs": [
                      "get",
                      "watch",
                      "list"
                    ]
                  },
                  {
                    "apiGroups": [
                      ""
                    ],
                    "resources": [
                      "nodes"
                    ],
                    "verbs": [
                      "list",
                      "watch"
                    ]
                  }
                ]
              },
              "type": [
                "object",
                {
                  "apiVersion": "string",
                  "kind": "string",
                  "metadata": [
                    "object",
                    {
                      "name": "string"
                    }
                  ],
                  "rules": [
                    "tuple",
                    [
                      [
                        "object",
                        {
                          "apiGroups": [
                            "tuple",
                            [
                              "string"
                            ]
                          ],
                          "resources": [
                            "tuple",
                            [
                              "string",
                              "string",
                              "string"
                            ]
                          ],
                          "verbs": [
                            "tuple",
                            [
                              "string",
                              "string",
                              "string"
                            ]
                          ]
                        }
                      ],
                      [
                        "object",
                        {
                          "apiGroups": [
                            "tuple",
                            [
                              "string",
                              "string"
                            ]
                          ],
                          "resources": [
                            "tuple",
                            [
                              "string"
                            ]
                          ],
                          "verbs": [
                            "tuple",
                            [
                              "string",
                              "string",
                              "string"
                            ]
                          ]
                        }
                      ],
                      [
                        "object",
                        {
                          "apiGroups": [
                            "tuple",
                            [
                              "string"
                            ]
                          ],
                          "resources": [
                            "tuple",
                            [
                              "string"
                            ]
                          ],
                          "verbs": [
                            "tuple",
                            [
                              "string",
                              "string"
                            ]
                          ]
                        }
                      ]
                    ]
                  ]
                }
              ]
            },
            "object": {
              "value": {
                "aggregationRule": {
                  "clusterRoleSelectors": null
                },
                "apiVersion": "rbac.authorization.k8s.io/v1",
                "kind": "ClusterRole",
                "metadata": {
                  "annotations": null,
                  "clusterName": null,
                  "creationTimestamp": null,
                  "deletionGracePeriodSeconds": null,
                  "deletionTimestamp": null,
                  "finalizers": null,
                  "generateName": null,
                  "generation": null,
                  "labels": null,
                  "managedFields": null,
                  "name": "external-dns",
                  "namespace": null,
                  "ownerReferences": null,
                  "resourceVersion": null,
                  "selfLink": null,
                  "uid": null
                },
                "rules": [
                  {
                    "apiGroups": [
                      ""
                    ],
                    "nonResourceURLs": null,
                    "resourceNames": null,
                    "resources": [
                      "services",
                      "endpoints",
                      "pods"
                    ],
                    "verbs": [
                      "get",
                      "watch",
                      "list"
                    ]
                  },
                  {
                    "apiGroups": [
                      "extensions",
                      "networking.k8s.io"
                    ],
                    "nonResourceURLs": null,
                    "resourceNames": null,
                    "resources": [
                      "ingresses"
                    ],
                    "verbs": [
                      "get",
                      "watch",
                      "list"
                    ]
                  },
                  {
                    "apiGroups": [
                      ""
                    ],
                    "nonResourceURLs": null,
                    "resourceNames": null,
                    "resources": [
                      "nodes"
                    ],
                    "verbs": [
                      "list",
                      "watch"
                    ]
                  }
                ]
              },
              "type": [
                "object",
                {
                  "aggregationRule": [
                    "object",
                    {
                      "clusterRoleSelectors": [
                        "list",
                        [
                          "object",
                          {
                            "matchExpressions": [
                              "list",
                              [
                                "object",
                                {
                                  "key": "string",
                                  "operator": "string",
                                  "values": [
                                    "list",
                                    "string"
                                  ]
                                }
                              ]
                            ],
                            "matchLabels": [
                              "map",
                              "string"
                            ]
                          }
                        ]
                      ]
                    }
                  ],
                  "apiVersion": "string",
                  "kind": "string",
                  "metadata": [
                    "object",
                    {
                      "annotations": [
                        "map",
                        "string"
                      ],
                      "clusterName": "string",
                      "creationTimestamp": "string",
                      "deletionGracePeriodSeconds": "number",
                      "deletionTimestamp": "string",
                      "finalizers": [
                        "list",
                        "string"
                      ],
                      "generateName": "string",
                      "generation": "number",
                      "labels": [
                        "map",
                        "string"
                      ],
                      "managedFields": [
                        "tuple",
                        [
                          [
                            "object",
                            {
                              "apiVersion": "string",
                              "fieldsType": "string",
                              "fieldsV1": "dynamic",
                              "manager": "string",
                              "operation": "string",
                              "time": "string"
                            }
                          ]
                        ]
                      ],
                      "name": "string",
                      "namespace": "string",
                      "ownerReferences": [
                        "list",
                        [
                          "object",
                          {
                            "apiVersion": "string",
                            "blockOwnerDeletion": "bool",
                            "controller": "bool",
                            "kind": "string",
                            "name": "string",
                            "uid": "string"
                          }
                        ]
                      ],
                      "resourceVersion": "string",
                      "selfLink": "string",
                      "uid": "string"
                    }
                  ],
                  "rules": [
                    "list",
                    [
                      "object",
                      {
                        "apiGroups": [
                          "list",
                          "string"
                        ],
                        "nonResourceURLs": [
                          "list",
                          "string"
                        ],
                        "resourceNames": [
                          "list",
                          "string"
                        ],
                        "resources": [
                          "list",
                          "string"
                        ],
                        "verbs": [
                          "list",
                          "string"
                        ]
                      }
                    ]
                  ]
                }
              ]
            },
            "timeouts": [],
            "wait": [],
            "wait_for": null
          },
          "sensitive_attributes": []
        }
      ]
    },
    {
      "mode": "managed",
      "type": "kubernetes_manifest",
      "name": "clusterrole_fleet_server",
      "provider": "provider[\"registry.terraform.io/hashicorp/kubernetes\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "computed_fields": null,
            "field_manager": [],
            "manifest": {
              "value": {
                "apiVersion": "rbac.authorization.k8s.io/v1",
                "kind": "ClusterRole",
                "metadata": {
                  "name": "fleet-server"
                },
                "rules": [
                  {
                    "apiGroups": [
                      ""
                    ],
                    "resources": [
                      "pods",
                      "namespaces",
                      "nodes"
                    ],
                    "verbs": [
                      "get",
                      "watch",
                      "list"
                    ]
                  },
                  {
                    "apiGroups": [
                      "coordination.k8s.io"
                    ],
                    "resources": [
                      "leases"
                    ],
                    "verbs": [
                      "get",
                      "create",
                      "update"
                    ]
                  }
                ]
              },
              "type": [
                "object",
                {
                  "apiVersion": "string",
                  "kind": "string",
                  "metadata": [
                    "object",
                    {
                      "name": "string"
                    }
                  ],
                  "rules": [
                    "tuple",
                    [
                      [
                        "object",
                        {
                          "apiGroups": [
                            "tuple",
                            [
                              "string"
                            ]
                          ],
                          "resources": [
                            "tuple",
                            [
                              "string",
                              "string",
                              "string"
                            ]
                          ],
                          "verbs": [
                            "tuple",
                            [
                              "string",
                              "string",
                              "string"
                            ]
                          ]
                        }
                      ],
                      [
                        "object",
                        {
                          "apiGroups": [
                            "tuple",
                            [
                              "string"
                            ]
                          ],
                          "resources": [
                            "tuple",
                            [
                              "string"
                            ]
                          ],
                          "verbs": [
                            "tuple",
                            [
                              "string",
                              "string",
                              "string"
                            ]
                          ]
                        }
                      ]
                    ]
                  ]
                }
              ]
            },
            "object": {
              "value": {
                "aggregationRule": {
                  "clusterRoleSelectors": null
                },
                "apiVersion": "rbac.authorization.k8s.io/v1",
                "kind": "ClusterRole",
                "metadata": {
                  "annotations": null,
                  "clusterName": null,
                  "creationTimestamp": null,
                  "deletionGracePeriodSeconds": null,
                  "deletionTimestamp": null,
                  "finalizers": null,
                  "generateName": null,
                  "generation": null,
                  "labels": null,
                  "managedFields": null,
                  "name": "fleet-server",
                  "namespace": null,
                  "ownerReferences": null,
                  "resourceVersion": null,
                  "selfLink": null,
                  "uid": null
                },
                "rules": [
                  {
                    "apiGroups": [
                      ""
                    ],
                    "nonResourceURLs": null,
                    "resourceNames": null,
                    "resources": [
                      "pods",
                      "namespaces",
                      "nodes"
                    ],
                    "verbs": [
                      "get",
                      "watch",
                      "list"
                    ]
                  },
                  {
                    "apiGroups": [
                      "coordination.k8s.io"
                    ],
                    "nonResourceURLs": null,
                    "resourceNames": null,
                    "resources": [
                      "leases"
                    ],
                    "verbs": [
                      "get",
                      "create",
                      "update"
                    ]
                  }
                ]
              },
              "type": [
                "object",
                {
                  "aggregationRule": [
                    "object",
                    {
                      "clusterRoleSelectors": [
                        "list",
                        [
                          "object",
                          {
                            "matchExpressions": [
                              "list",
                              [
                                "object",
                                {
                                  "key": "string",
                                  "operator": "string",
                                  "values": [
                                    "list",
                                    "string"
                                  ]
                                }
                              ]
                            ],
                            "matchLabels": [
                              "map",
                              "string"
                            ]
                          }
                        ]
                      ]
                    }
                  ],
                  "apiVersion": "string",
                  "kind": "string",
                  "metadata": [
                    "object",
                    {
                      "annotations": [
                        "map",
                        "string"
                      ],
                      "clusterName": "string",
                      "creationTimestamp": "string",
                      "deletionGracePeriodSeconds": "number",
                      "deletionTimestamp": "string",
                      "finalizers": [
                        "list",
                        "string"
                      ],
                      "generateName": "string",
                      "generation": "number",
                      "labels": [
                        "map",
                        "string"
                      ],
                      "managedFields": [
                        "tuple",
                        [
                          [
                            "object",
                            {
                              "apiVersion": "string",
                              "fieldsType": "string",
                              "fieldsV1": "dynamic",
                              "manager": "string",
                              "operation": "string",
                              "time": "string"
                            }
                          ]
                        ]
                      ],
                      "name": "string",
                      "namespace": "string",
                      "ownerReferences": [
                        "list",
                        [
                          "object",
                          {
                            "apiVersion": "string",
                            "blockOwnerDeletion": "bool",
                            "controller": "bool",
                            "kind": "string",
                            "name": "string",
                            "uid": "string"
                          }
                        ]
                      ],
                      "resourceVersion": "string",
                      "selfLink": "string",
                      "uid": "string"
                    }
                  ],
                  "rules": [
                    "list",
                    [
                      "object",
                      {
                        "apiGroups": [
                          "list",
                          "string"
                        ],
                        "nonResourceURLs": [
                          "list",
                          "string"
                        ],
                        "resourceNames": [
                          "list",
                          "string"
                        ],
                        "resources": [
                          "list",
                          "string"
                        ],
                        "verbs": [
                          "list",
                          "string"
                        ]
                      }
                    ]
                  ]
                }
              ]
            },
            "timeouts": [],
            "wait": [],
            "wait_for": null
          },
          "sensitive_attributes": []
        }
      ]
    },
    {
      "mode": "managed",
      "type": "kubernetes_manifest",
      "name": "clusterrolebinding_elastic_agent",
      "provider": "provider[\"registry.terraform.io/hashicorp/kubernetes\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "computed_fields": null,
            "field_manager": [],
            "manifest": {
              "value": {
                "apiVersion": "rbac.authorization.k8s.io/v1",
                "kind": "ClusterRoleBinding",
                "metadata": {
                  "name": "elastic-agent"
                },
                "roleRef": {
                  "apiGroup": "rbac.authorization.k8s.io",
                  "kind": "ClusterRole",
                  "name": "elastic-agent"
                },
                "subjects": [
                  {
                    "kind": "ServiceAccount",
                    "name": "elastic-agent",
                    "namespace": "default"
                  }
                ]
              },
              "type": [
                "object",
                {
                  "apiVersion": "string",
                  "kind": "string",
                  "metadata": [
                    "object",
                    {
                      "name": "string"
                    }
                  ],
                  "roleRef": [
                    "object",
                    {
                      "apiGroup": "string",
                      "kind": "string",
                      "name": "string"
                    }
                  ],
                  "subjects": [
                    "tuple",
                    [
                      [
                        "object",
                        {
                          "kind": "string",
                          "name": "string",
                          "namespace": "string"
                        }
                      ]
                    ]
                  ]
                }
              ]
            },
            "object": {
              "value": {
                "apiVersion": "rbac.authorization.k8s.io/v1",
                "kind": "ClusterRoleBinding",
                "metadata": {
                  "annotations": null,
                  "clusterName": null,
                  "creationTimestamp": null,
                  "deletionGracePeriodSeconds": null,
                  "deletionTimestamp": null,
                  "finalizers": null,
                  "generateName": null,
                  "generation": null,
                  "labels": null,
                  "managedFields": null,
                  "name": "elastic-agent",
                  "namespace": null,
                  "ownerReferences": null,
                  "resourceVersion": null,
                  "selfLink": null,
                  "uid": null
                },
                "roleRef": {
                  "apiGroup": "rbac.authorization.k8s.io",
                  "kind": "ClusterRole",
                  "name": "elastic-agent"
                },
                "subjects": [
                  {
                    "apiGroup": null,
                    "kind": "ServiceAccount",
                    "name": "elastic-agent",
                    "namespace": "default"
                  }
                ]
              },
              "type": [
                "object",
                {
                  "apiVersion": "string",
                  "kind": "string",
                  "metadata": [
                    "object",
                    {
                      "annotations": [
                        "map",
                        "string"
                      ],
                      "clusterName": "string",
                      "creationTimestamp": "string",
                      "deletionGracePeriodSeconds": "number",
                      "deletionTimestamp": "string",
                      "finalizers": [
                        "list",
                        "string"
                      ],
                      "generateName": "string",
                      "generation": "number",
                      "labels": [
                        "map",
                        "string"
                      ],
                      "managedFields": [
                        "tuple",
                        [
                          [
                            "object",
                            {
                              "apiVersion": "string",
                              "fieldsType": "string",
                              "fieldsV1": "dynamic",
                              "manager": "string",
                              "operation": "string",
                              "time": "string"
                            }
                          ]
                        ]
                      ],
                      "name": "string",
                      "namespace": "string",
                      "ownerReferences": [
                        "list",
                        [
                          "object",
                          {
                            "apiVersion": "string",
                            "blockOwnerDeletion": "bool",
                            "controller": "bool",
                            "kind": "string",
                            "name": "string",
                            "uid": "string"
                          }
                        ]
                      ],
                      "resourceVersion": "string",
                      "selfLink": "string",
                      "uid": "string"
                    }
                  ],
                  "roleRef": [
                    "object",
                    {
                      "apiGroup": "string",
                      "kind": "string",
                      "name": "string"
                    }
                  ],
                  "subjects": [
                    "list",
                    [
                      "object",
                      {
                        "apiGroup": "string",
                        "kind": "string",
                        "name": "string",
                        "namespace": "string"
                      }
                    ]
                  ]
                }
              ]
            },
            "timeouts": [],
            "wait": [],
            "wait_for": null
          },
          "sensitive_attributes": []
        }
      ]
    },
    {
      "mode": "managed",
      "type": "kubernetes_manifest",
      "name": "clusterrolebinding_external_dns_viewer",
      "provider": "provider[\"registry.terraform.io/hashicorp/kubernetes\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "computed_fields": null,
            "field_manager": [],
            "manifest": {
              "value": {
                "apiVersion": "rbac.authorization.k8s.io/v1",
                "kind": "ClusterRoleBinding",
                "metadata": {
                  "name": "external-dns-viewer"
                },
                "roleRef": {
                  "apiGroup": "rbac.authorization.k8s.io",
                  "kind": "ClusterRole",
                  "name": "external-dns"
                },
                "subjects": [
                  {
                    "kind": "ServiceAccount",
                    "name": "external-dns",
                    "namespace": "default"
                  }
                ]
              },
              "type": [
                "object",
                {
                  "apiVersion": "string",
                  "kind": "string",
                  "metadata": [
                    "object",
                    {
                      "name": "string"
                    }
                  ],
                  "roleRef": [
                    "object",
                    {
                      "apiGroup": "string",
                      "kind": "string",
                      "name": "string"
                    }
                  ],
                  "subjects": [
                    "tuple",
                    [
                      [
                        "object",
                        {
                          "kind": "string",
                          "name": "string",
                          "namespace": "string"
                        }
                      ]
                    ]
                  ]
                }
              ]
            },
            "object": {
              "value": {
                "apiVersion": "rbac.authorization.k8s.io/v1",
                "kind": "ClusterRoleBinding",
                "metadata": {
                  "annotations": null,
                  "clusterName": null,
                  "creationTimestamp": null,
                  "deletionGracePeriodSeconds": null,
                  "deletionTimestamp": null,
                  "finalizers": null,
                  "generateName": null,
                  "generation": null,
                  "labels": null,
                  "managedFields": null,
                  "name": "external-dns-viewer",
                  "namespace": null,
                  "ownerReferences": null,
                  "resourceVersion": null,
                  "selfLink": null,
                  "uid": null
                },
                "roleRef": {
                  "apiGroup": "rbac.authorization.k8s.io",
                  "kind": "ClusterRole",
                  "name": "external-dns"
                },
                "subjects": [
                  {
                    "apiGroup": null,
                    "kind": "ServiceAccount",
                    "name": "external-dns",
                    "namespace": "default"
                  }
                ]
              },
              "type": [
                "object",
                {
                  "apiVersion": "string",
                  "kind": "string",
                  "metadata": [
                    "object",
                    {
                      "annotations": [
                        "map",
                        "string"
                      ],
                      "clusterName": "string",
                      "creationTimestamp": "string",
                      "deletionGracePeriodSeconds": "number",
                      "deletionTimestamp": "string",
                      "finalizers": [
                        "list",
                        "string"
                      ],
                      "generateName": "string",
                      "generation": "number",
                      "labels": [
                        "map",
                        "string"
                      ],
                      "managedFields": [
                        "tuple",
                        [
                          [
                            "object",
                            {
                              "apiVersion": "string",
                              "fieldsType": "string",
                              "fieldsV1": "dynamic",
                              "manager": "string",
                              "operation": "string",
                              "time": "string"
                            }
                          ]
                        ]
                      ],
                      "name": "string",
                      "namespace": "string",
                      "ownerReferences": [
                        "list",
                        [
                          "object",
                          {
                            "apiVersion": "string",
                            "blockOwnerDeletion": "bool",
                            "controller": "bool",
                            "kind": "string",
                            "name": "string",
                            "uid": "string"
                          }
                        ]
                      ],
                      "resourceVersion": "string",
                      "selfLink": "string",
                      "uid": "string"
                    }
                  ],
                  "roleRef": [
                    "object",
                    {
                      "apiGroup": "string",
                      "kind": "string",
                      "name": "string"
                    }
                  ],
                  "subjects": [
                    "list",
                    [
                      "object",
                      {
                        "apiGroup": "string",
                        "kind": "string",
                        "name": "string",
                        "namespace": "string"
                      }
                    ]
                  ]
                }
              ]
            },
            "timeouts": [],
            "wait": [],
            "wait_for": null
          },
          "sensitive_attributes": []
        }
      ]
    },
    {
      "mode": "managed",
      "type": "kubernetes_manifest",
      "name": "clusterrolebinding_fleet_server",
      "provider": "provider[\"registry.terraform.io/hashicorp/kubernetes\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "computed_fields": null,
            "field_manager": [],
            "manifest": {
              "value": {
                "apiVersion": "rbac.authorization.k8s.io/v1",
                "kind": "ClusterRoleBinding",
                "metadata": {
                  "name": "fleet-server"
                },
                "roleRef": {
                  "apiGroup": "rbac.authorization.k8s.io",
                  "kind": "ClusterRole",
                  "name": "fleet-server"
                },
                "subjects": [
                  {
                    "kind": "ServiceAccount",
                    "name": "fleet-server",
                    "namespace": "default"
                  }
                ]
              },
              "type": [
                "object",
                {
                  "apiVersion": "string",
                  "kind": "string",
                  "metadata": [
                    "object",
                    {
                      "name": "string"
                    }
                  ],
                  "roleRef": [
                    "object",
                    {
                      "apiGroup": "string",
                      "kind": "string",
                      "name": "string"
                    }
                  ],
                  "subjects": [
                    "tuple",
                    [
                      [
                        "object",
                        {
                          "kind": "string",
                          "name": "string",
                          "namespace": "string"
                        }
                      ]
                    ]
                  ]
                }
              ]
            },
            "object": {
              "value": {
                "apiVersion": "rbac.authorization.k8s.io/v1",
                "kind": "ClusterRoleBinding",
                "metadata": {
                  "annotations": null,
                  "clusterName": null,
                  "creationTimestamp": null,
                  "deletionGracePeriodSeconds": null,
                  "deletionTimestamp": null,
                  "finalizers": null,
                  "generateName": null,
                  "generation": null,
                  "labels": null,
                  "managedFields": null,
                  "name": "fleet-server",
                  "namespace": null,
                  "ownerReferences": null,
                  "resourceVersion": null,
                  "selfLink": null,
                  "uid": null
                },
                "roleRef": {
                  "apiGroup": "rbac.authorization.k8s.io",
                  "kind": "ClusterRole",
                  "name": "fleet-server"
                },
                "subjects": [
                  {
                    "apiGroup": null,
                    "kind": "ServiceAccount",
                    "name": "fleet-server",
                    "namespace": "default"
                  }
                ]
              },
              "type": [
                "object",
                {
                  "apiVersion": "string",
                  "kind": "string",
                  "metadata": [
                    "object",
                    {
                      "annotations": [
                        "map",
                        "string"
                      ],
                      "clusterName": "string",
                      "creationTimestamp": "string",
                      "deletionGracePeriodSeconds": "number",
                      "deletionTimestamp": "string",
                      "finalizers": [
                        "list",
                        "string"
                      ],
                      "generateName": "string",
                      "generation": "number",
                      "labels": [
                        "map",
                        "string"
                      ],
                      "managedFields": [
                        "tuple",
                        [
                          [
                            "object",
                            {
                              "apiVersion": "string",
                              "fieldsType": "string",
                              "fieldsV1": "dynamic",
                              "manager": "string",
                              "operation": "string",
                              "time": "string"
                            }
                          ]
                        ]
                      ],
                      "name": "string",
                      "namespace": "string",
                      "ownerReferences": [
                        "list",
                        [
                          "object",
                          {
                            "apiVersion": "string",
                            "blockOwnerDeletion": "bool",
                            "controller": "bool",
                            "kind": "string",
                            "name": "string",
                            "uid": "string"
                          }
                        ]
                      ],
                      "resourceVersion": "string",
                      "selfLink": "string",
                      "uid": "string"
                    }
                  ],
                  "roleRef": [
                    "object",
                    {
                      "apiGroup": "string",
                      "kind": "string",
                      "name": "string"
                    }
                  ],
                  "subjects": [
                    "list",
                    [
                      "object",
                      {
                        "apiGroup": "string",
                        "kind": "string",
                        "name": "string",
                        "namespace": "string"
                      }
                    ]
                  ]
                }
              ]
            },
            "timeouts": [],
            "wait": [],
            "wait_for": null
          },
          "sensitive_attributes": []
        }
      ]
    },
    {
      "mode": "managed",
      "type": "kubernetes_manifest",
      "name": "deployment_external_dns",
      "provider": "provider[\"registry.terraform.io/hashicorp/kubernetes\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "computed_fields": null,
            "field_manager": [],
            "manifest": {
              "value": {
                "apiVersion": "apps/v1",
                "kind": "Deployment",
                "metadata": {
                  "name": "external-dns",
                  "namespace": "default"
                },
                "spec": {
                  "selector": {
                    "matchLabels": {
                      "app": "external-dns"
                    }
                  },
                  "strategy": {
                    "type": "Recreate"
                  },
                  "template": {
                    "metadata": {
                      "labels": {
                        "app": "external-dns"
                      }
                    },
                    "spec": {
                      "containers": [
                        {
                          "args": [
                            "--source=service",
                            "--source=ingress",
                            "--provider=cloudflare"
                          ],
                          "env": [
                            {
                              "name": "CF_API_TOKEN",
                              "value": "XCgG0QGaBP9WcisxY7I70GF4U0UQTG7hobQ6cr4d"
                            }
                          ],
                          "image": "k8s.gcr.io/external-dns/external-dns:v0.7.6",
                          "name": "external-dns"
                        }
                      ],
                      "serviceAccountName": "external-dns"
                    }
                  }
                }
              },
              "type": [
                "object",
                {
                  "apiVersion": "string",
                  "kind": "string",
                  "metadata": [
                    "object",
                    {
                      "name": "string",
                      "namespace": "string"
                    }
                  ],
                  "spec": [
                    "object",
                    {
                      "selector": [
                        "object",
                        {
                          "matchLabels": [
                            "object",
                            {
                              "app": "string"
                            }
                          ]
                        }
                      ],
                      "strategy": [
                        "object",
                        {
                          "type": "string"
                        }
                      ],
                      "template": [
                        "object",
                        {
                          "metadata": [
                            "object",
                            {
                              "labels": [
                                "object",
                                {
                                  "app": "string"
                                }
                              ]
                            }
                          ],
                          "spec": [
                            "object",
                            {
                              "containers": [
                                "tuple",
                                [
                                  [
                                    "object",
                                    {
                                      "args": [
                                        "tuple",
                                        [
                                          "string",
                                          "string",
                                          "string"
                                        ]
                                      ],
                                      "env": [
                                        "tuple",
                                        [
                                          [
                                            "object",
                                            {
                                              "name": "string",
                                              "value": "string"
                                            }
                                          ]
                                        ]
                                      ],
                                      "image": "string",
                                      "name": "string"
                                    }
                                  ]
                                ]
                              ],
                              "serviceAccountName": "string"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "object": {
              "value": {
                "apiVersion": "apps/v1",
                "kind": "Deployment",
                "metadata": {
                  "annotations": null,
                  "clusterName": null,
                  "creationTimestamp": null,
                  "deletionGracePeriodSeconds": null,
                  "deletionTimestamp": null,
                  "finalizers": null,
                  "generateName": null,
                  "generation": null,
                  "labels": null,
                  "managedFields": null,
                  "name": "external-dns",
                  "namespace": "default",
                  "ownerReferences": null,
                  "resourceVersion": null,
                  "selfLink": null,
                  "uid": null
                },
                "spec": {
                  "minReadySeconds": null,
                  "paused": null,
                  "progressDeadlineSeconds": 600,
                  "replicas": 1,
                  "revisionHistoryLimit": 10,
                  "selector": {
                    "matchExpressions": null,
                    "matchLabels": {
                      "app": "external-dns"
                    }
                  },
                  "strategy": {
                    "rollingUpdate": {
                      "maxSurge": null,
                      "maxUnavailable": null
                    },
                    "type": "Recreate"
                  },
                  "template": {
                    "metadata": {
                      "annotations": null,
                      "clusterName": null,
                      "creationTimestamp": null,
                      "deletionGracePeriodSeconds": null,
                      "deletionTimestamp": null,
                      "finalizers": null,
                      "generateName": null,
                      "generation": null,
                      "labels": {
                        "app": "external-dns"
                      },
                      "managedFields": null,
                      "name": null,
                      "namespace": null,
                      "ownerReferences": null,
                      "resourceVersion": null,
                      "selfLink": null,
                      "uid": null
                    },
                    "spec": {
                      "activeDeadlineSeconds": null,
                      "affinity": {
                        "nodeAffinity": {
                          "preferredDuringSchedulingIgnoredDuringExecution": null,
                          "requiredDuringSchedulingIgnoredDuringExecution": {
                            "nodeSelectorTerms": null
                          }
                        },
                        "podAffinity": {
                          "preferredDuringSchedulingIgnoredDuringExecution": null,
                          "requiredDuringSchedulingIgnoredDuringExecution": null
                        },
                        "podAntiAffinity": {
                          "preferredDuringSchedulingIgnoredDuringExecution": null,
                          "requiredDuringSchedulingIgnoredDuringExecution": null
                        }
                      },
                      "automountServiceAccountToken": null,
                      "containers": [
                        {
                          "args": [
                            "--source=service",
                            "--source=ingress",
                            "--provider=cloudflare"
                          ],
                          "command": null,
                          "env": [
                            {
                              "name": "CF_API_TOKEN",
                              "value": "XCgG0QGaBP9WcisxY7I70GF4U0UQTG7hobQ6cr4d",
                              "valueFrom": {
                                "configMapKeyRef": {
                                  "key": null,
                                  "name": null,
                                  "optional": null
                                },
                                "fieldRef": {
                                  "apiVersion": null,
                                  "fieldPath": null
                                },
                                "resourceFieldRef": {
                                  "containerName": null,
                                  "divisor": null,
                                  "resource": null
                                },
                                "secretKeyRef": {
                                  "key": null,
                                  "name": null,
                                  "optional": null
                                }
                              }
                            }
                          ],
                          "envFrom": null,
                          "image": "k8s.gcr.io/external-dns/external-dns:v0.7.6",
                          "imagePullPolicy": "IfNotPresent",
                          "lifecycle": {
                            "postStart": {
                              "exec": {
                                "command": null
                              },
                              "httpGet": {
                                "host": null,
                                "httpHeaders": null,
                                "path": null,
                                "port": null,
                                "scheme": null
                              },
                              "tcpSocket": {
                                "host": null,
                                "port": null
                              }
                            },
                            "preStop": {
                              "exec": {
                                "command": null
                              },
                              "httpGet": {
                                "host": null,
                                "httpHeaders": null,
                                "path": null,
                                "port": null,
                                "scheme": null
                              },
                              "tcpSocket": {
                                "host": null,
                                "port": null
                              }
                            }
                          },
                          "livenessProbe": {
                            "exec": {
                              "command": null
                            },
                            "failureThreshold": null,
                            "httpGet": {
                              "host": null,
                              "httpHeaders": null,
                              "path": null,
                              "port": null,
                              "scheme": null
                            },
                            "initialDelaySeconds": null,
                            "periodSeconds": null,
                            "successThreshold": null,
                            "tcpSocket": {
                              "host": null,
                              "port": null
                            },
                            "terminationGracePeriodSeconds": null,
                            "timeoutSeconds": null
                          },
                          "name": "external-dns",
                          "ports": null,
                          "readinessProbe": {
                            "exec": {
                              "command": null
                            },
                            "failureThreshold": null,
                            "httpGet": {
                              "host": null,
                              "httpHeaders": null,
                              "path": null,
                              "port": null,
                              "scheme": null
                            },
                            "initialDelaySeconds": null,
                            "periodSeconds": null,
                            "successThreshold": null,
                            "tcpSocket": {
                              "host": null,
                              "port": null
                            },
                            "terminationGracePeriodSeconds": null,
                            "timeoutSeconds": null
                          },
                          "resources": {
                            "limits": null,
                            "requests": null
                          },
                          "securityContext": {
                            "allowPrivilegeEscalation": null,
                            "capabilities": {
                              "add": null,
                              "drop": null
                            },
                            "privileged": null,
                            "procMount": null,
                            "readOnlyRootFilesystem": null,
                            "runAsGroup": null,
                            "runAsNonRoot": null,
                            "runAsUser": null,
                            "seLinuxOptions": {
                              "level": null,
                              "role": null,
                              "type": null,
                              "user": null
                            },
                            "seccompProfile": {
                              "localhostProfile": null,
                              "type": null
                            },
                            "windowsOptions": {
                              "gmsaCredentialSpec": null,
                              "gmsaCredentialSpecName": null,
                              "runAsUserName": null
                            }
                          },
                          "startupProbe": {
                            "exec": {
                              "command": null
                            },
                            "failureThreshold": null,
                            "httpGet": {
                              "host": null,
                              "httpHeaders": null,
                              "path": null,
                              "port": null,
                              "scheme": null
                            },
                            "initialDelaySeconds": null,
                            "periodSeconds": null,
                            "successThreshold": null,
                            "tcpSocket": {
                              "host": null,
                              "port": null
                            },
                            "terminationGracePeriodSeconds": null,
                            "timeoutSeconds": null
                          },
                          "stdin": null,
                          "stdinOnce": null,
                          "terminationMessagePath": "/dev/termination-log",
                          "terminationMessagePolicy": "File",
                          "tty": null,
                          "volumeDevices": null,
                          "volumeMounts": null,
                          "workingDir": null
                        }
                      ],
                      "dnsConfig": {
                        "nameservers": null,
                        "options": null,
                        "searches": null
                      },
                      "dnsPolicy": "ClusterFirst",
                      "enableServiceLinks": null,
                      "ephemeralContainers": null,
                      "hostAliases": null,
                      "hostIPC": null,
                      "hostNetwork": null,
                      "hostPID": null,
                      "hostname": null,
                      "imagePullSecrets": null,
                      "initContainers": null,
                      "nodeName": null,
                      "nodeSelector": null,
                      "overhead": null,
                      "preemptionPolicy": null,
                      "priority": null,
                      "priorityClassName": null,
                      "readinessGates": null,
                      "restartPolicy": "Always",
                      "runtimeClassName": null,
                      "schedulerName": "default-scheduler",
                      "securityContext": {
                        "fsGroup": null,
                        "fsGroupChangePolicy": null,
                        "runAsGroup": null,
                        "runAsNonRoot": null,
                        "runAsUser": null,
                        "seLinuxOptions": {
                          "level": null,
                          "role": null,
                          "type": null,
                          "user": null
                        },
                        "seccompProfile": {
                          "localhostProfile": null,
                          "type": null
                        },
                        "supplementalGroups": null,
                        "sysctls": null,
                        "windowsOptions": {
                          "gmsaCredentialSpec": null,
                          "gmsaCredentialSpecName": null,
                          "runAsUserName": null
                        }
                      },
                      "serviceAccount": "external-dns",
                      "serviceAccountName": "external-dns",
                      "setHostnameAsFQDN": null,
                      "shareProcessNamespace": null,
                      "subdomain": null,
                      "terminationGracePeriodSeconds": 30,
                      "tolerations": null,
                      "topologySpreadConstraints": null,
                      "volumes": null
                    }
                  }
                }
              },
              "type": [
                "object",
                {
                  "apiVersion": "string",
                  "kind": "string",
                  "metadata": [
                    "object",
                    {
                      "annotations": [
                        "map",
                        "string"
                      ],
                      "clusterName": "string",
                      "creationTimestamp": "string",
                      "deletionGracePeriodSeconds": "number",
                      "deletionTimestamp": "string",
                      "finalizers": [
                        "list",
                        "string"
                      ],
                      "generateName": "string",
                      "generation": "number",
                      "labels": [
                        "map",
                        "string"
                      ],
                      "managedFields": [
                        "tuple",
                        [
                          [
                            "object",
                            {
                              "apiVersion": "string",
                              "fieldsType": "string",
                              "fieldsV1": "dynamic",
                              "manager": "string",
                              "operation": "string",
                              "time": "string"
                            }
                          ]
                        ]
                      ],
                      "name": "string",
                      "namespace": "string",
                      "ownerReferences": [
                        "list",
                        [
                          "object",
                          {
                            "apiVersion": "string",
                            "blockOwnerDeletion": "bool",
                            "controller": "bool",
                            "kind": "string",
                            "name": "string",
                            "uid": "string"
                          }
                        ]
                      ],
                      "resourceVersion": "string",
                      "selfLink": "string",
                      "uid": "string"
                    }
                  ],
                  "spec": [
                    "object",
                    {
                      "minReadySeconds": "number",
                      "paused": "bool",
                      "progressDeadlineSeconds": "number",
                      "replicas": "number",
                      "revisionHistoryLimit": "number",
                      "selector": [
                        "object",
                        {
                          "matchExpressions": [
                            "list",
                            [
                              "object",
                              {
                                "key": "string",
                                "operator": "string",
                                "values": [
                                  "list",
                                  "string"
                                ]
                              }
                            ]
                          ],
                          "matchLabels": [
                            "map",
                            "string"
                          ]
                        }
                      ],
                      "strategy": [
                        "object",
                        {
                          "rollingUpdate": [
                            "object",
                            {
                              "maxSurge": "string",
                              "maxUnavailable": "string"
                            }
                          ],
                          "type": "string"
                        }
                      ],
                      "template": [
                        "object",
                        {
                          "metadata": [
                            "object",
                            {
                              "annotations": [
                                "map",
                                "string"
                              ],
                              "clusterName": "string",
                              "creationTimestamp": "string",
                              "deletionGracePeriodSeconds": "number",
                              "deletionTimestamp": "string",
                              "finalizers": [
                                "list",
                                "string"
                              ],
                              "generateName": "string",
                              "generation": "number",
                              "labels": [
                                "map",
                                "string"
                              ],
                              "managedFields": [
                                "tuple",
                                [
                                  [
                                    "object",
                                    {
                                      "apiVersion": "string",
                                      "fieldsType": "string",
                                      "fieldsV1": "dynamic",
                                      "manager": "string",
                                      "operation": "string",
                                      "time": "string"
                                    }
                                  ]
                                ]
                              ],
                              "name": "string",
                              "namespace": "string",
                              "ownerReferences": [
                                "list",
                                [
                                  "object",
                                  {
                                    "apiVersion": "string",
                                    "blockOwnerDeletion": "bool",
                                    "controller": "bool",
                                    "kind": "string",
                                    "name": "string",
                                    "uid": "string"
                                  }
                                ]
                              ],
                              "resourceVersion": "string",
                              "selfLink": "string",
                              "uid": "string"
                            }
                          ],
                          "spec": [
                            "object",
                            {
                              "activeDeadlineSeconds": "number",
                              "affinity": [
                                "object",
                                {
                                  "nodeAffinity": [
                                    "object",
                                    {
                                      "preferredDuringSchedulingIgnoredDuringExecution": [
                                        "list",
                                        [
                                          "object",
                                          {
                                            "preference": [
                                              "object",
                                              {
                                                "matchExpressions": [
                                                  "list",
                                                  [
                                                    "object",
                                                    {
                                                      "key": "string",
                                                      "operator": "string",
                                                      "values": [
                                                        "list",
                                                        "string"
                                                      ]
                                                    }
                                                  ]
                                                ],
                                                "matchFields": [
                                                  "list",
                                                  [
                                                    "object",
                                                    {
                                                      "key": "string",
                                                      "operator": "string",
                                                      "values": [
                                                        "list",
                                                        "string"
                                                      ]
                                                    }
                                                  ]
                                                ]
                                              }
                                            ],
                                            "weight": "number"
                                          }
                                        ]
                                      ],
                                      "requiredDuringSchedulingIgnoredDuringExecution": [
                                        "object",
                                        {
                                          "nodeSelectorTerms": [
                                            "list",
                                            [
                                              "object",
                                              {
                                                "matchExpressions": [
                                                  "list",
                                                  [
                                                    "object",
                                                    {
                                                      "key": "string",
                                                      "operator": "string",
                                                      "values": [
                                                        "list",
                                                        "string"
                                                      ]
                                                    }
                                                  ]
                                                ],
                                                "matchFields": [
                                                  "list",
                                                  [
                                                    "object",
                                                    {
                                                      "key": "string",
                                                      "operator": "string",
                                                      "values": [
                                                        "list",
                                                        "string"
                                                      ]
                                                    }
                                                  ]
                                                ]
                                              }
                                            ]
                                          ]
                                        }
                                      ]
                                    }
                                  ],
                                  "podAffinity": [
                                    "object",
                                    {
                                      "preferredDuringSchedulingIgnoredDuringExecution": [
                                        "list",
                                        [
                                          "object",
                                          {
                                            "podAffinityTerm": [
                                              "object",
                                              {
                                                "labelSelector": [
                                                  "object",
                                                  {
                                                    "matchExpressions": [
                                                      "list",
                                                      [
                                                        "object",
                                                        {
                                                          "key": "string",
                                                          "operator": "string",
                                                          "values": [
                                                            "list",
                                                            "string"
                                                          ]
                                                        }
                                                      ]
                                                    ],
                                                    "matchLabels": [
                                                      "map",
                                                      "string"
                                                    ]
                                                  }
                                                ],
                                                "namespaceSelector": [
                                                  "object",
                                                  {
                                                    "matchExpressions": [
                                                      "list",
                                                      [
                                                        "object",
                                                        {
                                                          "key": "string",
                                                          "operator": "string",
                                                          "values": [
                                                            "list",
                                                            "string"
                                                          ]
                                                        }
                                                      ]
                                                    ],
                                                    "matchLabels": [
                                                      "map",
                                                      "string"
                                                    ]
                                                  }
                                                ],
                                                "namespaces": [
                                                  "list",
                                                  "string"
                                                ],
                                                "topologyKey": "string"
                                              }
                                            ],
                                            "weight": "number"
                                          }
                                        ]
                                      ],
                                      "requiredDuringSchedulingIgnoredDuringExecution": [
                                        "list",
                                        [
                                          "object",
                                          {
                                            "labelSelector": [
                                              "object",
                                              {
                                                "matchExpressions": [
                                                  "list",
                                                  [
                                                    "object",
                                                    {
                                                      "key": "string",
                                                      "operator": "string",
                                                      "values": [
                                                        "list",
                                                        "string"
                                                      ]
                                                    }
                                                  ]
                                                ],
                                                "matchLabels": [
                                                  "map",
                                                  "string"
                                                ]
                                              }
                                            ],
                                            "namespaceSelector": [
                                              "object",
                                              {
                                                "matchExpressions": [
                                                  "list",
                                                  [
                                                    "object",
                                                    {
                                                      "key": "string",
                                                      "operator": "string",
                                                      "values": [
                                                        "list",
                                                        "string"
                                                      ]
                                                    }
                                                  ]
                                                ],
                                                "matchLabels": [
                                                  "map",
                                                  "string"
                                                ]
                                              }
                                            ],
                                            "namespaces": [
                                              "list",
                                              "string"
                                            ],
                                            "topologyKey": "string"
                                          }
                                        ]
                                      ]
                                    }
                                  ],
                                  "podAntiAffinity": [
                                    "object",
                                    {
                                      "preferredDuringSchedulingIgnoredDuringExecution": [
                                        "list",
                                        [
                                          "object",
                                          {
                                            "podAffinityTerm": [
                                              "object",
                                              {
                                                "labelSelector": [
                                                  "object",
                                                  {
                                                    "matchExpressions": [
                                                      "list",
                                                      [
                                                        "object",
                                                        {
                                                          "key": "string",
                                                          "operator": "string",
                                                          "values": [
                                                            "list",
                                                            "string"
                                                          ]
                                                        }
                                                      ]
                                                    ],
                                                    "matchLabels": [
                                                      "map",
                                                      "string"
                                                    ]
                                                  }
                                                ],
                                                "namespaceSelector": [
                                                  "object",
                                                  {
                                                    "matchExpressions": [
                                                      "list",
                                                      [
                                                        "object",
                                                        {
                                                          "key": "string",
                                                          "operator": "string",
                                                          "values": [
                                                            "list",
                                                            "string"
                                                          ]
                                                        }
                                                      ]
                                                    ],
                                                    "matchLabels": [
                                                      "map",
                                                      "string"
                                                    ]
                                                  }
                                                ],
                                                "namespaces": [
                                                  "list",
                                                  "string"
                                                ],
                                                "topologyKey": "string"
                                              }
                                            ],
                                            "weight": "number"
                                          }
                                        ]
                                      ],
                                      "requiredDuringSchedulingIgnoredDuringExecution": [
                                        "list",
                                        [
                                          "object",
                                          {
                                            "labelSelector": [
                                              "object",
                                              {
                                                "matchExpressions": [
                                                  "list",
                                                  [
                                                    "object",
                                                    {
                                                      "key": "string",
                                                      "operator": "string",
                                                      "values": [
                                                        "list",
                                                        "string"
                                                      ]
                                                    }
                                                  ]
                                                ],
                                                "matchLabels": [
                                                  "map",
                                                  "string"
                                                ]
                                              }
                                            ],
                                            "namespaceSelector": [
                                              "object",
                                              {
                                                "matchExpressions": [
                                                  "list",
                                                  [
                                                    "object",
                                                    {
                                                      "key": "string",
                                                      "operator": "string",
                                                      "values": [
                                                        "list",
                                                        "string"
                                                      ]
                                                    }
                                                  ]
                                                ],
                                                "matchLabels": [
                                                  "map",
                                                  "string"
                                                ]
                                              }
                                            ],
                                            "namespaces": [
                                              "list",
                                              "string"
                                            ],
                                            "topologyKey": "string"
                                          }
                                        ]
                                      ]
                                    }
                                  ]
                                }
                              ],
                              "automountServiceAccountToken": "bool",
                              "containers": [
                                "list",
                                [
                                  "object",
                                  {
                                    "args": [
                                      "list",
                                      "string"
                                    ],
                                    "command": [
                                      "list",
                                      "string"
                                    ],
                                    "env": [
                                      "list",
                                      [
                                        "object",
                                        {
                                          "name": "string",
                                          "value": "string",
                                          "valueFrom": [
                                            "object",
                                            {
                                              "configMapKeyRef": [
                                                "object",
                                                {
                                                  "key": "string",
                                                  "name": "string",
                                                  "optional": "bool"
                                                }
                                              ],
                                              "fieldRef": [
                                                "object",
                                                {
                                                  "apiVersion": "string",
                                                  "fieldPath": "string"
                                                }
                                              ],
                                              "resourceFieldRef": [
                                                "object",
                                                {
                                                  "containerName": "string",
                                                  "divisor": "string",
                                                  "resource": "string"
                                                }
                                              ],
                                              "secretKeyRef": [
                                                "object",
                                                {
                                                  "key": "string",
                                                  "name": "string",
                                                  "optional": "bool"
                                                }
                                              ]
                                            }
                                          ]
                                        }
                                      ]
                                    ],
                                    "envFrom": [
                                      "list",
                                      [
                                        "object",
                                        {
                                          "configMapRef": [
                                            "object",
                                            {
                                              "name": "string",
                                              "optional": "bool"
                                            }
                                          ],
                                          "prefix": "string",
                                          "secretRef": [
                                            "object",
                                            {
                                              "name": "string",
                                              "optional": "bool"
                                            }
                                          ]
                                        }
                                      ]
                                    ],
                                    "image": "string",
                                    "imagePullPolicy": "string",
                                    "lifecycle": [
                                      "object",
                                      {
                                        "postStart": [
                                          "object",
                                          {
                                            "exec": [
                                              "object",
                                              {
                                                "command": [
                                                  "list",
                                                  "string"
                                                ]
                                              }
                                            ],
                                            "httpGet": [
                                              "object",
                                              {
                                                "host": "string",
                                                "httpHeaders": [
                                                  "list",
                                                  [
                                                    "object",
                                                    {
                                                      "name": "string",
                                                      "value": "string"
                                                    }
                                                  ]
                                                ],
                                                "path": "string",
                                                "port": "string",
                                                "scheme": "string"
                                              }
                                            ],
                                            "tcpSocket": [
                                              "object",
                                              {
                                                "host": "string",
                                                "port": "string"
                                              }
                                            ]
                                          }
                                        ],
                                        "preStop": [
                                          "object",
                                          {
                                            "exec": [
                                              "object",
                                              {
                                                "command": [
                                                  "list",
                                                  "string"
                                                ]
                                              }
                                            ],
                                            "httpGet": [
                                              "object",
                                              {
                                                "host": "string",
                                                "httpHeaders": [
                                                  "list",
                                                  [
                                                    "object",
                                                    {
                                                      "name": "string",
                                                      "value": "string"
                                                    }
                                                  ]
                                                ],
                                                "path": "string",
                                                "port": "string",
                                                "scheme": "string"
                                              }
                                            ],
                                            "tcpSocket": [
                                              "object",
                                              {
                                                "host": "string",
                                                "port": "string"
                                              }
                                            ]
                                          }
                                        ]
                                      }
                                    ],
                                    "livenessProbe": [
                                      "object",
                                      {
                                        "exec": [
                                          "object",
                                          {
                                            "command": [
                                              "list",
                                              "string"
                                            ]
                                          }
                                        ],
                                        "failureThreshold": "number",
                                        "httpGet": [
                                          "object",
                                          {
                                            "host": "string",
                                            "httpHeaders": [
                                              "list",
                                              [
                                                "object",
                                                {
                                                  "name": "string",
                                                  "value": "string"
                                                }
                                              ]
                                            ],
                                            "path": "string",
                                            "port": "string",
                                            "scheme": "string"
                                          }
                                        ],
                                        "initialDelaySeconds": "number",
                                        "periodSeconds": "number",
                                        "successThreshold": "number",
                                        "tcpSocket": [
                                          "object",
                                          {
                                            "host": "string",
                                            "port": "string"
                                          }
                                        ],
                                        "terminationGracePeriodSeconds": "number",
                                        "timeoutSeconds": "number"
                                      }
                                    ],
                                    "name": "string",
                                    "ports": [
                                      "list",
                                      [
                                        "object",
                                        {
                                          "containerPort": "number",
                                          "hostIP": "string",
                                          "hostPort": "number",
                                          "name": "string",
                                          "protocol": "string"
                                        }
                                      ]
                                    ],
                                    "readinessProbe": [
                                      "object",
                                      {
                                        "exec": [
                                          "object",
                                          {
                                            "command": [
                                              "list",
                                              "string"
                                            ]
                                          }
                                        ],
                                        "failureThreshold": "number",
                                        "httpGet": [
                                          "object",
                                          {
                                            "host": "string",
                                            "httpHeaders": [
                                              "list",
                                              [
                                                "object",
                                                {
                                                  "name": "string",
                                                  "value": "string"
                                                }
                                              ]
                                            ],
                                            "path": "string",
                                            "port": "string",
                                            "scheme": "string"
                                          }
                                        ],
                                        "initialDelaySeconds": "number",
                                        "periodSeconds": "number",
                                        "successThreshold": "number",
                                        "tcpSocket": [
                                          "object",
                                          {
                                            "host": "string",
                                            "port": "string"
                                          }
                                        ],
                                        "terminationGracePeriodSeconds": "number",
                                        "timeoutSeconds": "number"
                                      }
                                    ],
                                    "resources": [
                                      "object",
                                      {
                                        "limits": [
                                          "map",
                                          "string"
                                        ],
                                        "requests": [
                                          "map",
                                          "string"
                                        ]
                                      }
                                    ],
                                    "securityContext": [
                                      "object",
                                      {
                                        "allowPrivilegeEscalation": "bool",
                                        "capabilities": [
                                          "object",
                                          {
                                            "add": [
                                              "list",
                                              "string"
                                            ],
                                            "drop": [
                                              "list",
                                              "string"
                                            ]
                                          }
                                        ],
                                        "privileged": "bool",
                                        "procMount": "string",
                                        "readOnlyRootFilesystem": "bool",
                                        "runAsGroup": "number",
                                        "runAsNonRoot": "bool",
                                        "runAsUser": "number",
                                        "seLinuxOptions": [
                                          "object",
                                          {
                                            "level": "string",
                                            "role": "string",
                                            "type": "string",
                                            "user": "string"
                                          }
                                        ],
                                        "seccompProfile": [
                                          "object",
                                          {
                                            "localhostProfile": "string",
                                            "type": "string"
                                          }
                                        ],
                                        "windowsOptions": [
                                          "object",
                                          {
                                            "gmsaCredentialSpec": "string",
                                            "gmsaCredentialSpecName": "string",
                                            "runAsUserName": "string"
                                          }
                                        ]
                                      }
                                    ],
                                    "startupProbe": [
                                      "object",
                                      {
                                        "exec": [
                                          "object",
                                          {
                                            "command": [
                                              "list",
                                              "string"
                                            ]
                                          }
                                        ],
                                        "failureThreshold": "number",
                                        "httpGet": [
                                          "object",
                                          {
                                            "host": "string",
                                            "httpHeaders": [
                                              "list",
                                              [
                                                "object",
                                                {
                                                  "name": "string",
                                                  "value": "string"
                                                }
                                              ]
                                            ],
                                            "path": "string",
                                            "port": "string",
                                            "scheme": "string"
                                          }
                                        ],
                                        "initialDelaySeconds": "number",
                                        "periodSeconds": "number",
                                        "successThreshold": "number",
                                        "tcpSocket": [
                                          "object",
                                          {
                                            "host": "string",
                                            "port": "string"
                                          }
                                        ],
                                        "terminationGracePeriodSeconds": "number",
                                        "timeoutSeconds": "number"
                                      }
                                    ],
                                    "stdin": "bool",
                                    "stdinOnce": "bool",
                                    "terminationMessagePath": "string",
                                    "terminationMessagePolicy": "string",
                                    "tty": "bool",
                                    "volumeDevices": [
                                      "list",
                                      [
                                        "object",
                                        {
                                          "devicePath": "string",
                                          "name": "string"
                                        }
                                      ]
                                    ],
                                    "volumeMounts": [
                                      "list",
                                      [
                                        "object",
                                        {
                                          "mountPath": "string",
                                          "mountPropagation": "string",
                                          "name": "string",
                                          "readOnly": "bool",
                                          "subPath": "string",
                                          "subPathExpr": "string"
                                        }
                                      ]
                                    ],
                                    "workingDir": "string"
                                  }
                                ]
                              ],
                              "dnsConfig": [
                                "object",
                                {
                                  "nameservers": [
                                    "list",
                                    "string"
                                  ],
                                  "options": [
                                    "list",
                                    [
                                      "object",
                                      {
                                        "name": "string",
                                        "value": "string"
                                      }
                                    ]
                                  ],
                                  "searches": [
                                    "list",
                                    "string"
                                  ]
                                }
                              ],
                              "dnsPolicy": "string",
                              "enableServiceLinks": "bool",
                              "ephemeralContainers": [
                                "list",
                                [
                                  "object",
                                  {
                                    "args": [
                                      "list",
                                      "string"
                                    ],
                                    "command": [
                                      "list",
                                      "string"
                                    ],
                                    "env": [
                                      "list",
                                      [
                                        "object",
                                        {
                                          "name": "string",
                                          "value": "string",
                                          "valueFrom": [
                                            "object",
                                            {
                                              "configMapKeyRef": [
                                                "object",
                                                {
                                                  "key": "string",
                                                  "name": "string",
                                                  "optional": "bool"
                                                }
                                              ],
                                              "fieldRef": [
                                                "object",
                                                {
                                                  "apiVersion": "string",
                                                  "fieldPath": "string"
                                                }
                                              ],
                                              "resourceFieldRef": [
                                                "object",
                                                {
                                                  "containerName": "string",
                                                  "divisor": "string",
                                                  "resource": "string"
                                                }
                                              ],
                                              "secretKeyRef": [
                                                "object",
                                                {
                                                  "key": "string",
                                                  "name": "string",
                                                  "optional": "bool"
                                                }
                                              ]
                                            }
                                          ]
                                        }
                                      ]
                                    ],
                                    "envFrom": [
                                      "list",
                                      [
                                        "object",
                                        {
                                          "configMapRef": [
                                            "object",
                                            {
                                              "name": "string",
                                              "optional": "bool"
                                            }
                                          ],
                                          "prefix": "string",
                                          "secretRef": [
                                            "object",
                                            {
                                              "name": "string",
                                              "optional": "bool"
                                            }
                                          ]
                                        }
                                      ]
                                    ],
                                    "image": "string",
                                    "imagePullPolicy": "string",
                                    "lifecycle": [
                                      "object",
                                      {
                                        "postStart": [
                                          "object",
                                          {
                                            "exec": [
                                              "object",
                                              {
                                                "command": [
                                                  "list",
                                                  "string"
                                                ]
                                              }
                                            ],
                                            "httpGet": [
                                              "object",
                                              {
                                                "host": "string",
                                                "httpHeaders": [
                                                  "list",
                                                  [
                                                    "object",
                                                    {
                                                      "name": "string",
                                                      "value": "string"
                                                    }
                                                  ]
                                                ],
                                                "path": "string",
                                                "port": "string",
                                                "scheme": "string"
                                              }
                                            ],
                                            "tcpSocket": [
                                              "object",
                                              {
                                                "host": "string",
                                                "port": "string"
                                              }
                                            ]
                                          }
                                        ],
                                        "preStop": [
                                          "object",
                                          {
                                            "exec": [
                                              "object",
                                              {
                                                "command": [
                                                  "list",
                                                  "string"
                                                ]
                                              }
                                            ],
                                            "httpGet": [
                                              "object",
                                              {
                                                "host": "string",
                                                "httpHeaders": [
                                                  "list",
                                                  [
                                                    "object",
                                                    {
                                                      "name": "string",
                                                      "value": "string"
                                                    }
                                                  ]
                                                ],
                                                "path": "string",
                                                "port": "string",
                                                "scheme": "string"
                                              }
                                            ],
                                            "tcpSocket": [
                                              "object",
                                              {
                                                "host": "string",
                                                "port": "string"
                                              }
                                            ]
                                          }
                                        ]
                                      }
                                    ],
                                    "livenessProbe": [
                                      "object",
                                      {
                                        "exec": [
                                          "object",
                                          {
                                            "command": [
                                              "list",
                                              "string"
                                            ]
                                          }
                                        ],
                                        "failureThreshold": "number",
                                        "httpGet": [
                                          "object",
                                          {
                                            "host": "string",
                                            "httpHeaders": [
                                              "list",
                                              [
                                                "object",
                                                {
                                                  "name": "string",
                                                  "value": "string"
                                                }
                                              ]
                                            ],
                                            "path": "string",
                                            "port": "string",
                                            "scheme": "string"
                                          }
                                        ],
                                        "initialDelaySeconds": "number",
                                        "periodSeconds": "number",
                                        "successThreshold": "number",
                                        "tcpSocket": [
                                          "object",
                                          {
                                            "host": "string",
                                            "port": "string"
                                          }
                                        ],
                                        "terminationGracePeriodSeconds": "number",
                                        "timeoutSeconds": "number"
                                      }
                                    ],
                                    "name": "string",
                                    "ports": [
                                      "list",
                                      [
                                        "object",
                                        {
                                          "containerPort": "number",
                                          "hostIP": "string",
                                          "hostPort": "number",
                                          "name": "string",
                                          "protocol": "string"
                                        }
                                      ]
                                    ],
                                    "readinessProbe": [
                                      "object",
                                      {
                                        "exec": [
                                          "object",
                                          {
                                            "command": [
                                              "list",
                                              "string"
                                            ]
                                          }
                                        ],
                                        "failureThreshold": "number",
                                        "httpGet": [
                                          "object",
                                          {
                                            "host": "string",
                                            "httpHeaders": [
                                              "list",
                                              [
                                                "object",
                                                {
                                                  "name": "string",
                                                  "value": "string"
                                                }
                                              ]
                                            ],
                                            "path": "string",
                                            "port": "string",
                                            "scheme": "string"
                                          }
                                        ],
                                        "initialDelaySeconds": "number",
                                        "periodSeconds": "number",
                                        "successThreshold": "number",
                                        "tcpSocket": [
                                          "object",
                                          {
                                            "host": "string",
                                            "port": "string"
                                          }
                                        ],
                                        "terminationGracePeriodSeconds": "number",
                                        "timeoutSeconds": "number"
                                      }
                                    ],
                                    "resources": [
                                      "object",
                                      {
                                        "limits": [
                                          "map",
                                          "string"
                                        ],
                                        "requests": [
                                          "map",
                                          "string"
                                        ]
                                      }
                                    ],
                                    "securityContext": [
                                      "object",
                                      {
                                        "allowPrivilegeEscalation": "bool",
                                        "capabilities": [
                                          "object",
                                          {
                                            "add": [
                                              "list",
                                              "string"
                                            ],
                                            "drop": [
                                              "list",
                                              "string"
                                            ]
                                          }
                                        ],
                                        "privileged": "bool",
                                        "procMount": "string",
                                        "readOnlyRootFilesystem": "bool",
                                        "runAsGroup": "number",
                                        "runAsNonRoot": "bool",
                                        "runAsUser": "number",
                                        "seLinuxOptions": [
                                          "object",
                                          {
                                            "level": "string",
                                            "role": "string",
                                            "type": "string",
                                            "user": "string"
                                          }
                                        ],
                                        "seccompProfile": [
                                          "object",
                                          {
                                            "localhostProfile": "string",
                                            "type": "string"
                                          }
                                        ],
                                        "windowsOptions": [
                                          "object",
                                          {
                                            "gmsaCredentialSpec": "string",
                                            "gmsaCredentialSpecName": "string",
                                            "runAsUserName": "string"
                                          }
                                        ]
                                      }
                                    ],
                                    "startupProbe": [
                                      "object",
                                      {
                                        "exec": [
                                          "object",
                                          {
                                            "command": [
                                              "list",
                                              "string"
                                            ]
                                          }
                                        ],
                                        "failureThreshold": "number",
                                        "httpGet": [
                                          "object",
                                          {
                                            "host": "string",
                                            "httpHeaders": [
                                              "list",
                                              [
                                                "object",
                                                {
                                                  "name": "string",
                                                  "value": "string"
                                                }
                                              ]
                                            ],
                                            "path": "string",
                                            "port": "string",
                                            "scheme": "string"
                                          }
                                        ],
                                        "initialDelaySeconds": "number",
                                        "periodSeconds": "number",
                                        "successThreshold": "number",
                                        "tcpSocket": [
                                          "object",
                                          {
                                            "host": "string",
                                            "port": "string"
                                          }
                                        ],
                                        "terminationGracePeriodSeconds": "number",
                                        "timeoutSeconds": "number"
                                      }
                                    ],
                                    "stdin": "bool",
                                    "stdinOnce": "bool",
                                    "targetContainerName": "string",
                                    "terminationMessagePath": "string",
                                    "terminationMessagePolicy": "string",
                                    "tty": "bool",
                                    "volumeDevices": [
                                      "list",
                                      [
                                        "object",
                                        {
                                          "devicePath": "string",
                                          "name": "string"
                                        }
                                      ]
                                    ],
                                    "volumeMounts": [
                                      "list",
                                      [
                                        "object",
                                        {
                                          "mountPath": "string",
                                          "mountPropagation": "string",
                                          "name": "string",
                                          "readOnly": "bool",
                                          "subPath": "string",
                                          "subPathExpr": "string"
                                        }
                                      ]
                                    ],
                                    "workingDir": "string"
                                  }
                                ]
                              ],
                              "hostAliases": [
                                "list",
                                [
                                  "object",
                                  {
                                    "hostnames": [
                                      "list",
                                      "string"
                                    ],
                                    "ip": "string"
                                  }
                                ]
                              ],
                              "hostIPC": "bool",
                              "hostNetwork": "bool",
                              "hostPID": "bool",
                              "hostname": "string",
                              "imagePullSecrets": [
                                "list",
                                [
                                  "object",
                                  {
                                    "name": "string"
                                  }
                                ]
                              ],
                              "initContainers": [
                                "list",
                                [
                                  "object",
                                  {
                                    "args": [
                                      "list",
                                      "string"
                                    ],
                                    "command": [
                                      "list",
                                      "string"
                                    ],
                                    "env": [
                                      "list",
                                      [
                                        "object",
                                        {
                                          "name": "string",
                                          "value": "string",
                                          "valueFrom": [
                                            "object",
                                            {
                                              "configMapKeyRef": [
                                                "object",
                                                {
                                                  "key": "string",
                                                  "name": "string",
                                                  "optional": "bool"
                                                }
                                              ],
                                              "fieldRef": [
                                                "object",
                                                {
                                                  "apiVersion": "string",
                                                  "fieldPath": "string"
                                                }
                                              ],
                                              "resourceFieldRef": [
                                                "object",
                                                {
                                                  "containerName": "string",
                                                  "divisor": "string",
                                                  "resource": "string"
                                                }
                                              ],
                                              "secretKeyRef": [
                                                "object",
                                                {
                                                  "key": "string",
                                                  "name": "string",
                                                  "optional": "bool"
                                                }
                                              ]
                                            }
                                          ]
                                        }
                                      ]
                                    ],
                                    "envFrom": [
                                      "list",
                                      [
                                        "object",
                                        {
                                          "configMapRef": [
                                            "object",
                                            {
                                              "name": "string",
                                              "optional": "bool"
                                            }
                                          ],
                                          "prefix": "string",
                                          "secretRef": [
                                            "object",
                                            {
                                              "name": "string",
                                              "optional": "bool"
                                            }
                                          ]
                                        }
                                      ]
                                    ],
                                    "image": "string",
                                    "imagePullPolicy": "string",
                                    "lifecycle": [
                                      "object",
                                      {
                                        "postStart": [
                                          "object",
                                          {
                                            "exec": [
                                              "object",
                                              {
                                                "command": [
                                                  "list",
                                                  "string"
                                                ]
                                              }
                                            ],
                                            "httpGet": [
                                              "object",
                                              {
                                                "host": "string",
                                                "httpHeaders": [
                                                  "list",
                                                  [
                                                    "object",
                                                    {
                                                      "name": "string",
                                                      "value": "string"
                                                    }
                                                  ]
                                                ],
                                                "path": "string",
                                                "port": "string",
                                                "scheme": "string"
                                              }
                                            ],
                                            "tcpSocket": [
                                              "object",
                                              {
                                                "host": "string",
                                                "port": "string"
                                              }
                                            ]
                                          }
                                        ],
                                        "preStop": [
                                          "object",
                                          {
                                            "exec": [
                                              "object",
                                              {
                                                "command": [
                                                  "list",
                                                  "string"
                                                ]
                                              }
                                            ],
                                            "httpGet": [
                                              "object",
                                              {
                                                "host": "string",
                                                "httpHeaders": [
                                                  "list",
                                                  [
                                                    "object",
                                                    {
                                                      "name": "string",
                                                      "value": "string"
                                                    }
                                                  ]
                                                ],
                                                "path": "string",
                                                "port": "string",
                                                "scheme": "string"
                                              }
                                            ],
                                            "tcpSocket": [
                                              "object",
                                              {
                                                "host": "string",
                                                "port": "string"
                                              }
                                            ]
                                          }
                                        ]
                                      }
                                    ],
                                    "livenessProbe": [
                                      "object",
                                      {
                                        "exec": [
                                          "object",
                                          {
                                            "command": [
                                              "list",
                                              "string"
                                            ]
                                          }
                                        ],
                                        "failureThreshold": "number",
                                        "httpGet": [
                                          "object",
                                          {
                                            "host": "string",
                                            "httpHeaders": [
                                              "list",
                                              [
                                                "object",
                                                {
                                                  "name": "string",
                                                  "value": "string"
                                                }
                                              ]
                                            ],
                                            "path": "string",
                                            "port": "string",
                                            "scheme": "string"
                                          }
                                        ],
                                        "initialDelaySeconds": "number",
                                        "periodSeconds": "number",
                                        "successThreshold": "number",
                                        "tcpSocket": [
                                          "object",
                                          {
                                            "host": "string",
                                            "port": "string"
                                          }
                                        ],
                                        "terminationGracePeriodSeconds": "number",
                                        "timeoutSeconds": "number"
                                      }
                                    ],
                                    "name": "string",
                                    "ports": [
                                      "list",
                                      [
                                        "object",
                                        {
                                          "containerPort": "number",
                                          "hostIP": "string",
                                          "hostPort": "number",
                                          "name": "string",
                                          "protocol": "string"
                                        }
                                      ]
                                    ],
                                    "readinessProbe": [
                                      "object",
                                      {
                                        "exec": [
                                          "object",
                                          {
                                            "command": [
                                              "list",
                                              "string"
                                            ]
                                          }
                                        ],
                                        "failureThreshold": "number",
                                        "httpGet": [
                                          "object",
                                          {
                                            "host": "string",
                                            "httpHeaders": [
                                              "list",
                                              [
                                                "object",
                                                {
                                                  "name": "string",
                                                  "value": "string"
                                                }
                                              ]
                                            ],
                                            "path": "string",
                                            "port": "string",
                                            "scheme": "string"
                                          }
                                        ],
                                        "initialDelaySeconds": "number",
                                        "periodSeconds": "number",
                                        "successThreshold": "number",
                                        "tcpSocket": [
                                          "object",
                                          {
                                            "host": "string",
                                            "port": "string"
                                          }
                                        ],
                                        "terminationGracePeriodSeconds": "number",
                                        "timeoutSeconds": "number"
                                      }
                                    ],
                                    "resources": [
                                      "object",
                                      {
                                        "limits": [
                                          "map",
                                          "string"
                                        ],
                                        "requests": [
                                          "map",
                                          "string"
                                        ]
                                      }
                                    ],
                                    "securityContext": [
                                      "object",
                                      {
                                        "allowPrivilegeEscalation": "bool",
                                        "capabilities": [
                                          "object",
                                          {
                                            "add": [
                                              "list",
                                              "string"
                                            ],
                                            "drop": [
                                              "list",
                                              "string"
                                            ]
                                          }
                                        ],
                                        "privileged": "bool",
                                        "procMount": "string",
                                        "readOnlyRootFilesystem": "bool",
                                        "runAsGroup": "number",
                                        "runAsNonRoot": "bool",
                                        "runAsUser": "number",
                                        "seLinuxOptions": [
                                          "object",
                                          {
                                            "level": "string",
                                            "role": "string",
                                            "type": "string",
                                            "user": "string"
                                          }
                                        ],
                                        "seccompProfile": [
                                          "object",
                                          {
                                            "localhostProfile": "string",
                                            "type": "string"
                                          }
                                        ],
                                        "windowsOptions": [
                                          "object",
                                          {
                                            "gmsaCredentialSpec": "string",
                                            "gmsaCredentialSpecName": "string",
                                            "runAsUserName": "string"
                                          }
                                        ]
                                      }
                                    ],
                                    "startupProbe": [
                                      "object",
                                      {
                                        "exec": [
                                          "object",
                                          {
                                            "command": [
                                              "list",
                                              "string"
                                            ]
                                          }
                                        ],
                                        "failureThreshold": "number",
                                        "httpGet": [
                                          "object",
                                          {
                                            "host": "string",
                                            "httpHeaders": [
                                              "list",
                                              [
                                                "object",
                                                {
                                                  "name": "string",
                                                  "value": "string"
                                                }
                                              ]
                                            ],
                                            "path": "string",
                                            "port": "string",
                                            "scheme": "string"
                                          }
                                        ],
                                        "initialDelaySeconds": "number",
                                        "periodSeconds": "number",
                                        "successThreshold": "number",
                                        "tcpSocket": [
                                          "object",
                                          {
                                            "host": "string",
                                            "port": "string"
                                          }
                                        ],
                                        "terminationGracePeriodSeconds": "number",
                                        "timeoutSeconds": "number"
                                      }
                                    ],
                                    "stdin": "bool",
                                    "stdinOnce": "bool",
                                    "terminationMessagePath": "string",
                                    "terminationMessagePolicy": "string",
                                    "tty": "bool",
                                    "volumeDevices": [
                                      "list",
                                      [
                                        "object",
                                        {
                                          "devicePath": "string",
                                          "name": "string"
                                        }
                                      ]
                                    ],
                                    "volumeMounts": [
                                      "list",
                                      [
                                        "object",
                                        {
                                          "mountPath": "string",
                                          "mountPropagation": "string",
                                          "name": "string",
                                          "readOnly": "bool",
                                          "subPath": "string",
                                          "subPathExpr": "string"
                                        }
                                      ]
                                    ],
                                    "workingDir": "string"
                                  }
                                ]
                              ],
                              "nodeName": "string",
                              "nodeSelector": [
                                "map",
                                "string"
                              ],
                              "overhead": [
                                "map",
                                "string"
                              ],
                              "preemptionPolicy": "string",
                              "priority": "number",
                              "priorityClassName": "string",
                              "readinessGates": [
                                "list",
                                [
                                  "object",
                                  {
                                    "conditionType": "string"
                                  }
                                ]
                              ],
                              "restartPolicy": "string",
                              "runtimeClassName": "string",
                              "schedulerName": "string",
                              "securityContext": [
                                "object",
                                {
                                  "fsGroup": "number",
                                  "fsGroupChangePolicy": "string",
                                  "runAsGroup": "number",
                                  "runAsNonRoot": "bool",
                                  "runAsUser": "number",
                                  "seLinuxOptions": [
                                    "object",
                                    {
                                      "level": "string",
                                      "role": "string",
                                      "type": "string",
                                      "user": "string"
                                    }
                                  ],
                                  "seccompProfile": [
                                    "object",
                                    {
                                      "localhostProfile": "string",
                                      "type": "string"
                                    }
                                  ],
                                  "supplementalGroups": [
                                    "list",
                                    "number"
                                  ],
                                  "sysctls": [
                                    "list",
                                    [
                                      "object",
                                      {
                                        "name": "string",
                                        "value": "string"
                                      }
                                    ]
                                  ],
                                  "windowsOptions": [
                                    "object",
                                    {
                                      "gmsaCredentialSpec": "string",
                                      "gmsaCredentialSpecName": "string",
                                      "runAsUserName": "string"
                                    }
                                  ]
                                }
                              ],
                              "serviceAccount": "string",
                              "serviceAccountName": "string",
                              "setHostnameAsFQDN": "bool",
                              "shareProcessNamespace": "bool",
                              "subdomain": "string",
                              "terminationGracePeriodSeconds": "number",
                              "tolerations": [
                                "list",
                                [
                                  "object",
                                  {
                                    "effect": "string",
                                    "key": "string",
                                    "operator": "string",
                                    "tolerationSeconds": "number",
                                    "value": "string"
                                  }
                                ]
                              ],
                              "topologySpreadConstraints": [
                                "list",
                                [
                                  "object",
                                  {
                                    "labelSelector": [
                                      "object",
                                      {
                                        "matchExpressions": [
                                          "list",
                                          [
                                            "object",
                                            {
                                              "key": "string",
                                              "operator": "string",
                                              "values": [
                                                "list",
                                                "string"
                                              ]
                                            }
                                          ]
                                        ],
                                        "matchLabels": [
                                          "map",
                                          "string"
                                        ]
                                      }
                                    ],
                                    "maxSkew": "number",
                                    "topologyKey": "string",
                                    "whenUnsatisfiable": "string"
                                  }
                                ]
                              ],
                              "volumes": [
                                "tuple",
                                [
                                  [
                                    "object",
                                    {
                                      "awsElasticBlockStore": [
                                        "object",
                                        {
                                          "fsType": "string",
                                          "partition": "number",
                                          "readOnly": "bool",
                                          "volumeID": "string"
                                        }
                                      ],
                                      "azureDisk": [
                                        "object",
                                        {
                                          "cachingMode": "string",
                                          "diskName": "string",
                                          "diskURI": "string",
                                          "fsType": "string",
                                          "kind": "string",
                                          "readOnly": "bool"
                                        }
                                      ],
                                      "azureFile": [
                                        "object",
                                        {
                                          "readOnly": "bool",
                                          "secretName": "string",
                                          "shareName": "string"
                                        }
                                      ],
                                      "cephfs": [
                                        "object",
                                        {
                                          "monitors": [
                                            "list",
                                            "string"
                                          ],
                                          "path": "string",
                                          "readOnly": "bool",
                                          "secretFile": "string",
                                          "secretRef": [
                                            "object",
                                            {
                                              "name": "string"
                                            }
                                          ],
                                          "user": "string"
                                        }
                                      ],
                                      "cinder": [
                                        "object",
                                        {
                                          "fsType": "string",
                                          "readOnly": "bool",
                                          "secretRef": [
                                            "object",
                                            {
                                              "name": "string"
                                            }
                                          ],
                                          "volumeID": "string"
                                        }
                                      ],
                                      "configMap": [
                                        "object",
                                        {
                                          "defaultMode": "number",
                                          "items": [
                                            "list",
                                            [
                                              "object",
                                              {
                                                "key": "string",
                                                "mode": "number",
                                                "path": "string"
                                              }
                                            ]
                                          ],
                                          "name": "string",
                                          "optional": "bool"
                                        }
                                      ],
                                      "csi": [
                                        "object",
                                        {
                                          "driver": "string",
                                          "fsType": "string",
                                          "nodePublishSecretRef": [
                                            "object",
                                            {
                                              "name": "string"
                                            }
                                          ],
                                          "readOnly": "bool",
                                          "volumeAttributes": [
                                            "map",
                                            "string"
                                          ]
                                        }
                                      ],
                                      "downwardAPI": [
                                        "object",
                                        {
                                          "defaultMode": "number",
                                          "items": [
                                            "list",
                                            [
                                              "object",
                                              {
                                                "fieldRef": [
                                                  "object",
                                                  {
                                                    "apiVersion": "string",
                                                    "fieldPath": "string"
                                                  }
                                                ],
                                                "mode": "number",
                                                "path": "string",
                                                "resourceFieldRef": [
                                                  "object",
                                                  {
                                                    "containerName": "string",
                                                    "divisor": "string",
                                                    "resource": "string"
                                                  }
                                                ]
                                              }
                                            ]
                                          ]
                                        }
                                      ],
                                      "emptyDir": [
                                        "object",
                                        {
                                          "medium": "string",
                                          "sizeLimit": "string"
                                        }
                                      ],
                                      "ephemeral": [
                                        "object",
                                        {
                                          "volumeClaimTemplate": [
                                            "object",
                                            {
                                              "metadata": [
                                                "object",
                                                {
                                                  "annotations": [
                                                    "map",
                                                    "string"
                                                  ],
                                                  "clusterName": "string",
                                                  "creationTimestamp": "string",
                                                  "deletionGracePeriodSeconds": "number",
                                                  "deletionTimestamp": "string",
                                                  "finalizers": [
                                                    "list",
                                                    "string"
                                                  ],
                                                  "generateName": "string",
                                                  "generation": "number",
                                                  "labels": [
                                                    "map",
                                                    "string"
                                                  ],
                                                  "managedFields": [
                                                    "tuple",
                                                    [
                                                      [
                                                        "object",
                                                        {
                                                          "apiVersion": "string",
                                                          "fieldsType": "string",
                                                          "fieldsV1": "dynamic",
                                                          "manager": "string",
                                                          "operation": "string",
                                                          "time": "string"
                                                        }
                                                      ]
                                                    ]
                                                  ],
                                                  "name": "string",
                                                  "namespace": "string",
                                                  "ownerReferences": [
                                                    "list",
                                                    [
                                                      "object",
                                                      {
                                                        "apiVersion": "string",
                                                        "blockOwnerDeletion": "bool",
                                                        "controller": "bool",
                                                        "kind": "string",
                                                        "name": "string",
                                                        "uid": "string"
                                                      }
                                                    ]
                                                  ],
                                                  "resourceVersion": "string",
                                                  "selfLink": "string",
                                                  "uid": "string"
                                                }
                                              ],
                                              "spec": [
                                                "object",
                                                {
                                                  "accessModes": [
                                                    "list",
                                                    "string"
                                                  ],
                                                  "dataSource": [
                                                    "object",
                                                    {
                                                      "apiGroup": "string",
                                                      "kind": "string",
                                                      "name": "string"
                                                    }
                                                  ],
                                                  "resources": [
                                                    "object",
                                                    {
                                                      "limits": [
                                                        "map",
                                                        "string"
                                                      ],
                                                      "requests": [
                                                        "map",
                                                        "string"
                                                      ]
                                                    }
                                                  ],
                                                  "selector": [
                                                    "object",
                                                    {
                                                      "matchExpressions": [
                                                        "list",
                                                        [
                                                          "object",
                                                          {
                                                            "key": "string",
                                                            "operator": "string",
                                                            "values": [
                                                              "list",
                                                              "string"
                                                            ]
                                                          }
                                                        ]
                                                      ],
                                                      "matchLabels": [
                                                        "map",
                                                        "string"
                                                      ]
                                                    }
                                                  ],
                                                  "storageClassName": "string",
                                                  "volumeMode": "string",
                                                  "volumeName": "string"
                                                }
                                              ]
                                            }
                                          ]
                                        }
                                      ],
                                      "fc": [
                                        "object",
                                        {
                                          "fsType": "string",
                                          "lun": "number",
                                          "readOnly": "bool",
                                          "targetWWNs": [
                                            "list",
                                            "string"
                                          ],
                                          "wwids": [
                                            "list",
                                            "string"
                                          ]
                                        }
                                      ],
                                      "flexVolume": [
                                        "object",
                                        {
                                          "driver": "string",
                                          "fsType": "string",
                                          "options": [
                                            "map",
                                            "string"
                                          ],
                                          "readOnly": "bool",
                                          "secretRef": [
                                            "object",
                                            {
                                              "name": "string"
                                            }
                                          ]
                                        }
                                      ],
                                      "flocker": [
                                        "object",
                                        {
                                          "datasetName": "string",
                                          "datasetUUID": "string"
                                        }
                                      ],
                                      "gcePersistentDisk": [
                                        "object",
                                        {
                                          "fsType": "string",
                                          "partition": "number",
                                          "pdName": "string",
                                          "readOnly": "bool"
                                        }
                                      ],
                                      "gitRepo": [
                                        "object",
                                        {
                                          "directory": "string",
                                          "repository": "string",
                                          "revision": "string"
                                        }
                                      ],
                                      "glusterfs": [
                                        "object",
                                        {
                                          "endpoints": "string",
                                          "path": "string",
                                          "readOnly": "bool"
                                        }
                                      ],
                                      "hostPath": [
                                        "object",
                                        {
                                          "path": "string",
                                          "type": "string"
                                        }
                                      ],
                                      "iscsi": [
                                        "object",
                                        {
                                          "chapAuthDiscovery": "bool",
                                          "chapAuthSession": "bool",
                                          "fsType": "string",
                                          "initiatorName": "string",
                                          "iqn": "string",
                                          "iscsiInterface": "string",
                                          "lun": "number",
                                          "portals": [
                                            "list",
                                            "string"
                                          ],
                                          "readOnly": "bool",
                                          "secretRef": [
                                            "object",
                                            {
                                              "name": "string"
                                            }
                                          ],
                                          "targetPortal": "string"
                                        }
                                      ],
                                      "name": "string",
                                      "nfs": [
                                        "object",
                                        {
                                          "path": "string",
                                          "readOnly": "bool",
                                          "server": "string"
                                        }
                                      ],
                                      "persistentVolumeClaim": [
                                        "object",
                                        {
                                          "claimName": "string",
                                          "readOnly": "bool"
                                        }
                                      ],
                                      "photonPersistentDisk": [
                                        "object",
                                        {
                                          "fsType": "string",
                                          "pdID": "string"
                                        }
                                      ],
                                      "portworxVolume": [
                                        "object",
                                        {
                                          "fsType": "string",
                                          "readOnly": "bool",
                                          "volumeID": "string"
                                        }
                                      ],
                                      "projected": [
                                        "object",
                                        {
                                          "defaultMode": "number",
                                          "sources": [
                                            "list",
                                            [
                                              "object",
                                              {
                                                "configMap": [
                                                  "object",
                                                  {
                                                    "items": [
                                                      "list",
                                                      [
                                                        "object",
                                                        {
                                                          "key": "string",
                                                          "mode": "number",
                                                          "path": "string"
                                                        }
                                                      ]
                                                    ],
                                                    "name": "string",
                                                    "optional": "bool"
                                                  }
                                                ],
                                                "downwardAPI": [
                                                  "object",
                                                  {
                                                    "items": [
                                                      "list",
                                                      [
                                                        "object",
                                                        {
                                                          "fieldRef": [
                                                            "object",
                                                            {
                                                              "apiVersion": "string",
                                                              "fieldPath": "string"
                                                            }
                                                          ],
                                                          "mode": "number",
                                                          "path": "string",
                                                          "resourceFieldRef": [
                                                            "object",
                                                            {
                                                              "containerName": "string",
                                                              "divisor": "string",
                                                              "resource": "string"
                                                            }
                                                          ]
                                                        }
                                                      ]
                                                    ]
                                                  }
                                                ],
                                                "secret": [
                                                  "object",
                                                  {
                                                    "items": [
                                                      "list",
                                                      [
                                                        "object",
                                                        {
                                                          "key": "string",
                                                          "mode": "number",
                                                          "path": "string"
                                                        }
                                                      ]
                                                    ],
                                                    "name": "string",
                                                    "optional": "bool"
                                                  }
                                                ],
                                                "serviceAccountToken": [
                                                  "object",
                                                  {
                                                    "audience": "string",
                                                    "expirationSeconds": "number",
                                                    "path": "string"
                                                  }
                                                ]
                                              }
                                            ]
                                          ]
                                        }
                                      ],
                                      "quobyte": [
                                        "object",
                                        {
                                          "group": "string",
                                          "readOnly": "bool",
                                          "registry": "string",
                                          "tenant": "string",
                                          "user": "string",
                                          "volume": "string"
                                        }
                                      ],
                                      "rbd": [
                                        "object",
                                        {
                                          "fsType": "string",
                                          "image": "string",
                                          "keyring": "string",
                                          "monitors": [
                                            "list",
                                            "string"
                                          ],
                                          "pool": "string",
                                          "readOnly": "bool",
                                          "secretRef": [
                                            "object",
                                            {
                                              "name": "string"
                                            }
                                          ],
                                          "user": "string"
                                        }
                                      ],
                                      "scaleIO": [
                                        "object",
                                        {
                                          "fsType": "string",
                                          "gateway": "string",
                                          "protectionDomain": "string",
                                          "readOnly": "bool",
                                          "secretRef": [
                                            "object",
                                            {
                                              "name": "string"
                                            }
                                          ],
                                          "sslEnabled": "bool",
                                          "storageMode": "string",
                                          "storagePool": "string",
                                          "system": "string",
                                          "volumeName": "string"
                                        }
                                      ],
                                      "secret": [
                                        "object",
                                        {
                                          "defaultMode": "number",
                                          "items": [
                                            "list",
                                            [
                                              "object",
                                              {
                                                "key": "string",
                                                "mode": "number",
                                                "path": "string"
                                              }
                                            ]
                                          ],
                                          "optional": "bool",
                                          "secretName": "string"
                                        }
                                      ],
                                      "storageos": [
                                        "object",
                                        {
                                          "fsType": "string",
                                          "readOnly": "bool",
                                          "secretRef": [
                                            "object",
                                            {
                                              "name": "string"
                                            }
                                          ],
                                          "volumeName": "string",
                                          "volumeNamespace": "string"
                                        }
                                      ],
                                      "vsphereVolume": [
                                        "object",
                                        {
                                          "fsType": "string",
                                          "storagePolicyID": "string",
                                          "storagePolicyName": "string",
                                          "volumePath": "string"
                                        }
                                      ]
                                    }
                                  ]
                                ]
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "timeouts": [],
            "wait": [],
            "wait_for": null
          },
          "sensitive_attributes": []
        }
      ]
    },
    {
      "mode": "managed",
      "type": "kubernetes_manifest",
      "name": "elasticsearch_elasticsearch",
      "provider": "provider[\"registry.terraform.io/hashicorp/kubernetes\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "computed_fields": null,
            "field_manager": [],
            "manifest": {
              "value": {
                "apiVersion": "elasticsearch.k8s.elastic.co/v1",
                "kind": "Elasticsearch",
                "metadata": {
                  "annotations": {
                    "elasticsearch.alpha.elastic.co/autoscaling-spec": "{\n    \"policies\": [{\n        \"name\": \"hot\",\n        \"roles\": [\"data_hot\", \"data_content\", \"ingest\"],\n        \"deciders\": {\n          \"proactive_storage\": {\n              \"forecast_window\": \"5m\"\n          }\n        },\n        \"resources\": {\n            \"nodeCount\": { \"min\": 3, \"max\": 6 },\n            \"cpu\": { \"min\": 1, \"max\": 8 },\n            \"memory\": { \"min\": \"2Gi\", \"max\": \"16Gi\" },\n            \"storage\": { \"min\": \"64Gi\", \"max\": \"512Gi\" }\n        }\n    },\n    {\n        \"name\": \"ml\",\n        \"roles\": [\"ml\"],\n        \"deciders\": {\n            \"ml\": {\n                \"down_scale_delay\": \"10m\"\n            }\n        },\n        \"resources\": {\n            \"nodeCount\": { \"min\": 1, \"max\": 9 },\n            \"cpu\": { \"min\": 1, \"max\": 4 },\n            \"memory\": { \"min\": \"2Gi\", \"max\": \"8Gi\" }\n        }\n    }]\n}\n        \n"
                  },
                  "name": "elasticsearch",
                  "namespace": "default"
                },
                "spec": {
                  "monitoring": {
                    "logs": {
                      "elasticsearchRefs": [
                        {
                          "name": "monitoring",
                          "namespace": "monitoring"
                        }
                      ]
                    },
                    "metrics": {
                      "elasticsearchRefs": [
                        {
                          "name": "monitoring",
                          "namespace": "monitoring"
                        }
                      ]
                    }
                  },
                  "nodeSets": [
                    {
                      "config": {
                        "node.attr.zone": "europe-west1-b",
                        "node.roles": [
                          "data_hot",
                          "data_content",
                          "ingest"
                        ],
                        "node.store.allow_mmap": false,
                        "xpack.security.authc.realms": {
                          "saml": {
                            "saml1": {
                              "attributes.principal": "nameid",
                              "idp.entity_id": "urn:framsouza.eu.auth0.com",
                              "idp.metadata.path": "https://framsouza.eu.auth0.com/samlp/metadata/nbNudmA4FTPI3kO6im0o5KPV3gugxxQI",
                              "order": 2,
                              "sp.acs": "https://kibana.framsouza.co/api/security/v1/saml",
                              "sp.entity_id": "https://framsouza.co",
                              "sp.logout": "https://kibana.framsouza.co/logout"
                            }
                          }
                        }
                      },
                      "count": 1,
                      "name": "hot-zone-b",
                      "podTemplate": {
                        "spec": {
                          "affinity": {
                            "nodeAffinity": {
                              "requiredDuringSchedulingIgnoredDuringExecution": {
                                "nodeSelectorTerms": [
                                  {
                                    "matchExpressions": [
                                      {
                                        "key": "failure-domain.beta.kubernetes.io/zone",
                                        "operator": "In",
                                        "values": [
                                          "europe-west1-b"
                                        ]
                                      }
                                    ]
                                  }
                                ]
                              }
                            }
                          },
                          "containers": [
                            {
                              "env": [
                                {
                                  "name": "READINESS_PROBE_TIMEOUT",
                                  "value": "10"
                                }
                              ],
                              "name": "elasticsearch",
                              "readinessProbe": {
                                "exec": {
                                  "command": [
                                    "bash",
                                    "-c",
                                    "/mnt/elastic-internal/scripts/readiness-probe-script.sh"
                                  ]
                                },
                                "failureThreshold": 3,
                                "initialDelaySeconds": 10,
                                "periodSeconds": 12,
                                "successThreshold": 1,
                                "timeoutSeconds": 12
                              },
                              "resources": {
                                "limits": {
                                  "memory": "4Gi"
                                },
                                "requests": {
                                  "memory": "4Gi"
                                }
                              }
                            }
                          ],
                          "nodeSelector": {
                            "type": "hot"
                          }
                        }
                      },
                      "volumeClaimTemplates": [
                        {
                          "metadata": {
                            "name": "elasticsearch-data"
                          },
                          "spec": {
                            "accessModes": [
                              "ReadWriteOnce"
                            ],
                            "resources": {
                              "requests": {
                                "storage": "100Gi"
                              }
                            },
                            "storageClassName": "sc-hot"
                          }
                        }
                      ]
                    },
                    {
                      "config": {
                        "node.attr.zone": "europe-west1-c",
                        "node.roles": [
                          "data_hot",
                          "data_content",
                          "ingest"
                        ],
                        "node.store.allow_mmap": false,
                        "xpack.security.authc.realms": {
                          "saml": {
                            "saml1": {
                              "attributes.principal": "nameid",
                              "idp.entity_id": "urn:framsouza.eu.auth0.com",
                              "idp.metadata.path": "https://framsouza.eu.auth0.com/samlp/metadata/nbNudmA4FTPI3kO6im0o5KPV3gugxxQI",
                              "order": 2,
                              "sp.acs": "https://kibana.framsouza.co/api/security/v1/saml",
                              "sp.entity_id": "https://framsouza.co",
                              "sp.logout": "https://kibana.framsouza.co/logout"
                            }
                          }
                        }
                      },
                      "count": 1,
                      "name": "hot-zone-c",
                      "podTemplate": {
                        "spec": {
                          "affinity": {
                            "nodeAffinity": {
                              "requiredDuringSchedulingIgnoredDuringExecution": {
                                "nodeSelectorTerms": [
                                  {
                                    "matchExpressions": [
                                      {
                                        "key": "failure-domain.beta.kubernetes.io/zone",
                                        "operator": "In",
                                        "values": [
                                          "europe-west1-c"
                                        ]
                                      }
                                    ]
                                  }
                                ]
                              }
                            }
                          },
                          "containers": [
                            {
                              "env": [
                                {
                                  "name": "READINESS_PROBE_TIMEOUT",
                                  "value": "10"
                                }
                              ],
                              "name": "elasticsearch",
                              "readinessProbe": {
                                "exec": {
                                  "command": [
                                    "bash",
                                    "-c",
                                    "/mnt/elastic-internal/scripts/readiness-probe-script.sh"
                                  ]
                                },
                                "failureThreshold": 3,
                                "initialDelaySeconds": 10,
                                "periodSeconds": 12,
                                "successThreshold": 1,
                                "timeoutSeconds": 12
                              },
                              "resources": {
                                "limits": {
                                  "memory": "4Gi"
                                },
                                "requests": {
                                  "cpu": 1,
                                  "memory": "4Gi"
                                }
                              }
                            }
                          ],
                          "nodeSelector": {
                            "type": "hot"
                          }
                        }
                      },
                      "volumeClaimTemplates": [
                        {
                          "metadata": {
                            "name": "elasticsearch-data"
                          },
                          "spec": {
                            "accessModes": [
                              "ReadWriteOnce"
                            ],
                            "resources": {
                              "requests": {
                                "storage": "50Gi"
                              }
                            },
                            "storageClassName": "sc-hot"
                          }
                        }
                      ]
                    },
                    {
                      "config": {
                        "node.attr.zone": "europe-west1-d",
                        "node.roles": [
                          "data_hot",
                          "data_content",
                          "ingest"
                        ],
                        "node.store.allow_mmap": false,
                        "xpack.security.authc.realms": {
                          "saml": {
                            "saml1": {
                              "attributes.principal": "nameid",
                              "idp.entity_id": "urn:framsouza.eu.auth0.com",
                              "idp.metadata.path": "https://framsouza.eu.auth0.com/samlp/metadata/nbNudmA4FTPI3kO6im0o5KPV3gugxxQI",
                              "order": 2,
                              "sp.acs": "https://kibana.framsouza.co/api/security/v1/saml",
                              "sp.entity_id": "https://framsouza.co",
                              "sp.logout": "https://kibana.framsouza.co/logout"
                            }
                          }
                        }
                      },
                      "count": 1,
                      "name": "hot-zone-d",
                      "podTemplate": {
                        "spec": {
                          "affinity": {
                            "nodeAffinity": {
                              "requiredDuringSchedulingIgnoredDuringExecution": {
                                "nodeSelectorTerms": [
                                  {
                                    "matchExpressions": [
                                      {
                                        "key": "failure-domain.beta.kubernetes.io/zone",
                                        "operator": "In",
                                        "values": [
                                          "europe-west1-d"
                                        ]
                                      }
                                    ]
                                  }
                                ]
                              }
                            }
                          },
                          "containers": [
                            {
                              "env": [
                                {
                                  "name": "READINESS_PROBE_TIMEOUT",
                                  "value": "10"
                                }
                              ],
                              "name": "elasticsearch",
                              "readinessProbe": {
                                "exec": {
                                  "command": [
                                    "bash",
                                    "-c",
                                    "/mnt/elastic-internal/scripts/readiness-probe-script.sh"
                                  ]
                                },
                                "failureThreshold": 3,
                                "initialDelaySeconds": 10,
                                "periodSeconds": 12,
                                "successThreshold": 1,
                                "timeoutSeconds": 12
                              },
                              "resources": {
                                "limits": {
                                  "memory": "4Gi"
                                },
                                "requests": {
                                  "cpu": 1,
                                  "memory": "4Gi"
                                }
                              }
                            }
                          ],
                          "nodeSelector": {
                            "type": "hot"
                          }
                        }
                      },
                      "volumeClaimTemplates": [
                        {
                          "metadata": {
                            "name": "elasticsearch-data"
                          },
                          "spec": {
                            "accessModes": [
                              "ReadWriteOnce"
                            ],
                            "resources": {
                              "requests": {
                                "storage": "50Gi"
                              }
                            },
                            "storageClassName": "sc-hot"
                          }
                        }
                      ]
                    },
                    {
                      "config": {
                        "node.attr.zone": "europe-west1-b",
                        "node.roles": "data_warm",
                        "node.store.allow_mmap": false,
                        "xpack.security.authc.realms": {
                          "saml": {
                            "saml1": {
                              "attributes.principal": "nameid",
                              "idp.entity_id": "urn:framsouza.eu.auth0.com",
                              "idp.metadata.path": "https://framsouza.eu.auth0.com/samlp/metadata/nbNudmA4FTPI3kO6im0o5KPV3gugxxQI",
                              "order": 2,
                              "sp.acs": "https://kibana.framsouza.co/api/security/v1/saml",
                              "sp.entity_id": "https://framsouza.co",
                              "sp.logout": "https://kibana.framsouza.co/logout"
                            }
                          }
                        }
                      },
                      "count": 1,
                      "name": "warm-zone-b",
                      "podTemplate": {
                        "spec": {
                          "affinity": {
                            "nodeAffinity": {
                              "requiredDuringSchedulingIgnoredDuringExecution": {
                                "nodeSelectorTerms": [
                                  {
                                    "matchExpressions": [
                                      {
                                        "key": "failure-domain.beta.kubernetes.io/zone",
                                        "operator": "In",
                                        "values": [
                                          "europe-west1-b"
                                        ]
                                      }
                                    ]
                                  }
                                ]
                              }
                            }
                          },
                          "containers": [
                            {
                              "env": [
                                {
                                  "name": "READINESS_PROBE_TIMEOUT",
                                  "value": "10"
                                }
                              ],
                              "name": "elasticsearch",
                              "readinessProbe": {
                                "exec": {
                                  "command": [
                                    "bash",
                                    "-c",
                                    "/mnt/elastic-internal/scripts/readiness-probe-script.sh"
                                  ]
                                },
                                "failureThreshold": 3,
                                "initialDelaySeconds": 10,
                                "periodSeconds": 12,
                                "successThreshold": 1,
                                "timeoutSeconds": 12
                              },
                              "resources": {
                                "limits": {
                                  "memory": "2Gi"
                                },
                                "requests": {
                                  "cpu": 1,
                                  "memory": "2Gi"
                                }
                              }
                            }
                          ],
                          "nodeSelector": {
                            "type": "warm"
                          }
                        }
                      },
                      "volumeClaimTemplates": [
                        {
                          "metadata": {
                            "name": "elasticsearch-data"
                          },
                          "spec": {
                            "accessModes": [
                              "ReadWriteOnce"
                            ],
                            "resources": {
                              "requests": {
                                "storage": "50Gi"
                              }
                            },
                            "storageClassName": "sc-warm-cold"
                          }
                        }
                      ]
                    },
                    {
                      "config": {
                        "node.attr.zone": "europe-west1-c",
                        "node.roles": "data_warm",
                        "node.store.allow_mmap": false,
                        "xpack.security.authc.realms": {
                          "saml": {
                            "saml1": {
                              "attributes.principal": "nameid",
                              "idp.entity_id": "urn:framsouza.eu.auth0.com",
                              "idp.metadata.path": "https://framsouza.eu.auth0.com/samlp/metadata/nbNudmA4FTPI3kO6im0o5KPV3gugxxQI",
                              "order": 2,
                              "sp.acs": "https://kibana.framsouza.co/api/security/v1/saml",
                              "sp.entity_id": "https://framsouza.co",
                              "sp.logout": "https://kibana.framsouza.co/logout"
                            }
                          }
                        }
                      },
                      "count": 1,
                      "name": "warm-zone-c",
                      "podTemplate": {
                        "spec": {
                          "affinity": {
                            "nodeAffinity": {
                              "requiredDuringSchedulingIgnoredDuringExecution": {
                                "nodeSelectorTerms": [
                                  {
                                    "matchExpressions": [
                                      {
                                        "key": "failure-domain.beta.kubernetes.io/zone",
                                        "operator": "In",
                                        "values": [
                                          "europe-west1-c"
                                        ]
                                      }
                                    ]
                                  }
                                ]
                              }
                            }
                          },
                          "containers": [
                            {
                              "env": [
                                {
                                  "name": "READINESS_PROBE_TIMEOUT",
                                  "value": "10"
                                }
                              ],
                              "name": "elasticsearch",
                              "readinessProbe": {
                                "exec": {
                                  "command": [
                                    "bash",
                                    "-c",
                                    "/mnt/elastic-internal/scripts/readiness-probe-script.sh"
                                  ]
                                },
                                "failureThreshold": 3,
                                "initialDelaySeconds": 10,
                                "periodSeconds": 12,
                                "successThreshold": 1,
                                "timeoutSeconds": 12
                              },
                              "resources": {
                                "limits": {
                                  "memory": "2Gi"
                                },
                                "requests": {
                                  "cpu": 1,
                                  "memory": "2Gi"
                                }
                              }
                            }
                          ],
                          "nodeSelector": {
                            "type": "warm"
                          }
                        }
                      },
                      "volumeClaimTemplates": [
                        {
                          "metadata": {
                            "name": "elasticsearch-data"
                          },
                          "spec": {
                            "accessModes": [
                              "ReadWriteOnce"
                            ],
                            "resources": {
                              "requests": {
                                "storage": "50Gi"
                              }
                            },
                            "storageClassName": "sc-warm-cold"
                          }
                        }
                      ]
                    },
                    {
                      "config": {
                        "node.attr.zone": "europe-west1-d",
                        "node.roles": "data_warm",
                        "node.store.allow_mmap": false,
                        "xpack.security.authc.realms": {
                          "saml": {
                            "saml1": {
                              "attributes.principal": "nameid",
                              "idp.entity_id": "urn:framsouza.eu.auth0.com",
                              "idp.metadata.path": "https://framsouza.eu.auth0.com/samlp/metadata/nbNudmA4FTPI3kO6im0o5KPV3gugxxQI",
                              "order": 2,
                              "sp.acs": "https://kibana.framsouza.co/api/security/v1/saml",
                              "sp.entity_id": "https://framsouza.co",
                              "sp.logout": "https://kibana.framsouza.co/logout"
                            }
                          }
                        }
                      },
                      "count": 1,
                      "name": "warm-zone-d",
                      "podTemplate": {
                        "spec": {
                          "affinity": {
                            "nodeAffinity": {
                              "requiredDuringSchedulingIgnoredDuringExecution": {
                                "nodeSelectorTerms": [
                                  {
                                    "matchExpressions": [
                                      {
                                        "key": "failure-domain.beta.kubernetes.io/zone",
                                        "operator": "In",
                                        "values": [
                                          "europe-west1-d"
                                        ]
                                      }
                                    ]
                                  }
                                ]
                              }
                            }
                          },
                          "containers": [
                            {
                              "env": [
                                {
                                  "name": "READINESS_PROBE_TIMEOUT",
                                  "value": "10"
                                }
                              ],
                              "name": "elasticsearch",
                              "readinessProbe": {
                                "exec": {
                                  "command": [
                                    "bash",
                                    "-c",
                                    "/mnt/elastic-internal/scripts/readiness-probe-script.sh"
                                  ]
                                },
                                "failureThreshold": 3,
                                "initialDelaySeconds": 10,
                                "periodSeconds": 12,
                                "successThreshold": 1,
                                "timeoutSeconds": 12
                              },
                              "resources": {
                                "limits": {
                                  "memory": "2Gi"
                                },
                                "requests": {
                                  "cpu": 1,
                                  "memory": "2Gi"
                                }
                              }
                            }
                          ],
                          "nodeSelector": {
                            "type": "warm"
                          }
                        }
                      },
                      "volumeClaimTemplates": [
                        {
                          "metadata": {
                            "name": "elasticsearch-data"
                          },
                          "spec": {
                            "accessModes": [
                              "ReadWriteOnce"
                            ],
                            "resources": {
                              "requests": {
                                "storage": "50Gi"
                              }
                            },
                            "storageClassName": "sc-warm-cold"
                          }
                        }
                      ]
                    },
                    {
                      "config": {
                        "node.attr.zone": "europe-west1-b",
                        "node.roles": "data_cold",
                        "node.store.allow_mmap": false,
                        "xpack.security.authc.realms": {
                          "saml": {
                            "saml1": {
                              "attributes.principal": "nameid",
                              "idp.entity_id": "urn:framsouza.eu.auth0.com",
                              "idp.metadata.path": "https://framsouza.eu.auth0.com/samlp/metadata/nbNudmA4FTPI3kO6im0o5KPV3gugxxQI",
                              "order": 2,
                              "sp.acs": "https://kibana.framsouza.co/api/security/v1/saml",
                              "sp.entity_id": "https://framsouza.co",
                              "sp.logout": "https://kibana.framsouza.co/logout"
                            }
                          }
                        }
                      },
                      "count": 1,
                      "name": "cold-zone-b",
                      "podTemplate": {
                        "spec": {
                          "affinity": {
                            "nodeAffinity": {
                              "requiredDuringSchedulingIgnoredDuringExecution": {
                                "nodeSelectorTerms": [
                                  {
                                    "matchExpressions": [
                                      {
                                        "key": "failure-domain.beta.kubernetes.io/zone",
                                        "operator": "In",
                                        "values": [
                                          "europe-west1-b"
                                        ]
                                      }
                                    ]
                                  }
                                ]
                              }
                            }
                          },
                          "containers": [
                            {
                              "env": [
                                {
                                  "name": "READINESS_PROBE_TIMEOUT",
                                  "value": "10"
                                }
                              ],
                              "name": "elasticsearch",
                              "readinessProbe": {
                                "exec": {
                                  "command": [
                                    "bash",
                                    "-c",
                                    "/mnt/elastic-internal/scripts/readiness-probe-script.sh"
                                  ]
                                },
                                "failureThreshold": 3,
                                "initialDelaySeconds": 10,
                                "periodSeconds": 12,
                                "successThreshold": 1,
                                "timeoutSeconds": 12
                              },
                              "resources": {
                                "limits": {
                                  "memory": "2Gi"
                                },
                                "requests": {
                                  "memory": "2Gi"
                                }
                              }
                            }
                          ],
                          "nodeSelector": {
                            "type": "cold"
                          }
                        }
                      },
                      "volumeClaimTemplates": [
                        {
                          "metadata": {
                            "name": "elasticsearch-data"
                          },
                          "spec": {
                            "accessModes": [
                              "ReadWriteOnce"
                            ],
                            "resources": {
                              "requests": {
                                "storage": "100Gi"
                              }
                            },
                            "storageClassName": "sc-warm-cold"
                          }
                        }
                      ]
                    },
                    {
                      "config": {
                        "node.attr.zone": "europe-west1-b",
                        "node.roles": "data_frozen",
                        "node.store.allow_mmap": false,
                        "xpack.security.authc.realms": {
                          "saml": {
                            "saml1": {
                              "attributes.principal": "nameid",
                              "idp.entity_id": "urn:framsouza.eu.auth0.com",
                              "idp.metadata.path": "https://framsouza.eu.auth0.com/samlp/metadata/nbNudmA4FTPI3kO6im0o5KPV3gugxxQI",
                              "order": 2,
                              "sp.acs": "https://kibana.framsouza.co/api/security/v1/saml",
                              "sp.entity_id": "https://framsouza.co",
                              "sp.logout": "https://kibana.framsouza.co/logout"
                            }
                          }
                        }
                      },
                      "count": 1,
                      "name": "frozen-zone-b",
                      "podTemplate": {
                        "spec": {
                          "affinity": {
                            "nodeAffinity": {
                              "requiredDuringSchedulingIgnoredDuringExecution": {
                                "nodeSelectorTerms": [
                                  {
                                    "matchExpressions": [
                                      {
                                        "key": "failure-domain.beta.kubernetes.io/zone",
                                        "operator": "In",
                                        "values": [
                                          "europe-west1-b"
                                        ]
                                      }
                                    ]
                                  }
                                ]
                              }
                            }
                          },
                          "containers": [
                            {
                              "env": [
                                {
                                  "name": "READINESS_PROBE_TIMEOUT",
                                  "value": "10"
                                }
                              ],
                              "name": "elasticsearch",
                              "readinessProbe": {
                                "exec": {
                                  "command": [
                                    "bash",
                                    "-c",
                                    "/mnt/elastic-internal/scripts/readiness-probe-script.sh"
                                  ]
                                },
                                "failureThreshold": 3,
                                "initialDelaySeconds": 10,
                                "periodSeconds": 12,
                                "successThreshold": 1,
                                "timeoutSeconds": 12
                              },
                              "resources": {
                                "limits": {
                                  "memory": "2Gi"
                                },
                                "requests": {
                                  "memory": "2Gi"
                                }
                              }
                            }
                          ],
                          "nodeSelector": {
                            "type": "frozen"
                          }
                        }
                      },
                      "volumeClaimTemplates": [
                        {
                          "metadata": {
                            "name": "elasticsearch-data"
                          },
                          "spec": {
                            "accessModes": [
                              "ReadWriteOnce"
                            ],
                            "resources": {
                              "requests": {
                                "storage": "100Gi"
                              }
                            },
                            "storageClassName": "sc-warm-cold"
                          }
                        }
                      ]
                    },
                    {
                      "config": {
                        "node.attr.zone": "europe-west1-b",
                        "node.roles": "ml",
                        "node.store.allow_mmap": false,
                        "xpack.security.authc.realms": {
                          "saml": {
                            "saml1": {
                              "attributes.principal": "nameid",
                              "idp.entity_id": "urn:framsouza.eu.auth0.com",
                              "idp.metadata.path": "https://framsouza.eu.auth0.com/samlp/metadata/nbNudmA4FTPI3kO6im0o5KPV3gugxxQI",
                              "order": 2,
                              "sp.acs": "https://kibana.framsouza.co/api/security/v1/saml",
                              "sp.entity_id": "https://framsouza.co",
                              "sp.logout": "https://kibana.framsouza.co/logout"
                            }
                          }
                        }
                      },
                      "count": 1,
                      "name": "ml-zone-b",
                      "podTemplate": {
                        "spec": {
                          "affinity": {
                            "nodeAffinity": {
                              "requiredDuringSchedulingIgnoredDuringExecution": {
                                "nodeSelectorTerms": [
                                  {
                                    "matchExpressions": [
                                      {
                                        "key": "failure-domain.beta.kubernetes.io/zone",
                                        "operator": "In",
                                        "values": [
                                          "europe-west1-b"
                                        ]
                                      }
                                    ]
                                  }
                                ]
                              }
                            }
                          },
                          "containers": [
                            {
                              "env": [
                                {
                                  "name": "READINESS_PROBE_TIMEOUT",
                                  "value": "10"
                                }
                              ],
                              "name": "elasticsearch",
                              "readinessProbe": {
                                "exec": {
                                  "command": [
                                    "bash",
                                    "-c",
                                    "/mnt/elastic-internal/scripts/readiness-probe-script.sh"
                                  ]
                                },
                                "failureThreshold": 3,
                                "initialDelaySeconds": 10,
                                "periodSeconds": 12,
                                "successThreshold": 1,
                                "timeoutSeconds": 12
                              },
                              "resources": {
                                "limits": {
                                  "memory": "4Gi"
                                },
                                "requests": {
                                  "memory": "4Gi"
                                }
                              }
                            }
                          ],
                          "nodeSelector": {
                            "type": "hot"
                          }
                        }
                      },
                      "volumeClaimTemplates": [
                        {
                          "metadata": {
                            "name": "elasticsearch-data"
                          },
                          "spec": {
                            "accessModes": [
                              "ReadWriteOnce"
                            ],
                            "resources": {
                              "requests": {
                                "storage": "100Gi"
                              }
                            },
                            "storageClassName": "sc-hot"
                          }
                        }
                      ]
                    },
                    {
                      "config": {
                        "node.attr.zone": "europe-west1-b",
                        "node.roles": "master",
                        "node.store.allow_mmap": false,
                        "xpack.security.authc.realms": {
                          "saml": {
                            "saml1": {
                              "attributes.principal": "nameid",
                              "idp.entity_id": "urn:framsouza.eu.auth0.com",
                              "idp.metadata.path": "https://framsouza.eu.auth0.com/samlp/metadata/nbNudmA4FTPI3kO6im0o5KPV3gugxxQI",
                              "order": 2,
                              "sp.acs": "https://kibana.framsouza.co/api/security/v1/saml",
                              "sp.entity_id": "https://framsouza.co",
                              "sp.logout": "https://kibana.framsouza.co/logout"
                            }
                          }
                        }
                      },
                      "count": 1,
                      "name": "master-zone-b",
                      "podTemplate": {
                        "spec": {
                          "affinity": {
                            "nodeAffinity": {
                              "requiredDuringSchedulingIgnoredDuringExecution": {
                                "nodeSelectorTerms": [
                                  {
                                    "matchExpressions": [
                                      {
                                        "key": "failure-domain.beta.kubernetes.io/zone",
                                        "operator": "In",
                                        "values": [
                                          "europe-west1-b"
                                        ]
                                      }
                                    ]
                                  }
                                ]
                              }
                            }
                          },
                          "containers": [
                            {
                              "env": [
                                {
                                  "name": "READINESS_PROBE_TIMEOUT",
                                  "value": "10"
                                }
                              ],
                              "name": "elasticsearch",
                              "readinessProbe": {
                                "exec": {
                                  "command": [
                                    "bash",
                                    "-c",
                                    "/mnt/elastic-internal/scripts/readiness-probe-script.sh"
                                  ]
                                },
                                "failureThreshold": 3,
                                "initialDelaySeconds": 10,
                                "periodSeconds": 12,
                                "successThreshold": 1,
                                "timeoutSeconds": 12
                              },
                              "resources": {
                                "limits": {
                                  "memory": "2Gi"
                                },
                                "requests": {
                                  "cpu": 1,
                                  "memory": "2Gi"
                                }
                              }
                            }
                          ],
                          "nodeSelector": {
                            "type": "hot"
                          }
                        }
                      },
                      "volumeClaimTemplates": [
                        {
                          "metadata": {
                            "name": "elasticsearch-data"
                          },
                          "spec": {
                            "accessModes": [
                              "ReadWriteOnce"
                            ],
                            "resources": {
                              "requests": {
                                "storage": "10Gi"
                              }
                            },
                            "storageClassName": "sc-hot"
                          }
                        }
                      ]
                    },
                    {
                      "config": {
                        "node.attr.zone": "europe-west1-c",
                        "node.roles": "master",
                        "node.store.allow_mmap": false,
                        "xpack.security.authc.realms": {
                          "saml": {
                            "saml1": {
                              "attributes.principal": "nameid",
                              "idp.entity_id": "urn:framsouza.eu.auth0.com",
                              "idp.metadata.path": "https://framsouza.eu.auth0.com/samlp/metadata/nbNudmA4FTPI3kO6im0o5KPV3gugxxQI",
                              "order": 2,
                              "sp.acs": "https://kibana.framsouza.co/api/security/v1/saml",
                              "sp.entity_id": "https://framsouza.co",
                              "sp.logout": "https://kibana.framsouza.co/logout"
                            }
                          }
                        }
                      },
                      "count": 1,
                      "name": "master-zone-c",
                      "podTemplate": {
                        "spec": {
                          "affinity": {
                            "nodeAffinity": {
                              "requiredDuringSchedulingIgnoredDuringExecution": {
                                "nodeSelectorTerms": [
                                  {
                                    "matchExpressions": [
                                      {
                                        "key": "failure-domain.beta.kubernetes.io/zone",
                                        "operator": "In",
                                        "values": [
                                          "europe-west1-c"
                                        ]
                                      }
                                    ]
                                  }
                                ]
                              }
                            }
                          },
                          "containers": [
                            {
                              "env": [
                                {
                                  "name": "READINESS_PROBE_TIMEOUT",
                                  "value": "10"
                                }
                              ],
                              "name": "elasticsearch",
                              "readinessProbe": {
                                "exec": {
                                  "command": [
                                    "bash",
                                    "-c",
                                    "/mnt/elastic-internal/scripts/readiness-probe-script.sh"
                                  ]
                                },
                                "failureThreshold": 3,
                                "initialDelaySeconds": 10,
                                "periodSeconds": 12,
                                "successThreshold": 1,
                                "timeoutSeconds": 12
                              },
                              "resources": {
                                "limits": {
                                  "memory": "2Gi"
                                },
                                "requests": {
                                  "cpu": 1,
                                  "memory": "2Gi"
                                }
                              }
                            }
                          ],
                          "nodeSelector": {
                            "type": "hot"
                          }
                        }
                      },
                      "volumeClaimTemplates": [
                        {
                          "metadata": {
                            "name": "elasticsearch-data"
                          },
                          "spec": {
                            "accessModes": [
                              "ReadWriteOnce"
                            ],
                            "resources": {
                              "requests": {
                                "storage": "10Gi"
                              }
                            },
                            "storageClassName": "sc-hot"
                          }
                        }
                      ]
                    },
                    {
                      "config": {
                        "node.attr.zone": "europe-west1-d",
                        "node.roles": "master",
                        "node.store.allow_mmap": false,
                        "xpack.security.authc.realms": {
                          "saml": {
                            "saml1": {
                              "attributes.principal": "nameid",
                              "idp.entity_id": "urn:framsouza.eu.auth0.com",
                              "idp.metadata.path": "https://framsouza.eu.auth0.com/samlp/metadata/nbNudmA4FTPI3kO6im0o5KPV3gugxxQI",
                              "order": 2,
                              "sp.acs": "https://kibana.framsouza.co/api/security/v1/saml",
                              "sp.entity_id": "https://framsouza.co",
                              "sp.logout": "https://kibana.framsouza.co/logout"
                            }
                          }
                        }
                      },
                      "count": 1,
                      "name": "master-zone-d",
                      "podTemplate": {
                        "spec": {
                          "affinity": {
                            "nodeAffinity": {
                              "requiredDuringSchedulingIgnoredDuringExecution": {
                                "nodeSelectorTerms": [
                                  {
                                    "matchExpressions": [
                                      {
                                        "key": "failure-domain.beta.kubernetes.io/zone",
                                        "operator": "In",
                                        "values": [
                                          "europe-west1-d"
                                        ]
                                      }
                                    ]
                                  }
                                ]
                              }
                            }
                          },
                          "containers": [
                            {
                              "env": [
                                {
                                  "name": "READINESS_PROBE_TIMEOUT",
                                  "value": "10"
                                }
                              ],
                              "name": "elasticsearch",
                              "readinessProbe": {
                                "exec": {
                                  "command": [
                                    "bash",
                                    "-c",
                                    "/mnt/elastic-internal/scripts/readiness-probe-script.sh"
                                  ]
                                },
                                "failureThreshold": 3,
                                "initialDelaySeconds": 10,
                                "periodSeconds": 12,
                                "successThreshold": 1,
                                "timeoutSeconds": 12
                              },
                              "resources": {
                                "limits": {
                                  "memory": "2Gi"
                                },
                                "requests": {
                                  "cpu": 1,
                                  "memory": "2Gi"
                                }
                              }
                            }
                          ],
                          "nodeSelector": {
                            "type": "hot"
                          }
                        }
                      },
                      "volumeClaimTemplates": [
                        {
                          "metadata": {
                            "name": "elasticsearch-data"
                          },
                          "spec": {
                            "accessModes": [
                              "ReadWriteOnce"
                            ],
                            "resources": {
                              "requests": {
                                "storage": "10Gi"
                              }
                            },
                            "storageClassName": "sc-hot"
                          }
                        }
                      ]
                    }
                  ],
                  "updateStrategy": {
                    "changeBudget": {
                      "maxSurge": 1,
                      "maxUnavailable": 1
                    }
                  },
                  "version": "8.0.0"
                }
              },
              "type": [
                "object",
                {
                  "apiVersion": "string",
                  "kind": "string",
                  "metadata": [
                    "object",
                    {
                      "annotations": [
                        "object",
                        {
                          "elasticsearch.alpha.elastic.co/autoscaling-spec": "string"
                        }
                      ],
                      "name": "string",
                      "namespace": "string"
                    }
                  ],
                  "spec": [
                    "object",
                    {
                      "monitoring": [
                        "object",
                        {
                          "logs": [
                            "object",
                            {
                              "elasticsearchRefs": [
                                "tuple",
                                [
                                  [
                                    "object",
                                    {
                                      "name": "string",
                                      "namespace": "string"
                                    }
                                  ]
                                ]
                              ]
                            }
                          ],
                          "metrics": [
                            "object",
                            {
                              "elasticsearchRefs": [
                                "tuple",
                                [
                                  [
                                    "object",
                                    {
                                      "name": "string",
                                      "namespace": "string"
                                    }
                                  ]
                                ]
                              ]
                            }
                          ]
                        }
                      ],
                      "nodeSets": [
                        "tuple",
                        [
                          [
                            "object",
                            {
                              "config": [
                                "object",
                                {
                                  "node.attr.zone": "string",
                                  "node.roles": [
                                    "tuple",
                                    [
                                      "string",
                                      "string",
                                      "string"
                                    ]
                                  ],
                                  "node.store.allow_mmap": "bool",
                                  "xpack.security.authc.realms": [
                                    "object",
                                    {
                                      "saml": [
                                        "object",
                                        {
                                          "saml1": [
                                            "object",
                                            {
                                              "attributes.principal": "string",
                                              "idp.entity_id": "string",
                                              "idp.metadata.path": "string",
                                              "order": "number",
                                              "sp.acs": "string",
                                              "sp.entity_id": "string",
                                              "sp.logout": "string"
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ],
                              "count": "number",
                              "name": "string",
                              "podTemplate": [
                                "object",
                                {
                                  "spec": [
                                    "object",
                                    {
                                      "affinity": [
                                        "object",
                                        {
                                          "nodeAffinity": [
                                            "object",
                                            {
                                              "requiredDuringSchedulingIgnoredDuringExecution": [
                                                "object",
                                                {
                                                  "nodeSelectorTerms": [
                                                    "tuple",
                                                    [
                                                      [
                                                        "object",
                                                        {
                                                          "matchExpressions": [
                                                            "tuple",
                                                            [
                                                              [
                                                                "object",
                                                                {
                                                                  "key": "string",
                                                                  "operator": "string",
                                                                  "values": [
                                                                    "tuple",
                                                                    [
                                                                      "string"
                                                                    ]
                                                                  ]
                                                                }
                                                              ]
                                                            ]
                                                          ]
                                                        }
                                                      ]
                                                    ]
                                                  ]
                                                }
                                              ]
                                            }
                                          ]
                                        }
                                      ],
                                      "containers": [
                                        "tuple",
                                        [
                                          [
                                            "object",
                                            {
                                              "env": [
                                                "tuple",
                                                [
                                                  [
                                                    "object",
                                                    {
                                                      "name": "string",
                                                      "value": "string"
                                                    }
                                                  ]
                                                ]
                                              ],
                                              "name": "string",
                                              "readinessProbe": [
                                                "object",
                                                {
                                                  "exec": [
                                                    "object",
                                                    {
                                                      "command": [
                                                        "tuple",
                                                        [
                                                          "string",
                                                          "string",
                                                          "string"
                                                        ]
                                                      ]
                                                    }
                                                  ],
                                                  "failureThreshold": "number",
                                                  "initialDelaySeconds": "number",
                                                  "periodSeconds": "number",
                                                  "successThreshold": "number",
                                                  "timeoutSeconds": "number"
                                                }
                                              ],
                                              "resources": [
                                                "object",
                                                {
                                                  "limits": [
                                                    "object",
                                                    {
                                                      "memory": "string"
                                                    }
                                                  ],
                                                  "requests": [
                                                    "object",
                                                    {
                                                      "memory": "string"
                                                    }
                                                  ]
                                                }
                                              ]
                                            }
                                          ]
                                        ]
                                      ],
                                      "nodeSelector": [
                                        "object",
                                        {
                                          "type": "string"
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ],
                              "volumeClaimTemplates": [
                                "tuple",
                                [
                                  [
                                    "object",
                                    {
                                      "metadata": [
                                        "object",
                                        {
                                          "name": "string"
                                        }
                                      ],
                                      "spec": [
                                        "object",
                                        {
                                          "accessModes": [
                                            "tuple",
                                            [
                                              "string"
                                            ]
                                          ],
                                          "resources": [
                                            "object",
                                            {
                                              "requests": [
                                                "object",
                                                {
                                                  "storage": "string"
                                                }
                                              ]
                                            }
                                          ],
                                          "storageClassName": "string"
                                        }
                                      ]
                                    }
                                  ]
                                ]
                              ]
                            }
                          ],
                          [
                            "object",
                            {
                              "config": [
                                "object",
                                {
                                  "node.attr.zone": "string",
                                  "node.roles": [
                                    "tuple",
                                    [
                                      "string",
                                      "string",
                                      "string"
                                    ]
                                  ],
                                  "node.store.allow_mmap": "bool",
                                  "xpack.security.authc.realms": [
                                    "object",
                                    {
                                      "saml": [
                                        "object",
                                        {
                                          "saml1": [
                                            "object",
                                            {
                                              "attributes.principal": "string",
                                              "idp.entity_id": "string",
                                              "idp.metadata.path": "string",
                                              "order": "number",
                                              "sp.acs": "string",
                                              "sp.entity_id": "string",
                                              "sp.logout": "string"
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ],
                              "count": "number",
                              "name": "string",
                              "podTemplate": [
                                "object",
                                {
                                  "spec": [
                                    "object",
                                    {
                                      "affinity": [
                                        "object",
                                        {
                                          "nodeAffinity": [
                                            "object",
                                            {
                                              "requiredDuringSchedulingIgnoredDuringExecution": [
                                                "object",
                                                {
                                                  "nodeSelectorTerms": [
                                                    "tuple",
                                                    [
                                                      [
                                                        "object",
                                                        {
                                                          "matchExpressions": [
                                                            "tuple",
                                                            [
                                                              [
                                                                "object",
                                                                {
                                                                  "key": "string",
                                                                  "operator": "string",
                                                                  "values": [
                                                                    "tuple",
                                                                    [
                                                                      "string"
                                                                    ]
                                                                  ]
                                                                }
                                                              ]
                                                            ]
                                                          ]
                                                        }
                                                      ]
                                                    ]
                                                  ]
                                                }
                                              ]
                                            }
                                          ]
                                        }
                                      ],
                                      "containers": [
                                        "tuple",
                                        [
                                          [
                                            "object",
                                            {
                                              "env": [
                                                "tuple",
                                                [
                                                  [
                                                    "object",
                                                    {
                                                      "name": "string",
                                                      "value": "string"
                                                    }
                                                  ]
                                                ]
                                              ],
                                              "name": "string",
                                              "readinessProbe": [
                                                "object",
                                                {
                                                  "exec": [
                                                    "object",
                                                    {
                                                      "command": [
                                                        "tuple",
                                                        [
                                                          "string",
                                                          "string",
                                                          "string"
                                                        ]
                                                      ]
                                                    }
                                                  ],
                                                  "failureThreshold": "number",
                                                  "initialDelaySeconds": "number",
                                                  "periodSeconds": "number",
                                                  "successThreshold": "number",
                                                  "timeoutSeconds": "number"
                                                }
                                              ],
                                              "resources": [
                                                "object",
                                                {
                                                  "limits": [
                                                    "object",
                                                    {
                                                      "memory": "string"
                                                    }
                                                  ],
                                                  "requests": [
                                                    "object",
                                                    {
                                                      "cpu": "number",
                                                      "memory": "string"
                                                    }
                                                  ]
                                                }
                                              ]
                                            }
                                          ]
                                        ]
                                      ],
                                      "nodeSelector": [
                                        "object",
                                        {
                                          "type": "string"
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ],
                              "volumeClaimTemplates": [
                                "tuple",
                                [
                                  [
                                    "object",
                                    {
                                      "metadata": [
                                        "object",
                                        {
                                          "name": "string"
                                        }
                                      ],
                                      "spec": [
                                        "object",
                                        {
                                          "accessModes": [
                                            "tuple",
                                            [
                                              "string"
                                            ]
                                          ],
                                          "resources": [
                                            "object",
                                            {
                                              "requests": [
                                                "object",
                                                {
                                                  "storage": "string"
                                                }
                                              ]
                                            }
                                          ],
                                          "storageClassName": "string"
                                        }
                                      ]
                                    }
                                  ]
                                ]
                              ]
                            }
                          ],
                          [
                            "object",
                            {
                              "config": [
                                "object",
                                {
                                  "node.attr.zone": "string",
                                  "node.roles": [
                                    "tuple",
                                    [
                                      "string",
                                      "string",
                                      "string"
                                    ]
                                  ],
                                  "node.store.allow_mmap": "bool",
                                  "xpack.security.authc.realms": [
                                    "object",
                                    {
                                      "saml": [
                                        "object",
                                        {
                                          "saml1": [
                                            "object",
                                            {
                                              "attributes.principal": "string",
                                              "idp.entity_id": "string",
                                              "idp.metadata.path": "string",
                                              "order": "number",
                                              "sp.acs": "string",
                                              "sp.entity_id": "string",
                                              "sp.logout": "string"
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ],
                              "count": "number",
                              "name": "string",
                              "podTemplate": [
                                "object",
                                {
                                  "spec": [
                                    "object",
                                    {
                                      "affinity": [
                                        "object",
                                        {
                                          "nodeAffinity": [
                                            "object",
                                            {
                                              "requiredDuringSchedulingIgnoredDuringExecution": [
                                                "object",
                                                {
                                                  "nodeSelectorTerms": [
                                                    "tuple",
                                                    [
                                                      [
                                                        "object",
                                                        {
                                                          "matchExpressions": [
                                                            "tuple",
                                                            [
                                                              [
                                                                "object",
                                                                {
                                                                  "key": "string",
                                                                  "operator": "string",
                                                                  "values": [
                                                                    "tuple",
                                                                    [
                                                                      "string"
                                                                    ]
                                                                  ]
                                                                }
                                                              ]
                                                            ]
                                                          ]
                                                        }
                                                      ]
                                                    ]
                                                  ]
                                                }
                                              ]
                                            }
                                          ]
                                        }
                                      ],
                                      "containers": [
                                        "tuple",
                                        [
                                          [
                                            "object",
                                            {
                                              "env": [
                                                "tuple",
                                                [
                                                  [
                                                    "object",
                                                    {
                                                      "name": "string",
                                                      "value": "string"
                                                    }
                                                  ]
                                                ]
                                              ],
                                              "name": "string",
                                              "readinessProbe": [
                                                "object",
                                                {
                                                  "exec": [
                                                    "object",
                                                    {
                                                      "command": [
                                                        "tuple",
                                                        [
                                                          "string",
                                                          "string",
                                                          "string"
                                                        ]
                                                      ]
                                                    }
                                                  ],
                                                  "failureThreshold": "number",
                                                  "initialDelaySeconds": "number",
                                                  "periodSeconds": "number",
                                                  "successThreshold": "number",
                                                  "timeoutSeconds": "number"
                                                }
                                              ],
                                              "resources": [
                                                "object",
                                                {
                                                  "limits": [
                                                    "object",
                                                    {
                                                      "memory": "string"
                                                    }
                                                  ],
                                                  "requests": [
                                                    "object",
                                                    {
                                                      "cpu": "number",
                                                      "memory": "string"
                                                    }
                                                  ]
                                                }
                                              ]
                                            }
                                          ]
                                        ]
                                      ],
                                      "nodeSelector": [
                                        "object",
                                        {
                                          "type": "string"
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ],
                              "volumeClaimTemplates": [
                                "tuple",
                                [
                                  [
                                    "object",
                                    {
                                      "metadata": [
                                        "object",
                                        {
                                          "name": "string"
                                        }
                                      ],
                                      "spec": [
                                        "object",
                                        {
                                          "accessModes": [
                                            "tuple",
                                            [
                                              "string"
                                            ]
                                          ],
                                          "resources": [
                                            "object",
                                            {
                                              "requests": [
                                                "object",
                                                {
                                                  "storage": "string"
                                                }
                                              ]
                                            }
                                          ],
                                          "storageClassName": "string"
                                        }
                                      ]
                                    }
                                  ]
                                ]
                              ]
                            }
                          ],
                          [
                            "object",
                            {
                              "config": [
                                "object",
                                {
                                  "node.attr.zone": "string",
                                  "node.roles": "string",
                                  "node.store.allow_mmap": "bool",
                                  "xpack.security.authc.realms": [
                                    "object",
                                    {
                                      "saml": [
                                        "object",
                                        {
                                          "saml1": [
                                            "object",
                                            {
                                              "attributes.principal": "string",
                                              "idp.entity_id": "string",
                                              "idp.metadata.path": "string",
                                              "order": "number",
                                              "sp.acs": "string",
                                              "sp.entity_id": "string",
                                              "sp.logout": "string"
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ],
                              "count": "number",
                              "name": "string",
                              "podTemplate": [
                                "object",
                                {
                                  "spec": [
                                    "object",
                                    {
                                      "affinity": [
                                        "object",
                                        {
                                          "nodeAffinity": [
                                            "object",
                                            {
                                              "requiredDuringSchedulingIgnoredDuringExecution": [
                                                "object",
                                                {
                                                  "nodeSelectorTerms": [
                                                    "tuple",
                                                    [
                                                      [
                                                        "object",
                                                        {
                                                          "matchExpressions": [
                                                            "tuple",
                                                            [
                                                              [
                                                                "object",
                                                                {
                                                                  "key": "string",
                                                                  "operator": "string",
                                                                  "values": [
                                                                    "tuple",
                                                                    [
                                                                      "string"
                                                                    ]
                                                                  ]
                                                                }
                                                              ]
                                                            ]
                                                          ]
                                                        }
                                                      ]
                                                    ]
                                                  ]
                                                }
                                              ]
                                            }
                                          ]
                                        }
                                      ],
                                      "containers": [
                                        "tuple",
                                        [
                                          [
                                            "object",
                                            {
                                              "env": [
                                                "tuple",
                                                [
                                                  [
                                                    "object",
                                                    {
                                                      "name": "string",
                                                      "value": "string"
                                                    }
                                                  ]
                                                ]
                                              ],
                                              "name": "string",
                                              "readinessProbe": [
                                                "object",
                                                {
                                                  "exec": [
                                                    "object",
                                                    {
                                                      "command": [
                                                        "tuple",
                                                        [
                                                          "string",
                                                          "string",
                                                          "string"
                                                        ]
                                                      ]
                                                    }
                                                  ],
                                                  "failureThreshold": "number",
                                                  "initialDelaySeconds": "number",
                                                  "periodSeconds": "number",
                                                  "successThreshold": "number",
                                                  "timeoutSeconds": "number"
                                                }
                                              ],
                                              "resources": [
                                                "object",
                                                {
                                                  "limits": [
                                                    "object",
                                                    {
                                                      "memory": "string"
                                                    }
                                                  ],
                                                  "requests": [
                                                    "object",
                                                    {
                                                      "cpu": "number",
                                                      "memory": "string"
                                                    }
                                                  ]
                                                }
                                              ]
                                            }
                                          ]
                                        ]
                                      ],
                                      "nodeSelector": [
                                        "object",
                                        {
                                          "type": "string"
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ],
                              "volumeClaimTemplates": [
                                "tuple",
                                [
                                  [
                                    "object",
                                    {
                                      "metadata": [
                                        "object",
                                        {
                                          "name": "string"
                                        }
                                      ],
                                      "spec": [
                                        "object",
                                        {
                                          "accessModes": [
                                            "tuple",
                                            [
                                              "string"
                                            ]
                                          ],
                                          "resources": [
                                            "object",
                                            {
                                              "requests": [
                                                "object",
                                                {
                                                  "storage": "string"
                                                }
                                              ]
                                            }
                                          ],
                                          "storageClassName": "string"
                                        }
                                      ]
                                    }
                                  ]
                                ]
                              ]
                            }
                          ],
                          [
                            "object",
                            {
                              "config": [
                                "object",
                                {
                                  "node.attr.zone": "string",
                                  "node.roles": "string",
                                  "node.store.allow_mmap": "bool",
                                  "xpack.security.authc.realms": [
                                    "object",
                                    {
                                      "saml": [
                                        "object",
                                        {
                                          "saml1": [
                                            "object",
                                            {
                                              "attributes.principal": "string",
                                              "idp.entity_id": "string",
                                              "idp.metadata.path": "string",
                                              "order": "number",
                                              "sp.acs": "string",
                                              "sp.entity_id": "string",
                                              "sp.logout": "string"
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ],
                              "count": "number",
                              "name": "string",
                              "podTemplate": [
                                "object",
                                {
                                  "spec": [
                                    "object",
                                    {
                                      "affinity": [
                                        "object",
                                        {
                                          "nodeAffinity": [
                                            "object",
                                            {
                                              "requiredDuringSchedulingIgnoredDuringExecution": [
                                                "object",
                                                {
                                                  "nodeSelectorTerms": [
                                                    "tuple",
                                                    [
                                                      [
                                                        "object",
                                                        {
                                                          "matchExpressions": [
                                                            "tuple",
                                                            [
                                                              [
                                                                "object",
                                                                {
                                                                  "key": "string",
                                                                  "operator": "string",
                                                                  "values": [
                                                                    "tuple",
                                                                    [
                                                                      "string"
                                                                    ]
                                                                  ]
                                                                }
                                                              ]
                                                            ]
                                                          ]
                                                        }
                                                      ]
                                                    ]
                                                  ]
                                                }
                                              ]
                                            }
                                          ]
                                        }
                                      ],
                                      "containers": [
                                        "tuple",
                                        [
                                          [
                                            "object",
                                            {
                                              "env": [
                                                "tuple",
                                                [
                                                  [
                                                    "object",
                                                    {
                                                      "name": "string",
                                                      "value": "string"
                                                    }
                                                  ]
                                                ]
                                              ],
                                              "name": "string",
                                              "readinessProbe": [
                                                "object",
                                                {
                                                  "exec": [
                                                    "object",
                                                    {
                                                      "command": [
                                                        "tuple",
                                                        [
                                                          "string",
                                                          "string",
                                                          "string"
                                                        ]
                                                      ]
                                                    }
                                                  ],
                                                  "failureThreshold": "number",
                                                  "initialDelaySeconds": "number",
                                                  "periodSeconds": "number",
                                                  "successThreshold": "number",
                                                  "timeoutSeconds": "number"
                                                }
                                              ],
                                              "resources": [
                                                "object",
                                                {
                                                  "limits": [
                                                    "object",
                                                    {
                                                      "memory": "string"
                                                    }
                                                  ],
                                                  "requests": [
                                                    "object",
                                                    {
                                                      "cpu": "number",
                                                      "memory": "string"
                                                    }
                                                  ]
                                                }
                                              ]
                                            }
                                          ]
                                        ]
                                      ],
                                      "nodeSelector": [
                                        "object",
                                        {
                                          "type": "string"
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ],
                              "volumeClaimTemplates": [
                                "tuple",
                                [
                                  [
                                    "object",
                                    {
                                      "metadata": [
                                        "object",
                                        {
                                          "name": "string"
                                        }
                                      ],
                                      "spec": [
                                        "object",
                                        {
                                          "accessModes": [
                                            "tuple",
                                            [
                                              "string"
                                            ]
                                          ],
                                          "resources": [
                                            "object",
                                            {
                                              "requests": [
                                                "object",
                                                {
                                                  "storage": "string"
                                                }
                                              ]
                                            }
                                          ],
                                          "storageClassName": "string"
                                        }
                                      ]
                                    }
                                  ]
                                ]
                              ]
                            }
                          ],
                          [
                            "object",
                            {
                              "config": [
                                "object",
                                {
                                  "node.attr.zone": "string",
                                  "node.roles": "string",
                                  "node.store.allow_mmap": "bool",
                                  "xpack.security.authc.realms": [
                                    "object",
                                    {
                                      "saml": [
                                        "object",
                                        {
                                          "saml1": [
                                            "object",
                                            {
                                              "attributes.principal": "string",
                                              "idp.entity_id": "string",
                                              "idp.metadata.path": "string",
                                              "order": "number",
                                              "sp.acs": "string",
                                              "sp.entity_id": "string",
                                              "sp.logout": "string"
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ],
                              "count": "number",
                              "name": "string",
                              "podTemplate": [
                                "object",
                                {
                                  "spec": [
                                    "object",
                                    {
                                      "affinity": [
                                        "object",
                                        {
                                          "nodeAffinity": [
                                            "object",
                                            {
                                              "requiredDuringSchedulingIgnoredDuringExecution": [
                                                "object",
                                                {
                                                  "nodeSelectorTerms": [
                                                    "tuple",
                                                    [
                                                      [
                                                        "object",
                                                        {
                                                          "matchExpressions": [
                                                            "tuple",
                                                            [
                                                              [
                                                                "object",
                                                                {
                                                                  "key": "string",
                                                                  "operator": "string",
                                                                  "values": [
                                                                    "tuple",
                                                                    [
                                                                      "string"
                                                                    ]
                                                                  ]
                                                                }
                                                              ]
                                                            ]
                                                          ]
                                                        }
                                                      ]
                                                    ]
                                                  ]
                                                }
                                              ]
                                            }
                                          ]
                                        }
                                      ],
                                      "containers": [
                                        "tuple",
                                        [
                                          [
                                            "object",
                                            {
                                              "env": [
                                                "tuple",
                                                [
                                                  [
                                                    "object",
                                                    {
                                                      "name": "string",
                                                      "value": "string"
                                                    }
                                                  ]
                                                ]
                                              ],
                                              "name": "string",
                                              "readinessProbe": [
                                                "object",
                                                {
                                                  "exec": [
                                                    "object",
                                                    {
                                                      "command": [
                                                        "tuple",
                                                        [
                                                          "string",
                                                          "string",
                                                          "string"
                                                        ]
                                                      ]
                                                    }
                                                  ],
                                                  "failureThreshold": "number",
                                                  "initialDelaySeconds": "number",
                                                  "periodSeconds": "number",
                                                  "successThreshold": "number",
                                                  "timeoutSeconds": "number"
                                                }
                                              ],
                                              "resources": [
                                                "object",
                                                {
                                                  "limits": [
                                                    "object",
                                                    {
                                                      "memory": "string"
                                                    }
                                                  ],
                                                  "requests": [
                                                    "object",
                                                    {
                                                      "cpu": "number",
                                                      "memory": "string"
                                                    }
                                                  ]
                                                }
                                              ]
                                            }
                                          ]
                                        ]
                                      ],
                                      "nodeSelector": [
                                        "object",
                                        {
                                          "type": "string"
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ],
                              "volumeClaimTemplates": [
                                "tuple",
                                [
                                  [
                                    "object",
                                    {
                                      "metadata": [
                                        "object",
                                        {
                                          "name": "string"
                                        }
                                      ],
                                      "spec": [
                                        "object",
                                        {
                                          "accessModes": [
                                            "tuple",
                                            [
                                              "string"
                                            ]
                                          ],
                                          "resources": [
                                            "object",
                                            {
                                              "requests": [
                                                "object",
                                                {
                                                  "storage": "string"
                                                }
                                              ]
                                            }
                                          ],
                                          "storageClassName": "string"
                                        }
                                      ]
                                    }
                                  ]
                                ]
                              ]
                            }
                          ],
                          [
                            "object",
                            {
                              "config": [
                                "object",
                                {
                                  "node.attr.zone": "string",
                                  "node.roles": "string",
                                  "node.store.allow_mmap": "bool",
                                  "xpack.security.authc.realms": [
                                    "object",
                                    {
                                      "saml": [
                                        "object",
                                        {
                                          "saml1": [
                                            "object",
                                            {
                                              "attributes.principal": "string",
                                              "idp.entity_id": "string",
                                              "idp.metadata.path": "string",
                                              "order": "number",
                                              "sp.acs": "string",
                                              "sp.entity_id": "string",
                                              "sp.logout": "string"
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ],
                              "count": "number",
                              "name": "string",
                              "podTemplate": [
                                "object",
                                {
                                  "spec": [
                                    "object",
                                    {
                                      "affinity": [
                                        "object",
                                        {
                                          "nodeAffinity": [
                                            "object",
                                            {
                                              "requiredDuringSchedulingIgnoredDuringExecution": [
                                                "object",
                                                {
                                                  "nodeSelectorTerms": [
                                                    "tuple",
                                                    [
                                                      [
                                                        "object",
                                                        {
                                                          "matchExpressions": [
                                                            "tuple",
                                                            [
                                                              [
                                                                "object",
                                                                {
                                                                  "key": "string",
                                                                  "operator": "string",
                                                                  "values": [
                                                                    "tuple",
                                                                    [
                                                                      "string"
                                                                    ]
                                                                  ]
                                                                }
                                                              ]
                                                            ]
                                                          ]
                                                        }
                                                      ]
                                                    ]
                                                  ]
                                                }
                                              ]
                                            }
                                          ]
                                        }
                                      ],
                                      "containers": [
                                        "tuple",
                                        [
                                          [
                                            "object",
                                            {
                                              "env": [
                                                "tuple",
                                                [
                                                  [
                                                    "object",
                                                    {
                                                      "name": "string",
                                                      "value": "string"
                                                    }
                                                  ]
                                                ]
                                              ],
                                              "name": "string",
                                              "readinessProbe": [
                                                "object",
                                                {
                                                  "exec": [
                                                    "object",
                                                    {
                                                      "command": [
                                                        "tuple",
                                                        [
                                                          "string",
                                                          "string",
                                                          "string"
                                                        ]
                                                      ]
                                                    }
                                                  ],
                                                  "failureThreshold": "number",
                                                  "initialDelaySeconds": "number",
                                                  "periodSeconds": "number",
                                                  "successThreshold": "number",
                                                  "timeoutSeconds": "number"
                                                }
                                              ],
                                              "resources": [
                                                "object",
                                                {
                                                  "limits": [
                                                    "object",
                                                    {
                                                      "memory": "string"
                                                    }
                                                  ],
                                                  "requests": [
                                                    "object",
                                                    {
                                                      "memory": "string"
                                                    }
                                                  ]
                                                }
                                              ]
                                            }
                                          ]
                                        ]
                                      ],
                                      "nodeSelector": [
                                        "object",
                                        {
                                          "type": "string"
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ],
                              "volumeClaimTemplates": [
                                "tuple",
                                [
                                  [
                                    "object",
                                    {
                                      "metadata": [
                                        "object",
                                        {
                                          "name": "string"
                                        }
                                      ],
                                      "spec": [
                                        "object",
                                        {
                                          "accessModes": [
                                            "tuple",
                                            [
                                              "string"
                                            ]
                                          ],
                                          "resources": [
                                            "object",
                                            {
                                              "requests": [
                                                "object",
                                                {
                                                  "storage": "string"
                                                }
                                              ]
                                            }
                                          ],
                                          "storageClassName": "string"
                                        }
                                      ]
                                    }
                                  ]
                                ]
                              ]
                            }
                          ],
                          [
                            "object",
                            {
                              "config": [
                                "object",
                                {
                                  "node.attr.zone": "string",
                                  "node.roles": "string",
                                  "node.store.allow_mmap": "bool",
                                  "xpack.security.authc.realms": [
                                    "object",
                                    {
                                      "saml": [
                                        "object",
                                        {
                                          "saml1": [
                                            "object",
                                            {
                                              "attributes.principal": "string",
                                              "idp.entity_id": "string",
                                              "idp.metadata.path": "string",
                                              "order": "number",
                                              "sp.acs": "string",
                                              "sp.entity_id": "string",
                                              "sp.logout": "string"
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ],
                              "count": "number",
                              "name": "string",
                              "podTemplate": [
                                "object",
                                {
                                  "spec": [
                                    "object",
                                    {
                                      "affinity": [
                                        "object",
                                        {
                                          "nodeAffinity": [
                                            "object",
                                            {
                                              "requiredDuringSchedulingIgnoredDuringExecution": [
                                                "object",
                                                {
                                                  "nodeSelectorTerms": [
                                                    "tuple",
                                                    [
                                                      [
                                                        "object",
                                                        {
                                                          "matchExpressions": [
                                                            "tuple",
                                                            [
                                                              [
                                                                "object",
                                                                {
                                                                  "key": "string",
                                                                  "operator": "string",
                                                                  "values": [
                                                                    "tuple",
                                                                    [
                                                                      "string"
                                                                    ]
                                                                  ]
                                                                }
                                                              ]
                                                            ]
                                                          ]
                                                        }
                                                      ]
                                                    ]
                                                  ]
                                                }
                                              ]
                                            }
                                          ]
                                        }
                                      ],
                                      "containers": [
                                        "tuple",
                                        [
                                          [
                                            "object",
                                            {
                                              "env": [
                                                "tuple",
                                                [
                                                  [
                                                    "object",
                                                    {
                                                      "name": "string",
                                                      "value": "string"
                                                    }
                                                  ]
                                                ]
                                              ],
                                              "name": "string",
                                              "readinessProbe": [
                                                "object",
                                                {
                                                  "exec": [
                                                    "object",
                                                    {
                                                      "command": [
                                                        "tuple",
                                                        [
                                                          "string",
                                                          "string",
                                                          "string"
                                                        ]
                                                      ]
                                                    }
                                                  ],
                                                  "failureThreshold": "number",
                                                  "initialDelaySeconds": "number",
                                                  "periodSeconds": "number",
                                                  "successThreshold": "number",
                                                  "timeoutSeconds": "number"
                                                }
                                              ],
                                              "resources": [
                                                "object",
                                                {
                                                  "limits": [
                                                    "object",
                                                    {
                                                      "memory": "string"
                                                    }
                                                  ],
                                                  "requests": [
                                                    "object",
                                                    {
                                                      "memory": "string"
                                                    }
                                                  ]
                                                }
                                              ]
                                            }
                                          ]
                                        ]
                                      ],
                                      "nodeSelector": [
                                        "object",
                                        {
                                          "type": "string"
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ],
                              "volumeClaimTemplates": [
                                "tuple",
                                [
                                  [
                                    "object",
                                    {
                                      "metadata": [
                                        "object",
                                        {
                                          "name": "string"
                                        }
                                      ],
                                      "spec": [
                                        "object",
                                        {
                                          "accessModes": [
                                            "tuple",
                                            [
                                              "string"
                                            ]
                                          ],
                                          "resources": [
                                            "object",
                                            {
                                              "requests": [
                                                "object",
                                                {
                                                  "storage": "string"
                                                }
                                              ]
                                            }
                                          ],
                                          "storageClassName": "string"
                                        }
                                      ]
                                    }
                                  ]
                                ]
                              ]
                            }
                          ],
                          [
                            "object",
                            {
                              "config": [
                                "object",
                                {
                                  "node.attr.zone": "string",
                                  "node.roles": "string",
                                  "node.store.allow_mmap": "bool",
                                  "xpack.security.authc.realms": [
                                    "object",
                                    {
                                      "saml": [
                                        "object",
                                        {
                                          "saml1": [
                                            "object",
                                            {
                                              "attributes.principal": "string",
                                              "idp.entity_id": "string",
                                              "idp.metadata.path": "string",
                                              "order": "number",
                                              "sp.acs": "string",
                                              "sp.entity_id": "string",
                                              "sp.logout": "string"
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ],
                              "count": "number",
                              "name": "string",
                              "podTemplate": [
                                "object",
                                {
                                  "spec": [
                                    "object",
                                    {
                                      "affinity": [
                                        "object",
                                        {
                                          "nodeAffinity": [
                                            "object",
                                            {
                                              "requiredDuringSchedulingIgnoredDuringExecution": [
                                                "object",
                                                {
                                                  "nodeSelectorTerms": [
                                                    "tuple",
                                                    [
                                                      [
                                                        "object",
                                                        {
                                                          "matchExpressions": [
                                                            "tuple",
                                                            [
                                                              [
                                                                "object",
                                                                {
                                                                  "key": "string",
                                                                  "operator": "string",
                                                                  "values": [
                                                                    "tuple",
                                                                    [
                                                                      "string"
                                                                    ]
                                                                  ]
                                                                }
                                                              ]
                                                            ]
                                                          ]
                                                        }
                                                      ]
                                                    ]
                                                  ]
                                                }
                                              ]
                                            }
                                          ]
                                        }
                                      ],
                                      "containers": [
                                        "tuple",
                                        [
                                          [
                                            "object",
                                            {
                                              "env": [
                                                "tuple",
                                                [
                                                  [
                                                    "object",
                                                    {
                                                      "name": "string",
                                                      "value": "string"
                                                    }
                                                  ]
                                                ]
                                              ],
                                              "name": "string",
                                              "readinessProbe": [
                                                "object",
                                                {
                                                  "exec": [
                                                    "object",
                                                    {
                                                      "command": [
                                                        "tuple",
                                                        [
                                                          "string",
                                                          "string",
                                                          "string"
                                                        ]
                                                      ]
                                                    }
                                                  ],
                                                  "failureThreshold": "number",
                                                  "initialDelaySeconds": "number",
                                                  "periodSeconds": "number",
                                                  "successThreshold": "number",
                                                  "timeoutSeconds": "number"
                                                }
                                              ],
                                              "resources": [
                                                "object",
                                                {
                                                  "limits": [
                                                    "object",
                                                    {
                                                      "memory": "string"
                                                    }
                                                  ],
                                                  "requests": [
                                                    "object",
                                                    {
                                                      "memory": "string"
                                                    }
                                                  ]
                                                }
                                              ]
                                            }
                                          ]
                                        ]
                                      ],
                                      "nodeSelector": [
                                        "object",
                                        {
                                          "type": "string"
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ],
                              "volumeClaimTemplates": [
                                "tuple",
                                [
                                  [
                                    "object",
                                    {
                                      "metadata": [
                                        "object",
                                        {
                                          "name": "string"
                                        }
                                      ],
                                      "spec": [
                                        "object",
                                        {
                                          "accessModes": [
                                            "tuple",
                                            [
                                              "string"
                                            ]
                                          ],
                                          "resources": [
                                            "object",
                                            {
                                              "requests": [
                                                "object",
                                                {
                                                  "storage": "string"
                                                }
                                              ]
                                            }
                                          ],
                                          "storageClassName": "string"
                                        }
                                      ]
                                    }
                                  ]
                                ]
                              ]
                            }
                          ],
                          [
                            "object",
                            {
                              "config": [
                                "object",
                                {
                                  "node.attr.zone": "string",
                                  "node.roles": "string",
                                  "node.store.allow_mmap": "bool",
                                  "xpack.security.authc.realms": [
                                    "object",
                                    {
                                      "saml": [
                                        "object",
                                        {
                                          "saml1": [
                                            "object",
                                            {
                                              "attributes.principal": "string",
                                              "idp.entity_id": "string",
                                              "idp.metadata.path": "string",
                                              "order": "number",
                                              "sp.acs": "string",
                                              "sp.entity_id": "string",
                                              "sp.logout": "string"
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ],
                              "count": "number",
                              "name": "string",
                              "podTemplate": [
                                "object",
                                {
                                  "spec": [
                                    "object",
                                    {
                                      "affinity": [
                                        "object",
                                        {
                                          "nodeAffinity": [
                                            "object",
                                            {
                                              "requiredDuringSchedulingIgnoredDuringExecution": [
                                                "object",
                                                {
                                                  "nodeSelectorTerms": [
                                                    "tuple",
                                                    [
                                                      [
                                                        "object",
                                                        {
                                                          "matchExpressions": [
                                                            "tuple",
                                                            [
                                                              [
                                                                "object",
                                                                {
                                                                  "key": "string",
                                                                  "operator": "string",
                                                                  "values": [
                                                                    "tuple",
                                                                    [
                                                                      "string"
                                                                    ]
                                                                  ]
                                                                }
                                                              ]
                                                            ]
                                                          ]
                                                        }
                                                      ]
                                                    ]
                                                  ]
                                                }
                                              ]
                                            }
                                          ]
                                        }
                                      ],
                                      "containers": [
                                        "tuple",
                                        [
                                          [
                                            "object",
                                            {
                                              "env": [
                                                "tuple",
                                                [
                                                  [
                                                    "object",
                                                    {
                                                      "name": "string",
                                                      "value": "string"
                                                    }
                                                  ]
                                                ]
                                              ],
                                              "name": "string",
                                              "readinessProbe": [
                                                "object",
                                                {
                                                  "exec": [
                                                    "object",
                                                    {
                                                      "command": [
                                                        "tuple",
                                                        [
                                                          "string",
                                                          "string",
                                                          "string"
                                                        ]
                                                      ]
                                                    }
                                                  ],
                                                  "failureThreshold": "number",
                                                  "initialDelaySeconds": "number",
                                                  "periodSeconds": "number",
                                                  "successThreshold": "number",
                                                  "timeoutSeconds": "number"
                                                }
                                              ],
                                              "resources": [
                                                "object",
                                                {
                                                  "limits": [
                                                    "object",
                                                    {
                                                      "memory": "string"
                                                    }
                                                  ],
                                                  "requests": [
                                                    "object",
                                                    {
                                                      "cpu": "number",
                                                      "memory": "string"
                                                    }
                                                  ]
                                                }
                                              ]
                                            }
                                          ]
                                        ]
                                      ],
                                      "nodeSelector": [
                                        "object",
                                        {
                                          "type": "string"
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ],
                              "volumeClaimTemplates": [
                                "tuple",
                                [
                                  [
                                    "object",
                                    {
                                      "metadata": [
                                        "object",
                                        {
                                          "name": "string"
                                        }
                                      ],
                                      "spec": [
                                        "object",
                                        {
                                          "accessModes": [
                                            "tuple",
                                            [
                                              "string"
                                            ]
                                          ],
                                          "resources": [
                                            "object",
                                            {
                                              "requests": [
                                                "object",
                                                {
                                                  "storage": "string"
                                                }
                                              ]
                                            }
                                          ],
                                          "storageClassName": "string"
                                        }
                                      ]
                                    }
                                  ]
                                ]
                              ]
                            }
                          ],
                          [
                            "object",
                            {
                              "config": [
                                "object",
                                {
                                  "node.attr.zone": "string",
                                  "node.roles": "string",
                                  "node.store.allow_mmap": "bool",
                                  "xpack.security.authc.realms": [
                                    "object",
                                    {
                                      "saml": [
                                        "object",
                                        {
                                          "saml1": [
                                            "object",
                                            {
                                              "attributes.principal": "string",
                                              "idp.entity_id": "string",
                                              "idp.metadata.path": "string",
                                              "order": "number",
                                              "sp.acs": "string",
                                              "sp.entity_id": "string",
                                              "sp.logout": "string"
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ],
                              "count": "number",
                              "name": "string",
                              "podTemplate": [
                                "object",
                                {
                                  "spec": [
                                    "object",
                                    {
                                      "affinity": [
                                        "object",
                                        {
                                          "nodeAffinity": [
                                            "object",
                                            {
                                              "requiredDuringSchedulingIgnoredDuringExecution": [
                                                "object",
                                                {
                                                  "nodeSelectorTerms": [
                                                    "tuple",
                                                    [
                                                      [
                                                        "object",
                                                        {
                                                          "matchExpressions": [
                                                            "tuple",
                                                            [
                                                              [
                                                                "object",
                                                                {
                                                                  "key": "string",
                                                                  "operator": "string",
                                                                  "values": [
                                                                    "tuple",
                                                                    [
                                                                      "string"
                                                                    ]
                                                                  ]
                                                                }
                                                              ]
                                                            ]
                                                          ]
                                                        }
                                                      ]
                                                    ]
                                                  ]
                                                }
                                              ]
                                            }
                                          ]
                                        }
                                      ],
                                      "containers": [
                                        "tuple",
                                        [
                                          [
                                            "object",
                                            {
                                              "env": [
                                                "tuple",
                                                [
                                                  [
                                                    "object",
                                                    {
                                                      "name": "string",
                                                      "value": "string"
                                                    }
                                                  ]
                                                ]
                                              ],
                                              "name": "string",
                                              "readinessProbe": [
                                                "object",
                                                {
                                                  "exec": [
                                                    "object",
                                                    {
                                                      "command": [
                                                        "tuple",
                                                        [
                                                          "string",
                                                          "string",
                                                          "string"
                                                        ]
                                                      ]
                                                    }
                                                  ],
                                                  "failureThreshold": "number",
                                                  "initialDelaySeconds": "number",
                                                  "periodSeconds": "number",
                                                  "successThreshold": "number",
                                                  "timeoutSeconds": "number"
                                                }
                                              ],
                                              "resources": [
                                                "object",
                                                {
                                                  "limits": [
                                                    "object",
                                                    {
                                                      "memory": "string"
                                                    }
                                                  ],
                                                  "requests": [
                                                    "object",
                                                    {
                                                      "cpu": "number",
                                                      "memory": "string"
                                                    }
                                                  ]
                                                }
                                              ]
                                            }
                                          ]
                                        ]
                                      ],
                                      "nodeSelector": [
                                        "object",
                                        {
                                          "type": "string"
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ],
                              "volumeClaimTemplates": [
                                "tuple",
                                [
                                  [
                                    "object",
                                    {
                                      "metadata": [
                                        "object",
                                        {
                                          "name": "string"
                                        }
                                      ],
                                      "spec": [
                                        "object",
                                        {
                                          "accessModes": [
                                            "tuple",
                                            [
                                              "string"
                                            ]
                                          ],
                                          "resources": [
                                            "object",
                                            {
                                              "requests": [
                                                "object",
                                                {
                                                  "storage": "string"
                                                }
                                              ]
                                            }
                                          ],
                                          "storageClassName": "string"
                                        }
                                      ]
                                    }
                                  ]
                                ]
                              ]
                            }
                          ],
                          [
                            "object",
                            {
                              "config": [
                                "object",
                                {
                                  "node.attr.zone": "string",
                                  "node.roles": "string",
                                  "node.store.allow_mmap": "bool",
                                  "xpack.security.authc.realms": [
                                    "object",
                                    {
                                      "saml": [
                                        "object",
                                        {
                                          "saml1": [
                                            "object",
                                            {
                                              "attributes.principal": "string",
                                              "idp.entity_id": "string",
                                              "idp.metadata.path": "string",
                                              "order": "number",
                                              "sp.acs": "string",
                                              "sp.entity_id": "string",
                                              "sp.logout": "string"
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ],
                              "count": "number",
                              "name": "string",
                              "podTemplate": [
                                "object",
                                {
                                  "spec": [
                                    "object",
                                    {
                                      "affinity": [
                                        "object",
                                        {
                                          "nodeAffinity": [
                                            "object",
                                            {
                                              "requiredDuringSchedulingIgnoredDuringExecution": [
                                                "object",
                                                {
                                                  "nodeSelectorTerms": [
                                                    "tuple",
                                                    [
                                                      [
                                                        "object",
                                                        {
                                                          "matchExpressions": [
                                                            "tuple",
                                                            [
                                                              [
                                                                "object",
                                                                {
                                                                  "key": "string",
                                                                  "operator": "string",
                                                                  "values": [
                                                                    "tuple",
                                                                    [
                                                                      "string"
                                                                    ]
                                                                  ]
                                                                }
                                                              ]
                                                            ]
                                                          ]
                                                        }
                                                      ]
                                                    ]
                                                  ]
                                                }
                                              ]
                                            }
                                          ]
                                        }
                                      ],
                                      "containers": [
                                        "tuple",
                                        [
                                          [
                                            "object",
                                            {
                                              "env": [
                                                "tuple",
                                                [
                                                  [
                                                    "object",
                                                    {
                                                      "name": "string",
                                                      "value": "string"
                                                    }
                                                  ]
                                                ]
                                              ],
                                              "name": "string",
                                              "readinessProbe": [
                                                "object",
                                                {
                                                  "exec": [
                                                    "object",
                                                    {
                                                      "command": [
                                                        "tuple",
                                                        [
                                                          "string",
                                                          "string",
                                                          "string"
                                                        ]
                                                      ]
                                                    }
                                                  ],
                                                  "failureThreshold": "number",
                                                  "initialDelaySeconds": "number",
                                                  "periodSeconds": "number",
                                                  "successThreshold": "number",
                                                  "timeoutSeconds": "number"
                                                }
                                              ],
                                              "resources": [
                                                "object",
                                                {
                                                  "limits": [
                                                    "object",
                                                    {
                                                      "memory": "string"
                                                    }
                                                  ],
                                                  "requests": [
                                                    "object",
                                                    {
                                                      "cpu": "number",
                                                      "memory": "string"
                                                    }
                                                  ]
                                                }
                                              ]
                                            }
                                          ]
                                        ]
                                      ],
                                      "nodeSelector": [
                                        "object",
                                        {
                                          "type": "string"
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ],
                              "volumeClaimTemplates": [
                                "tuple",
                                [
                                  [
                                    "object",
                                    {
                                      "metadata": [
                                        "object",
                                        {
                                          "name": "string"
                                        }
                                      ],
                                      "spec": [
                                        "object",
                                        {
                                          "accessModes": [
                                            "tuple",
                                            [
                                              "string"
                                            ]
                                          ],
                                          "resources": [
                                            "object",
                                            {
                                              "requests": [
                                                "object",
                                                {
                                                  "storage": "string"
                                                }
                                              ]
                                            }
                                          ],
                                          "storageClassName": "string"
                                        }
                                      ]
                                    }
                                  ]
                                ]
                              ]
                            }
                          ]
                        ]
                      ],
                      "updateStrategy": [
                        "object",
                        {
                          "changeBudget": [
                            "object",
                            {
                              "maxSurge": "number",
                              "maxUnavailable": "number"
                            }
                          ]
                        }
                      ],
                      "version": "string"
                    }
                  ]
                }
              ]
            },
            "object": {
              "value": {
                "apiVersion": "elasticsearch.k8s.elastic.co/v1",
                "kind": "Elasticsearch",
                "metadata": {
                  "annotations": {
                    "elasticsearch.alpha.elastic.co/autoscaling-spec": "{\n    \"policies\": [{\n        \"name\": \"hot\",\n        \"roles\": [\"data_hot\", \"data_content\", \"ingest\"],\n        \"deciders\": {\n          \"proactive_storage\": {\n              \"forecast_window\": \"5m\"\n          }\n        },\n        \"resources\": {\n            \"nodeCount\": { \"min\": 3, \"max\": 6 },\n            \"cpu\": { \"min\": 1, \"max\": 8 },\n            \"memory\": { \"min\": \"2Gi\", \"max\": \"16Gi\" },\n            \"storage\": { \"min\": \"64Gi\", \"max\": \"512Gi\" }\n        }\n    },\n    {\n        \"name\": \"ml\",\n        \"roles\": [\"ml\"],\n        \"deciders\": {\n            \"ml\": {\n                \"down_scale_delay\": \"10m\"\n            }\n        },\n        \"resources\": {\n            \"nodeCount\": { \"min\": 1, \"max\": 9 },\n            \"cpu\": { \"min\": 1, \"max\": 4 },\n            \"memory\": { \"min\": \"2Gi\", \"max\": \"8Gi\" }\n        }\n    }]\n}\n        \n"
                  },
                  "clusterName": null,
                  "creationTimestamp": null,
                  "deletionGracePeriodSeconds": null,
                  "deletionTimestamp": null,
                  "finalizers": null,
                  "generateName": null,
                  "generation": null,
                  "labels": null,
                  "managedFields": null,
                  "name": "elasticsearch",
                  "namespace": "default",
                  "ownerReferences": null,
                  "resourceVersion": null,
                  "selfLink": null,
                  "uid": null
                },
                "spec": {
                  "auth": {
                    "fileRealm": null,
                    "roles": null
                  },
                  "http": {
                    "service": {
                      "metadata": {
                        "annotations": null,
                        "finalizers": null,
                        "labels": null,
                        "name": null,
                        "namespace": null
                      },
                      "spec": {
                        "allocateLoadBalancerNodePorts": null,
                        "clusterIP": null,
                        "clusterIPs": null,
                        "externalIPs": null,
                        "externalName": null,
                        "externalTrafficPolicy": null,
                        "healthCheckNodePort": null,
                        "internalTrafficPolicy": null,
                        "ipFamilies": null,
                        "ipFamilyPolicy": null,
                        "loadBalancerClass": null,
                        "loadBalancerIP": null,
                        "loadBalancerSourceRanges": null,
                        "ports": null,
                        "publishNotReadyAddresses": null,
                        "selector": null,
                        "sessionAffinity": null,
                        "sessionAffinityConfig": {
                          "clientIP": {
                            "timeoutSeconds": null
                          }
                        },
                        "type": null
                      }
                    },
                    "tls": {
                      "certificate": {
                        "secretName": null
                      },
                      "selfSignedCertificate": {
                        "disabled": null,
                        "subjectAltNames": null
                      }
                    }
                  },
                  "image": null,
                  "monitoring": {
                    "logs": {
                      "elasticsearchRefs": [
                        {
                          "name": "monitoring",
                          "namespace": "monitoring",
                          "serviceName": null
                        }
                      ]
                    },
                    "metrics": {
                      "elasticsearchRefs": [
                        {
                          "name": "monitoring",
                          "namespace": "monitoring",
                          "serviceName": null
                        }
                      ]
                    }
                  },
                  "nodeSets": [
                    {
                      "config": {
                        "node.attr.zone": "europe-west1-b",
                        "node.roles": [
                          "data_hot",
                          "data_content",
                          "ingest"
                        ],
                        "node.store.allow_mmap": false,
                        "xpack.security.authc.realms": {
                          "saml": {
                            "saml1": {
                              "attributes.principal": "nameid",
                              "idp.entity_id": "urn:framsouza.eu.auth0.com",
                              "idp.metadata.path": "https://framsouza.eu.auth0.com/samlp/metadata/nbNudmA4FTPI3kO6im0o5KPV3gugxxQI",
                              "order": 2,
                              "sp.acs": "https://kibana.framsouza.co/api/security/v1/saml",
                              "sp.entity_id": "https://framsouza.co",
                              "sp.logout": "https://kibana.framsouza.co/logout"
                            }
                          }
                        }
                      },
                      "count": 1,
                      "name": "hot-zone-b",
                      "podTemplate": {
                        "spec": {
                          "affinity": {
                            "nodeAffinity": {
                              "requiredDuringSchedulingIgnoredDuringExecution": {
                                "nodeSelectorTerms": [
                                  {
                                    "matchExpressions": [
                                      {
                                        "key": "failure-domain.beta.kubernetes.io/zone",
                                        "operator": "In",
                                        "values": [
                                          "europe-west1-b"
                                        ]
                                      }
                                    ]
                                  }
                                ]
                              }
                            }
                          },
                          "containers": [
                            {
                              "env": [
                                {
                                  "name": "READINESS_PROBE_TIMEOUT",
                                  "value": "10"
                                }
                              ],
                              "name": "elasticsearch",
                              "readinessProbe": {
                                "exec": {
                                  "command": [
                                    "bash",
                                    "-c",
                                    "/mnt/elastic-internal/scripts/readiness-probe-script.sh"
                                  ]
                                },
                                "failureThreshold": 3,
                                "initialDelaySeconds": 10,
                                "periodSeconds": 12,
                                "successThreshold": 1,
                                "timeoutSeconds": 12
                              },
                              "resources": {
                                "limits": {
                                  "memory": "4Gi"
                                },
                                "requests": {
                                  "memory": "4Gi"
                                }
                              }
                            }
                          ],
                          "nodeSelector": {
                            "type": "hot"
                          }
                        }
                      },
                      "volumeClaimTemplates": [
                        {
                          "apiVersion": null,
                          "kind": null,
                          "metadata": {
                            "annotations": null,
                            "finalizers": null,
                            "labels": null,
                            "name": "elasticsearch-data",
                            "namespace": null
                          },
                          "spec": {
                            "accessModes": [
                              "ReadWriteOnce"
                            ],
                            "dataSource": {
                              "apiGroup": null,
                              "kind": null,
                              "name": null
                            },
                            "dataSourceRef": {
                              "apiGroup": null,
                              "kind": null,
                              "name": null
                            },
                            "resources": {
                              "limits": null,
                              "requests": {
                                "storage": "100Gi"
                              }
                            },
                            "selector": {
                              "matchExpressions": null,
                              "matchLabels": null
                            },
                            "storageClassName": "sc-hot",
                            "volumeMode": null,
                            "volumeName": null
                          },
                          "status": {
                            "accessModes": null,
                            "allocatedResources": null,
                            "capacity": null,
                            "conditions": null,
                            "phase": null,
                            "resizeStatus": null
                          }
                        }
                      ]
                    },
                    {
                      "config": {
                        "node.attr.zone": "europe-west1-c",
                        "node.roles": [
                          "data_hot",
                          "data_content",
                          "ingest"
                        ],
                        "node.store.allow_mmap": false,
                        "xpack.security.authc.realms": {
                          "saml": {
                            "saml1": {
                              "attributes.principal": "nameid",
                              "idp.entity_id": "urn:framsouza.eu.auth0.com",
                              "idp.metadata.path": "https://framsouza.eu.auth0.com/samlp/metadata/nbNudmA4FTPI3kO6im0o5KPV3gugxxQI",
                              "order": 2,
                              "sp.acs": "https://kibana.framsouza.co/api/security/v1/saml",
                              "sp.entity_id": "https://framsouza.co",
                              "sp.logout": "https://kibana.framsouza.co/logout"
                            }
                          }
                        }
                      },
                      "count": 1,
                      "name": "hot-zone-c",
                      "podTemplate": {
                        "spec": {
                          "affinity": {
                            "nodeAffinity": {
                              "requiredDuringSchedulingIgnoredDuringExecution": {
                                "nodeSelectorTerms": [
                                  {
                                    "matchExpressions": [
                                      {
                                        "key": "failure-domain.beta.kubernetes.io/zone",
                                        "operator": "In",
                                        "values": [
                                          "europe-west1-c"
                                        ]
                                      }
                                    ]
                                  }
                                ]
                              }
                            }
                          },
                          "containers": [
                            {
                              "env": [
                                {
                                  "name": "READINESS_PROBE_TIMEOUT",
                                  "value": "10"
                                }
                              ],
                              "name": "elasticsearch",
                              "readinessProbe": {
                                "exec": {
                                  "command": [
                                    "bash",
                                    "-c",
                                    "/mnt/elastic-internal/scripts/readiness-probe-script.sh"
                                  ]
                                },
                                "failureThreshold": 3,
                                "initialDelaySeconds": 10,
                                "periodSeconds": 12,
                                "successThreshold": 1,
                                "timeoutSeconds": 12
                              },
                              "resources": {
                                "limits": {
                                  "memory": "4Gi"
                                },
                                "requests": {
                                  "cpu": 1,
                                  "memory": "4Gi"
                                }
                              }
                            }
                          ],
                          "nodeSelector": {
                            "type": "hot"
                          }
                        }
                      },
                      "volumeClaimTemplates": [
                        {
                          "apiVersion": null,
                          "kind": null,
                          "metadata": {
                            "annotations": null,
                            "finalizers": null,
                            "labels": null,
                            "name": "elasticsearch-data",
                            "namespace": null
                          },
                          "spec": {
                            "accessModes": [
                              "ReadWriteOnce"
                            ],
                            "dataSource": {
                              "apiGroup": null,
                              "kind": null,
                              "name": null
                            },
                            "dataSourceRef": {
                              "apiGroup": null,
                              "kind": null,
                              "name": null
                            },
                            "resources": {
                              "limits": null,
                              "requests": {
                                "storage": "50Gi"
                              }
                            },
                            "selector": {
                              "matchExpressions": null,
                              "matchLabels": null
                            },
                            "storageClassName": "sc-hot",
                            "volumeMode": null,
                            "volumeName": null
                          },
                          "status": {
                            "accessModes": null,
                            "allocatedResources": null,
                            "capacity": null,
                            "conditions": null,
                            "phase": null,
                            "resizeStatus": null
                          }
                        }
                      ]
                    },
                    {
                      "config": {
                        "node.attr.zone": "europe-west1-d",
                        "node.roles": [
                          "data_hot",
                          "data_content",
                          "ingest"
                        ],
                        "node.store.allow_mmap": false,
                        "xpack.security.authc.realms": {
                          "saml": {
                            "saml1": {
                              "attributes.principal": "nameid",
                              "idp.entity_id": "urn:framsouza.eu.auth0.com",
                              "idp.metadata.path": "https://framsouza.eu.auth0.com/samlp/metadata/nbNudmA4FTPI3kO6im0o5KPV3gugxxQI",
                              "order": 2,
                              "sp.acs": "https://kibana.framsouza.co/api/security/v1/saml",
                              "sp.entity_id": "https://framsouza.co",
                              "sp.logout": "https://kibana.framsouza.co/logout"
                            }
                          }
                        }
                      },
                      "count": 1,
                      "name": "hot-zone-d",
                      "podTemplate": {
                        "spec": {
                          "affinity": {
                            "nodeAffinity": {
                              "requiredDuringSchedulingIgnoredDuringExecution": {
                                "nodeSelectorTerms": [
                                  {
                                    "matchExpressions": [
                                      {
                                        "key": "failure-domain.beta.kubernetes.io/zone",
                                        "operator": "In",
                                        "values": [
                                          "europe-west1-d"
                                        ]
                                      }
                                    ]
                                  }
                                ]
                              }
                            }
                          },
                          "containers": [
                            {
                              "env": [
                                {
                                  "name": "READINESS_PROBE_TIMEOUT",
                                  "value": "10"
                                }
                              ],
                              "name": "elasticsearch",
                              "readinessProbe": {
                                "exec": {
                                  "command": [
                                    "bash",
                                    "-c",
                                    "/mnt/elastic-internal/scripts/readiness-probe-script.sh"
                                  ]
                                },
                                "failureThreshold": 3,
                                "initialDelaySeconds": 10,
                                "periodSeconds": 12,
                                "successThreshold": 1,
                                "timeoutSeconds": 12
                              },
                              "resources": {
                                "limits": {
                                  "memory": "4Gi"
                                },
                                "requests": {
                                  "cpu": 1,
                                  "memory": "4Gi"
                                }
                              }
                            }
                          ],
                          "nodeSelector": {
                            "type": "hot"
                          }
                        }
                      },
                      "volumeClaimTemplates": [
                        {
                          "apiVersion": null,
                          "kind": null,
                          "metadata": {
                            "annotations": null,
                            "finalizers": null,
                            "labels": null,
                            "name": "elasticsearch-data",
                            "namespace": null
                          },
                          "spec": {
                            "accessModes": [
                              "ReadWriteOnce"
                            ],
                            "dataSource": {
                              "apiGroup": null,
                              "kind": null,
                              "name": null
                            },
                            "dataSourceRef": {
                              "apiGroup": null,
                              "kind": null,
                              "name": null
                            },
                            "resources": {
                              "limits": null,
                              "requests": {
                                "storage": "50Gi"
                              }
                            },
                            "selector": {
                              "matchExpressions": null,
                              "matchLabels": null
                            },
                            "storageClassName": "sc-hot",
                            "volumeMode": null,
                            "volumeName": null
                          },
                          "status": {
                            "accessModes": null,
                            "allocatedResources": null,
                            "capacity": null,
                            "conditions": null,
                            "phase": null,
                            "resizeStatus": null
                          }
                        }
                      ]
                    },
                    {
                      "config": {
                        "node.attr.zone": "europe-west1-b",
                        "node.roles": "data_warm",
                        "node.store.allow_mmap": false,
                        "xpack.security.authc.realms": {
                          "saml": {
                            "saml1": {
                              "attributes.principal": "nameid",
                              "idp.entity_id": "urn:framsouza.eu.auth0.com",
                              "idp.metadata.path": "https://framsouza.eu.auth0.com/samlp/metadata/nbNudmA4FTPI3kO6im0o5KPV3gugxxQI",
                              "order": 2,
                              "sp.acs": "https://kibana.framsouza.co/api/security/v1/saml",
                              "sp.entity_id": "https://framsouza.co",
                              "sp.logout": "https://kibana.framsouza.co/logout"
                            }
                          }
                        }
                      },
                      "count": 1,
                      "name": "warm-zone-b",
                      "podTemplate": {
                        "spec": {
                          "affinity": {
                            "nodeAffinity": {
                              "requiredDuringSchedulingIgnoredDuringExecution": {
                                "nodeSelectorTerms": [
                                  {
                                    "matchExpressions": [
                                      {
                                        "key": "failure-domain.beta.kubernetes.io/zone",
                                        "operator": "In",
                                        "values": [
                                          "europe-west1-b"
                                        ]
                                      }
                                    ]
                                  }
                                ]
                              }
                            }
                          },
                          "containers": [
                            {
                              "env": [
                                {
                                  "name": "READINESS_PROBE_TIMEOUT",
                                  "value": "10"
                                }
                              ],
                              "name": "elasticsearch",
                              "readinessProbe": {
                                "exec": {
                                  "command": [
                                    "bash",
                                    "-c",
                                    "/mnt/elastic-internal/scripts/readiness-probe-script.sh"
                                  ]
                                },
                                "failureThreshold": 3,
                                "initialDelaySeconds": 10,
                                "periodSeconds": 12,
                                "successThreshold": 1,
                                "timeoutSeconds": 12
                              },
                              "resources": {
                                "limits": {
                                  "memory": "2Gi"
                                },
                                "requests": {
                                  "cpu": 1,
                                  "memory": "2Gi"
                                }
                              }
                            }
                          ],
                          "nodeSelector": {
                            "type": "warm"
                          }
                        }
                      },
                      "volumeClaimTemplates": [
                        {
                          "apiVersion": null,
                          "kind": null,
                          "metadata": {
                            "annotations": null,
                            "finalizers": null,
                            "labels": null,
                            "name": "elasticsearch-data",
                            "namespace": null
                          },
                          "spec": {
                            "accessModes": [
                              "ReadWriteOnce"
                            ],
                            "dataSource": {
                              "apiGroup": null,
                              "kind": null,
                              "name": null
                            },
                            "dataSourceRef": {
                              "apiGroup": null,
                              "kind": null,
                              "name": null
                            },
                            "resources": {
                              "limits": null,
                              "requests": {
                                "storage": "50Gi"
                              }
                            },
                            "selector": {
                              "matchExpressions": null,
                              "matchLabels": null
                            },
                            "storageClassName": "sc-warm-cold",
                            "volumeMode": null,
                            "volumeName": null
                          },
                          "status": {
                            "accessModes": null,
                            "allocatedResources": null,
                            "capacity": null,
                            "conditions": null,
                            "phase": null,
                            "resizeStatus": null
                          }
                        }
                      ]
                    },
                    {
                      "config": {
                        "node.attr.zone": "europe-west1-c",
                        "node.roles": "data_warm",
                        "node.store.allow_mmap": false,
                        "xpack.security.authc.realms": {
                          "saml": {
                            "saml1": {
                              "attributes.principal": "nameid",
                              "idp.entity_id": "urn:framsouza.eu.auth0.com",
                              "idp.metadata.path": "https://framsouza.eu.auth0.com/samlp/metadata/nbNudmA4FTPI3kO6im0o5KPV3gugxxQI",
                              "order": 2,
                              "sp.acs": "https://kibana.framsouza.co/api/security/v1/saml",
                              "sp.entity_id": "https://framsouza.co",
                              "sp.logout": "https://kibana.framsouza.co/logout"
                            }
                          }
                        }
                      },
                      "count": 1,
                      "name": "warm-zone-c",
                      "podTemplate": {
                        "spec": {
                          "affinity": {
                            "nodeAffinity": {
                              "requiredDuringSchedulingIgnoredDuringExecution": {
                                "nodeSelectorTerms": [
                                  {
                                    "matchExpressions": [
                                      {
                                        "key": "failure-domain.beta.kubernetes.io/zone",
                                        "operator": "In",
                                        "values": [
                                          "europe-west1-c"
                                        ]
                                      }
                                    ]
                                  }
                                ]
                              }
                            }
                          },
                          "containers": [
                            {
                              "env": [
                                {
                                  "name": "READINESS_PROBE_TIMEOUT",
                                  "value": "10"
                                }
                              ],
                              "name": "elasticsearch",
                              "readinessProbe": {
                                "exec": {
                                  "command": [
                                    "bash",
                                    "-c",
                                    "/mnt/elastic-internal/scripts/readiness-probe-script.sh"
                                  ]
                                },
                                "failureThreshold": 3,
                                "initialDelaySeconds": 10,
                                "periodSeconds": 12,
                                "successThreshold": 1,
                                "timeoutSeconds": 12
                              },
                              "resources": {
                                "limits": {
                                  "memory": "2Gi"
                                },
                                "requests": {
                                  "cpu": 1,
                                  "memory": "2Gi"
                                }
                              }
                            }
                          ],
                          "nodeSelector": {
                            "type": "warm"
                          }
                        }
                      },
                      "volumeClaimTemplates": [
                        {
                          "apiVersion": null,
                          "kind": null,
                          "metadata": {
                            "annotations": null,
                            "finalizers": null,
                            "labels": null,
                            "name": "elasticsearch-data",
                            "namespace": null
                          },
                          "spec": {
                            "accessModes": [
                              "ReadWriteOnce"
                            ],
                            "dataSource": {
                              "apiGroup": null,
                              "kind": null,
                              "name": null
                            },
                            "dataSourceRef": {
                              "apiGroup": null,
                              "kind": null,
                              "name": null
                            },
                            "resources": {
                              "limits": null,
                              "requests": {
                                "storage": "50Gi"
                              }
                            },
                            "selector": {
                              "matchExpressions": null,
                              "matchLabels": null
                            },
                            "storageClassName": "sc-warm-cold",
                            "volumeMode": null,
                            "volumeName": null
                          },
                          "status": {
                            "accessModes": null,
                            "allocatedResources": null,
                            "capacity": null,
                            "conditions": null,
                            "phase": null,
                            "resizeStatus": null
                          }
                        }
                      ]
                    },
                    {
                      "config": {
                        "node.attr.zone": "europe-west1-d",
                        "node.roles": "data_warm",
                        "node.store.allow_mmap": false,
                        "xpack.security.authc.realms": {
                          "saml": {
                            "saml1": {
                              "attributes.principal": "nameid",
                              "idp.entity_id": "urn:framsouza.eu.auth0.com",
                              "idp.metadata.path": "https://framsouza.eu.auth0.com/samlp/metadata/nbNudmA4FTPI3kO6im0o5KPV3gugxxQI",
                              "order": 2,
                              "sp.acs": "https://kibana.framsouza.co/api/security/v1/saml",
                              "sp.entity_id": "https://framsouza.co",
                              "sp.logout": "https://kibana.framsouza.co/logout"
                            }
                          }
                        }
                      },
                      "count": 1,
                      "name": "warm-zone-d",
                      "podTemplate": {
                        "spec": {
                          "affinity": {
                            "nodeAffinity": {
                              "requiredDuringSchedulingIgnoredDuringExecution": {
                                "nodeSelectorTerms": [
                                  {
                                    "matchExpressions": [
                                      {
                                        "key": "failure-domain.beta.kubernetes.io/zone",
                                        "operator": "In",
                                        "values": [
                                          "europe-west1-d"
                                        ]
                                      }
                                    ]
                                  }
                                ]
                              }
                            }
                          },
                          "containers": [
                            {
                              "env": [
                                {
                                  "name": "READINESS_PROBE_TIMEOUT",
                                  "value": "10"
                                }
                              ],
                              "name": "elasticsearch",
                              "readinessProbe": {
                                "exec": {
                                  "command": [
                                    "bash",
                                    "-c",
                                    "/mnt/elastic-internal/scripts/readiness-probe-script.sh"
                                  ]
                                },
                                "failureThreshold": 3,
                                "initialDelaySeconds": 10,
                                "periodSeconds": 12,
                                "successThreshold": 1,
                                "timeoutSeconds": 12
                              },
                              "resources": {
                                "limits": {
                                  "memory": "2Gi"
                                },
                                "requests": {
                                  "cpu": 1,
                                  "memory": "2Gi"
                                }
                              }
                            }
                          ],
                          "nodeSelector": {
                            "type": "warm"
                          }
                        }
                      },
                      "volumeClaimTemplates": [
                        {
                          "apiVersion": null,
                          "kind": null,
                          "metadata": {
                            "annotations": null,
                            "finalizers": null,
                            "labels": null,
                            "name": "elasticsearch-data",
                            "namespace": null
                          },
                          "spec": {
                            "accessModes": [
                              "ReadWriteOnce"
                            ],
                            "dataSource": {
                              "apiGroup": null,
                              "kind": null,
                              "name": null
                            },
                            "dataSourceRef": {
                              "apiGroup": null,
                              "kind": null,
                              "name": null
                            },
                            "resources": {
                              "limits": null,
                              "requests": {
                                "storage": "50Gi"
                              }
                            },
                            "selector": {
                              "matchExpressions": null,
                              "matchLabels": null
                            },
                            "storageClassName": "sc-warm-cold",
                            "volumeMode": null,
                            "volumeName": null
                          },
                          "status": {
                            "accessModes": null,
                            "allocatedResources": null,
                            "capacity": null,
                            "conditions": null,
                            "phase": null,
                            "resizeStatus": null
                          }
                        }
                      ]
                    },
                    {
                      "config": {
                        "node.attr.zone": "europe-west1-b",
                        "node.roles": "data_cold",
                        "node.store.allow_mmap": false,
                        "xpack.security.authc.realms": {
                          "saml": {
                            "saml1": {
                              "attributes.principal": "nameid",
                              "idp.entity_id": "urn:framsouza.eu.auth0.com",
                              "idp.metadata.path": "https://framsouza.eu.auth0.com/samlp/metadata/nbNudmA4FTPI3kO6im0o5KPV3gugxxQI",
                              "order": 2,
                              "sp.acs": "https://kibana.framsouza.co/api/security/v1/saml",
                              "sp.entity_id": "https://framsouza.co",
                              "sp.logout": "https://kibana.framsouza.co/logout"
                            }
                          }
                        }
                      },
                      "count": 1,
                      "name": "cold-zone-b",
                      "podTemplate": {
                        "spec": {
                          "affinity": {
                            "nodeAffinity": {
                              "requiredDuringSchedulingIgnoredDuringExecution": {
                                "nodeSelectorTerms": [
                                  {
                                    "matchExpressions": [
                                      {
                                        "key": "failure-domain.beta.kubernetes.io/zone",
                                        "operator": "In",
                                        "values": [
                                          "europe-west1-b"
                                        ]
                                      }
                                    ]
                                  }
                                ]
                              }
                            }
                          },
                          "containers": [
                            {
                              "env": [
                                {
                                  "name": "READINESS_PROBE_TIMEOUT",
                                  "value": "10"
                                }
                              ],
                              "name": "elasticsearch",
                              "readinessProbe": {
                                "exec": {
                                  "command": [
                                    "bash",
                                    "-c",
                                    "/mnt/elastic-internal/scripts/readiness-probe-script.sh"
                                  ]
                                },
                                "failureThreshold": 3,
                                "initialDelaySeconds": 10,
                                "periodSeconds": 12,
                                "successThreshold": 1,
                                "timeoutSeconds": 12
                              },
                              "resources": {
                                "limits": {
                                  "memory": "2Gi"
                                },
                                "requests": {
                                  "memory": "2Gi"
                                }
                              }
                            }
                          ],
                          "nodeSelector": {
                            "type": "cold"
                          }
                        }
                      },
                      "volumeClaimTemplates": [
                        {
                          "apiVersion": null,
                          "kind": null,
                          "metadata": {
                            "annotations": null,
                            "finalizers": null,
                            "labels": null,
                            "name": "elasticsearch-data",
                            "namespace": null
                          },
                          "spec": {
                            "accessModes": [
                              "ReadWriteOnce"
                            ],
                            "dataSource": {
                              "apiGroup": null,
                              "kind": null,
                              "name": null
                            },
                            "dataSourceRef": {
                              "apiGroup": null,
                              "kind": null,
                              "name": null
                            },
                            "resources": {
                              "limits": null,
                              "requests": {
                                "storage": "100Gi"
                              }
                            },
                            "selector": {
                              "matchExpressions": null,
                              "matchLabels": null
                            },
                            "storageClassName": "sc-warm-cold",
                            "volumeMode": null,
                            "volumeName": null
                          },
                          "status": {
                            "accessModes": null,
                            "allocatedResources": null,
                            "capacity": null,
                            "conditions": null,
                            "phase": null,
                            "resizeStatus": null
                          }
                        }
                      ]
                    },
                    {
                      "config": {
                        "node.attr.zone": "europe-west1-b",
                        "node.roles": "data_frozen",
                        "node.store.allow_mmap": false,
                        "xpack.security.authc.realms": {
                          "saml": {
                            "saml1": {
                              "attributes.principal": "nameid",
                              "idp.entity_id": "urn:framsouza.eu.auth0.com",
                              "idp.metadata.path": "https://framsouza.eu.auth0.com/samlp/metadata/nbNudmA4FTPI3kO6im0o5KPV3gugxxQI",
                              "order": 2,
                              "sp.acs": "https://kibana.framsouza.co/api/security/v1/saml",
                              "sp.entity_id": "https://framsouza.co",
                              "sp.logout": "https://kibana.framsouza.co/logout"
                            }
                          }
                        }
                      },
                      "count": 1,
                      "name": "frozen-zone-b",
                      "podTemplate": {
                        "spec": {
                          "affinity": {
                            "nodeAffinity": {
                              "requiredDuringSchedulingIgnoredDuringExecution": {
                                "nodeSelectorTerms": [
                                  {
                                    "matchExpressions": [
                                      {
                                        "key": "failure-domain.beta.kubernetes.io/zone",
                                        "operator": "In",
                                        "values": [
                                          "europe-west1-b"
                                        ]
                                      }
                                    ]
                                  }
                                ]
                              }
                            }
                          },
                          "containers": [
                            {
                              "env": [
                                {
                                  "name": "READINESS_PROBE_TIMEOUT",
                                  "value": "10"
                                }
                              ],
                              "name": "elasticsearch",
                              "readinessProbe": {
                                "exec": {
                                  "command": [
                                    "bash",
                                    "-c",
                                    "/mnt/elastic-internal/scripts/readiness-probe-script.sh"
                                  ]
                                },
                                "failureThreshold": 3,
                                "initialDelaySeconds": 10,
                                "periodSeconds": 12,
                                "successThreshold": 1,
                                "timeoutSeconds": 12
                              },
                              "resources": {
                                "limits": {
                                  "memory": "2Gi"
                                },
                                "requests": {
                                  "memory": "2Gi"
                                }
                              }
                            }
                          ],
                          "nodeSelector": {
                            "type": "frozen"
                          }
                        }
                      },
                      "volumeClaimTemplates": [
                        {
                          "apiVersion": null,
                          "kind": null,
                          "metadata": {
                            "annotations": null,
                            "finalizers": null,
                            "labels": null,
                            "name": "elasticsearch-data",
                            "namespace": null
                          },
                          "spec": {
                            "accessModes": [
                              "ReadWriteOnce"
                            ],
                            "dataSource": {
                              "apiGroup": null,
                              "kind": null,
                              "name": null
                            },
                            "dataSourceRef": {
                              "apiGroup": null,
                              "kind": null,
                              "name": null
                            },
                            "resources": {
                              "limits": null,
                              "requests": {
                                "storage": "100Gi"
                              }
                            },
                            "selector": {
                              "matchExpressions": null,
                              "matchLabels": null
                            },
                            "storageClassName": "sc-warm-cold",
                            "volumeMode": null,
                            "volumeName": null
                          },
                          "status": {
                            "accessModes": null,
                            "allocatedResources": null,
                            "capacity": null,
                            "conditions": null,
                            "phase": null,
                            "resizeStatus": null
                          }
                        }
                      ]
                    },
                    {
                      "config": {
                        "node.attr.zone": "europe-west1-b",
                        "node.roles": "ml",
                        "node.store.allow_mmap": false,
                        "xpack.security.authc.realms": {
                          "saml": {
                            "saml1": {
                              "attributes.principal": "nameid",
                              "idp.entity_id": "urn:framsouza.eu.auth0.com",
                              "idp.metadata.path": "https://framsouza.eu.auth0.com/samlp/metadata/nbNudmA4FTPI3kO6im0o5KPV3gugxxQI",
                              "order": 2,
                              "sp.acs": "https://kibana.framsouza.co/api/security/v1/saml",
                              "sp.entity_id": "https://framsouza.co",
                              "sp.logout": "https://kibana.framsouza.co/logout"
                            }
                          }
                        }
                      },
                      "count": 1,
                      "name": "ml-zone-b",
                      "podTemplate": {
                        "spec": {
                          "affinity": {
                            "nodeAffinity": {
                              "requiredDuringSchedulingIgnoredDuringExecution": {
                                "nodeSelectorTerms": [
                                  {
                                    "matchExpressions": [
                                      {
                                        "key": "failure-domain.beta.kubernetes.io/zone",
                                        "operator": "In",
                                        "values": [
                                          "europe-west1-b"
                                        ]
                                      }
                                    ]
                                  }
                                ]
                              }
                            }
                          },
                          "containers": [
                            {
                              "env": [
                                {
                                  "name": "READINESS_PROBE_TIMEOUT",
                                  "value": "10"
                                }
                              ],
                              "name": "elasticsearch",
                              "readinessProbe": {
                                "exec": {
                                  "command": [
                                    "bash",
                                    "-c",
                                    "/mnt/elastic-internal/scripts/readiness-probe-script.sh"
                                  ]
                                },
                                "failureThreshold": 3,
                                "initialDelaySeconds": 10,
                                "periodSeconds": 12,
                                "successThreshold": 1,
                                "timeoutSeconds": 12
                              },
                              "resources": {
                                "limits": {
                                  "memory": "4Gi"
                                },
                                "requests": {
                                  "memory": "4Gi"
                                }
                              }
                            }
                          ],
                          "nodeSelector": {
                            "type": "hot"
                          }
                        }
                      },
                      "volumeClaimTemplates": [
                        {
                          "apiVersion": null,
                          "kind": null,
                          "metadata": {
                            "annotations": null,
                            "finalizers": null,
                            "labels": null,
                            "name": "elasticsearch-data",
                            "namespace": null
                          },
                          "spec": {
                            "accessModes": [
                              "ReadWriteOnce"
                            ],
                            "dataSource": {
                              "apiGroup": null,
                              "kind": null,
                              "name": null
                            },
                            "dataSourceRef": {
                              "apiGroup": null,
                              "kind": null,
                              "name": null
                            },
                            "resources": {
                              "limits": null,
                              "requests": {
                                "storage": "100Gi"
                              }
                            },
                            "selector": {
                              "matchExpressions": null,
                              "matchLabels": null
                            },
                            "storageClassName": "sc-hot",
                            "volumeMode": null,
                            "volumeName": null
                          },
                          "status": {
                            "accessModes": null,
                            "allocatedResources": null,
                            "capacity": null,
                            "conditions": null,
                            "phase": null,
                            "resizeStatus": null
                          }
                        }
                      ]
                    },
                    {
                      "config": {
                        "node.attr.zone": "europe-west1-b",
                        "node.roles": "master",
                        "node.store.allow_mmap": false,
                        "xpack.security.authc.realms": {
                          "saml": {
                            "saml1": {
                              "attributes.principal": "nameid",
                              "idp.entity_id": "urn:framsouza.eu.auth0.com",
                              "idp.metadata.path": "https://framsouza.eu.auth0.com/samlp/metadata/nbNudmA4FTPI3kO6im0o5KPV3gugxxQI",
                              "order": 2,
                              "sp.acs": "https://kibana.framsouza.co/api/security/v1/saml",
                              "sp.entity_id": "https://framsouza.co",
                              "sp.logout": "https://kibana.framsouza.co/logout"
                            }
                          }
                        }
                      },
                      "count": 1,
                      "name": "master-zone-b",
                      "podTemplate": {
                        "spec": {
                          "affinity": {
                            "nodeAffinity": {
                              "requiredDuringSchedulingIgnoredDuringExecution": {
                                "nodeSelectorTerms": [
                                  {
                                    "matchExpressions": [
                                      {
                                        "key": "failure-domain.beta.kubernetes.io/zone",
                                        "operator": "In",
                                        "values": [
                                          "europe-west1-b"
                                        ]
                                      }
                                    ]
                                  }
                                ]
                              }
                            }
                          },
                          "containers": [
                            {
                              "env": [
                                {
                                  "name": "READINESS_PROBE_TIMEOUT",
                                  "value": "10"
                                }
                              ],
                              "name": "elasticsearch",
                              "readinessProbe": {
                                "exec": {
                                  "command": [
                                    "bash",
                                    "-c",
                                    "/mnt/elastic-internal/scripts/readiness-probe-script.sh"
                                  ]
                                },
                                "failureThreshold": 3,
                                "initialDelaySeconds": 10,
                                "periodSeconds": 12,
                                "successThreshold": 1,
                                "timeoutSeconds": 12
                              },
                              "resources": {
                                "limits": {
                                  "memory": "2Gi"
                                },
                                "requests": {
                                  "cpu": 1,
                                  "memory": "2Gi"
                                }
                              }
                            }
                          ],
                          "nodeSelector": {
                            "type": "hot"
                          }
                        }
                      },
                      "volumeClaimTemplates": [
                        {
                          "apiVersion": null,
                          "kind": null,
                          "metadata": {
                            "annotations": null,
                            "finalizers": null,
                            "labels": null,
                            "name": "elasticsearch-data",
                            "namespace": null
                          },
                          "spec": {
                            "accessModes": [
                              "ReadWriteOnce"
                            ],
                            "dataSource": {
                              "apiGroup": null,
                              "kind": null,
                              "name": null
                            },
                            "dataSourceRef": {
                              "apiGroup": null,
                              "kind": null,
                              "name": null
                            },
                            "resources": {
                              "limits": null,
                              "requests": {
                                "storage": "10Gi"
                              }
                            },
                            "selector": {
                              "matchExpressions": null,
                              "matchLabels": null
                            },
                            "storageClassName": "sc-hot",
                            "volumeMode": null,
                            "volumeName": null
                          },
                          "status": {
                            "accessModes": null,
                            "allocatedResources": null,
                            "capacity": null,
                            "conditions": null,
                            "phase": null,
                            "resizeStatus": null
                          }
                        }
                      ]
                    },
                    {
                      "config": {
                        "node.attr.zone": "europe-west1-c",
                        "node.roles": "master",
                        "node.store.allow_mmap": false,
                        "xpack.security.authc.realms": {
                          "saml": {
                            "saml1": {
                              "attributes.principal": "nameid",
                              "idp.entity_id": "urn:framsouza.eu.auth0.com",
                              "idp.metadata.path": "https://framsouza.eu.auth0.com/samlp/metadata/nbNudmA4FTPI3kO6im0o5KPV3gugxxQI",
                              "order": 2,
                              "sp.acs": "https://kibana.framsouza.co/api/security/v1/saml",
                              "sp.entity_id": "https://framsouza.co",
                              "sp.logout": "https://kibana.framsouza.co/logout"
                            }
                          }
                        }
                      },
                      "count": 1,
                      "name": "master-zone-c",
                      "podTemplate": {
                        "spec": {
                          "affinity": {
                            "nodeAffinity": {
                              "requiredDuringSchedulingIgnoredDuringExecution": {
                                "nodeSelectorTerms": [
                                  {
                                    "matchExpressions": [
                                      {
                                        "key": "failure-domain.beta.kubernetes.io/zone",
                                        "operator": "In",
                                        "values": [
                                          "europe-west1-c"
                                        ]
                                      }
                                    ]
                                  }
                                ]
                              }
                            }
                          },
                          "containers": [
                            {
                              "env": [
                                {
                                  "name": "READINESS_PROBE_TIMEOUT",
                                  "value": "10"
                                }
                              ],
                              "name": "elasticsearch",
                              "readinessProbe": {
                                "exec": {
                                  "command": [
                                    "bash",
                                    "-c",
                                    "/mnt/elastic-internal/scripts/readiness-probe-script.sh"
                                  ]
                                },
                                "failureThreshold": 3,
                                "initialDelaySeconds": 10,
                                "periodSeconds": 12,
                                "successThreshold": 1,
                                "timeoutSeconds": 12
                              },
                              "resources": {
                                "limits": {
                                  "memory": "2Gi"
                                },
                                "requests": {
                                  "cpu": 1,
                                  "memory": "2Gi"
                                }
                              }
                            }
                          ],
                          "nodeSelector": {
                            "type": "hot"
                          }
                        }
                      },
                      "volumeClaimTemplates": [
                        {
                          "apiVersion": null,
                          "kind": null,
                          "metadata": {
                            "annotations": null,
                            "finalizers": null,
                            "labels": null,
                            "name": "elasticsearch-data",
                            "namespace": null
                          },
                          "spec": {
                            "accessModes": [
                              "ReadWriteOnce"
                            ],
                            "dataSource": {
                              "apiGroup": null,
                              "kind": null,
                              "name": null
                            },
                            "dataSourceRef": {
                              "apiGroup": null,
                              "kind": null,
                              "name": null
                            },
                            "resources": {
                              "limits": null,
                              "requests": {
                                "storage": "10Gi"
                              }
                            },
                            "selector": {
                              "matchExpressions": null,
                              "matchLabels": null
                            },
                            "storageClassName": "sc-hot",
                            "volumeMode": null,
                            "volumeName": null
                          },
                          "status": {
                            "accessModes": null,
                            "allocatedResources": null,
                            "capacity": null,
                            "conditions": null,
                            "phase": null,
                            "resizeStatus": null
                          }
                        }
                      ]
                    },
                    {
                      "config": {
                        "node.attr.zone": "europe-west1-d",
                        "node.roles": "master",
                        "node.store.allow_mmap": false,
                        "xpack.security.authc.realms": {
                          "saml": {
                            "saml1": {
                              "attributes.principal": "nameid",
                              "idp.entity_id": "urn:framsouza.eu.auth0.com",
                              "idp.metadata.path": "https://framsouza.eu.auth0.com/samlp/metadata/nbNudmA4FTPI3kO6im0o5KPV3gugxxQI",
                              "order": 2,
                              "sp.acs": "https://kibana.framsouza.co/api/security/v1/saml",
                              "sp.entity_id": "https://framsouza.co",
                              "sp.logout": "https://kibana.framsouza.co/logout"
                            }
                          }
                        }
                      },
                      "count": 1,
                      "name": "master-zone-d",
                      "podTemplate": {
                        "spec": {
                          "affinity": {
                            "nodeAffinity": {
                              "requiredDuringSchedulingIgnoredDuringExecution": {
                                "nodeSelectorTerms": [
                                  {
                                    "matchExpressions": [
                                      {
                                        "key": "failure-domain.beta.kubernetes.io/zone",
                                        "operator": "In",
                                        "values": [
                                          "europe-west1-d"
                                        ]
                                      }
                                    ]
                                  }
                                ]
                              }
                            }
                          },
                          "containers": [
                            {
                              "env": [
                                {
                                  "name": "READINESS_PROBE_TIMEOUT",
                                  "value": "10"
                                }
                              ],
                              "name": "elasticsearch",
                              "readinessProbe": {
                                "exec": {
                                  "command": [
                                    "bash",
                                    "-c",
                                    "/mnt/elastic-internal/scripts/readiness-probe-script.sh"
                                  ]
                                },
                                "failureThreshold": 3,
                                "initialDelaySeconds": 10,
                                "periodSeconds": 12,
                                "successThreshold": 1,
                                "timeoutSeconds": 12
                              },
                              "resources": {
                                "limits": {
                                  "memory": "2Gi"
                                },
                                "requests": {
                                  "cpu": 1,
                                  "memory": "2Gi"
                                }
                              }
                            }
                          ],
                          "nodeSelector": {
                            "type": "hot"
                          }
                        }
                      },
                      "volumeClaimTemplates": [
                        {
                          "apiVersion": null,
                          "kind": null,
                          "metadata": {
                            "annotations": null,
                            "finalizers": null,
                            "labels": null,
                            "name": "elasticsearch-data",
                            "namespace": null
                          },
                          "spec": {
                            "accessModes": [
                              "ReadWriteOnce"
                            ],
                            "dataSource": {
                              "apiGroup": null,
                              "kind": null,
                              "name": null
                            },
                            "dataSourceRef": {
                              "apiGroup": null,
                              "kind": null,
                              "name": null
                            },
                            "resources": {
                              "limits": null,
                              "requests": {
                                "storage": "10Gi"
                              }
                            },
                            "selector": {
                              "matchExpressions": null,
                              "matchLabels": null
                            },
                            "storageClassName": "sc-hot",
                            "volumeMode": null,
                            "volumeName": null
                          },
                          "status": {
                            "accessModes": null,
                            "allocatedResources": null,
                            "capacity": null,
                            "conditions": null,
                            "phase": null,
                            "resizeStatus": null
                          }
                        }
                      ]
                    }
                  ],
                  "podDisruptionBudget": {
                    "metadata": {
                      "annotations": null,
                      "finalizers": null,
                      "labels": null,
                      "name": null,
                      "namespace": null
                    },
                    "spec": {
                      "maxUnavailable": null,
                      "minAvailable": null,
                      "selector": {
                        "matchExpressions": null,
                        "matchLabels": null
                      }
                    }
                  },
                  "remoteClusters": null,
                  "secureSettings": null,
                  "serviceAccountName": null,
                  "transport": {
                    "service": {
                      "metadata": {
                        "annotations": null,
                        "finalizers": null,
                        "labels": null,
                        "name": null,
                        "namespace": null
                      },
                      "spec": {
                        "allocateLoadBalancerNodePorts": null,
                        "clusterIP": null,
                        "clusterIPs": null,
                        "externalIPs": null,
                        "externalName": null,
                        "externalTrafficPolicy": null,
                        "healthCheckNodePort": null,
                        "internalTrafficPolicy": null,
                        "ipFamilies": null,
                        "ipFamilyPolicy": null,
                        "loadBalancerClass": null,
                        "loadBalancerIP": null,
                        "loadBalancerSourceRanges": null,
                        "ports": null,
                        "publishNotReadyAddresses": null,
                        "selector": null,
                        "sessionAffinity": null,
                        "sessionAffinityConfig": {
                          "clientIP": {
                            "timeoutSeconds": null
                          }
                        },
                        "type": null
                      }
                    },
                    "tls": {
                      "certificate": {
                        "secretName": null
                      },
                      "otherNameSuffix": null,
                      "subjectAltNames": null
                    }
                  },
                  "updateStrategy": {
                    "changeBudget": {
                      "maxSurge": 1,
                      "maxUnavailable": 1
                    }
                  },
                  "version": "8.0.0",
                  "volumeClaimDeletePolicy": null
                }
              },
              "type": [
                "object",
                {
                  "apiVersion": "string",
                  "kind": "string",
                  "metadata": [
                    "object",
                    {
                      "annotations": [
                        "map",
                        "string"
                      ],
                      "clusterName": "string",
                      "creationTimestamp": "string",
                      "deletionGracePeriodSeconds": "number",
                      "deletionTimestamp": "string",
                      "finalizers": [
                        "list",
                        "string"
                      ],
                      "generateName": "string",
                      "generation": "number",
                      "labels": [
                        "map",
                        "string"
                      ],
                      "managedFields": [
                        "tuple",
                        [
                          [
                            "object",
                            {
                              "apiVersion": "string",
                              "fieldsType": "string",
                              "fieldsV1": "dynamic",
                              "manager": "string",
                              "operation": "string",
                              "time": "string"
                            }
                          ]
                        ]
                      ],
                      "name": "string",
                      "namespace": "string",
                      "ownerReferences": [
                        "list",
                        [
                          "object",
                          {
                            "apiVersion": "string",
                            "blockOwnerDeletion": "bool",
                            "controller": "bool",
                            "kind": "string",
                            "name": "string",
                            "uid": "string"
                          }
                        ]
                      ],
                      "resourceVersion": "string",
                      "selfLink": "string",
                      "uid": "string"
                    }
                  ],
                  "spec": [
                    "object",
                    {
                      "auth": [
                        "object",
                        {
                          "fileRealm": [
                            "list",
                            [
                              "object",
                              {
                                "secretName": "string"
                              }
                            ]
                          ],
                          "roles": [
                            "list",
                            [
                              "object",
                              {
                                "secretName": "string"
                              }
                            ]
                          ]
                        }
                      ],
                      "http": [
                        "object",
                        {
                          "service": [
                            "object",
                            {
                              "metadata": [
                                "object",
                                {
                                  "annotations": [
                                    "map",
                                    "string"
                                  ],
                                  "finalizers": [
                                    "list",
                                    "string"
                                  ],
                                  "labels": [
                                    "map",
                                    "string"
                                  ],
                                  "name": "string",
                                  "namespace": "string"
                                }
                              ],
                              "spec": [
                                "object",
                                {
                                  "allocateLoadBalancerNodePorts": "bool",
                                  "clusterIP": "string",
                                  "clusterIPs": [
                                    "list",
                                    "string"
                                  ],
                                  "externalIPs": [
                                    "list",
                                    "string"
                                  ],
                                  "externalName": "string",
                                  "externalTrafficPolicy": "string",
                                  "healthCheckNodePort": "number",
                                  "internalTrafficPolicy": "string",
                                  "ipFamilies": [
                                    "list",
                                    "string"
                                  ],
                                  "ipFamilyPolicy": "string",
                                  "loadBalancerClass": "string",
                                  "loadBalancerIP": "string",
                                  "loadBalancerSourceRanges": [
                                    "list",
                                    "string"
                                  ],
                                  "ports": [
                                    "list",
                                    [
                                      "object",
                                      {
                                        "appProtocol": "string",
                                        "name": "string",
                                        "nodePort": "number",
                                        "port": "number",
                                        "protocol": "string",
                                        "targetPort": "string"
                                      }
                                    ]
                                  ],
                                  "publishNotReadyAddresses": "bool",
                                  "selector": [
                                    "map",
                                    "string"
                                  ],
                                  "sessionAffinity": "string",
                                  "sessionAffinityConfig": [
                                    "object",
                                    {
                                      "clientIP": [
                                        "object",
                                        {
                                          "timeoutSeconds": "number"
                                        }
                                      ]
                                    }
                                  ],
                                  "type": "string"
                                }
                              ]
                            }
                          ],
                          "tls": [
                            "object",
                            {
                              "certificate": [
                                "object",
                                {
                                  "secretName": "string"
                                }
                              ],
                              "selfSignedCertificate": [
                                "object",
                                {
                                  "disabled": "bool",
                                  "subjectAltNames": [
                                    "list",
                                    [
                                      "object",
                                      {
                                        "dns": "string",
                                        "ip": "string"
                                      }
                                    ]
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ],
                      "image": "string",
                      "monitoring": [
                        "object",
                        {
                          "logs": [
                            "object",
                            {
                              "elasticsearchRefs": [
                                "list",
                                [
                                  "object",
                                  {
                                    "name": "string",
                                    "namespace": "string",
                                    "serviceName": "string"
                                  }
                                ]
                              ]
                            }
                          ],
                          "metrics": [
                            "object",
                            {
                              "elasticsearchRefs": [
                                "list",
                                [
                                  "object",
                                  {
                                    "name": "string",
                                    "namespace": "string",
                                    "serviceName": "string"
                                  }
                                ]
                              ]
                            }
                          ]
                        }
                      ],
                      "nodeSets": [
                        "tuple",
                        [
                          [
                            "object",
                            {
                              "config": [
                                "object",
                                {
                                  "node.attr.zone": "string",
                                  "node.roles": [
                                    "tuple",
                                    [
                                      "string",
                                      "string",
                                      "string"
                                    ]
                                  ],
                                  "node.store.allow_mmap": "bool",
                                  "xpack.security.authc.realms": [
                                    "object",
                                    {
                                      "saml": [
                                        "object",
                                        {
                                          "saml1": [
                                            "object",
                                            {
                                              "attributes.principal": "string",
                                              "idp.entity_id": "string",
                                              "idp.metadata.path": "string",
                                              "order": "number",
                                              "sp.acs": "string",
                                              "sp.entity_id": "string",
                                              "sp.logout": "string"
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ],
                              "count": "number",
                              "name": "string",
                              "podTemplate": [
                                "object",
                                {
                                  "spec": [
                                    "object",
                                    {
                                      "affinity": [
                                        "object",
                                        {
                                          "nodeAffinity": [
                                            "object",
                                            {
                                              "requiredDuringSchedulingIgnoredDuringExecution": [
                                                "object",
                                                {
                                                  "nodeSelectorTerms": [
                                                    "tuple",
                                                    [
                                                      [
                                                        "object",
                                                        {
                                                          "matchExpressions": [
                                                            "tuple",
                                                            [
                                                              [
                                                                "object",
                                                                {
                                                                  "key": "string",
                                                                  "operator": "string",
                                                                  "values": [
                                                                    "tuple",
                                                                    [
                                                                      "string"
                                                                    ]
                                                                  ]
                                                                }
                                                              ]
                                                            ]
                                                          ]
                                                        }
                                                      ]
                                                    ]
                                                  ]
                                                }
                                              ]
                                            }
                                          ]
                                        }
                                      ],
                                      "containers": [
                                        "tuple",
                                        [
                                          [
                                            "object",
                                            {
                                              "env": [
                                                "tuple",
                                                [
                                                  [
                                                    "object",
                                                    {
                                                      "name": "string",
                                                      "value": "string"
                                                    }
                                                  ]
                                                ]
                                              ],
                                              "name": "string",
                                              "readinessProbe": [
                                                "object",
                                                {
                                                  "exec": [
                                                    "object",
                                                    {
                                                      "command": [
                                                        "tuple",
                                                        [
                                                          "string",
                                                          "string",
                                                          "string"
                                                        ]
                                                      ]
                                                    }
                                                  ],
                                                  "failureThreshold": "number",
                                                  "initialDelaySeconds": "number",
                                                  "periodSeconds": "number",
                                                  "successThreshold": "number",
                                                  "timeoutSeconds": "number"
                                                }
                                              ],
                                              "resources": [
                                                "object",
                                                {
                                                  "limits": [
                                                    "object",
                                                    {
                                                      "memory": "string"
                                                    }
                                                  ],
                                                  "requests": [
                                                    "object",
                                                    {
                                                      "memory": "string"
                                                    }
                                                  ]
                                                }
                                              ]
                                            }
                                          ]
                                        ]
                                      ],
                                      "nodeSelector": [
                                        "object",
                                        {
                                          "type": "string"
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ],
                              "volumeClaimTemplates": [
                                "list",
                                [
                                  "object",
                                  {
                                    "apiVersion": "string",
                                    "kind": "string",
                                    "metadata": [
                                      "object",
                                      {
                                        "annotations": [
                                          "map",
                                          "string"
                                        ],
                                        "finalizers": [
                                          "list",
                                          "string"
                                        ],
                                        "labels": [
                                          "map",
                                          "string"
                                        ],
                                        "name": "string",
                                        "namespace": "string"
                                      }
                                    ],
                                    "spec": [
                                      "object",
                                      {
                                        "accessModes": [
                                          "list",
                                          "string"
                                        ],
                                        "dataSource": [
                                          "object",
                                          {
                                            "apiGroup": "string",
                                            "kind": "string",
                                            "name": "string"
                                          }
                                        ],
                                        "dataSourceRef": [
                                          "object",
                                          {
                                            "apiGroup": "string",
                                            "kind": "string",
                                            "name": "string"
                                          }
                                        ],
                                        "resources": [
                                          "object",
                                          {
                                            "limits": [
                                              "map",
                                              "string"
                                            ],
                                            "requests": [
                                              "map",
                                              "string"
                                            ]
                                          }
                                        ],
                                        "selector": [
                                          "object",
                                          {
                                            "matchExpressions": [
                                              "list",
                                              [
                                                "object",
                                                {
                                                  "key": "string",
                                                  "operator": "string",
                                                  "values": [
                                                    "list",
                                                    "string"
                                                  ]
                                                }
                                              ]
                                            ],
                                            "matchLabels": [
                                              "map",
                                              "string"
                                            ]
                                          }
                                        ],
                                        "storageClassName": "string",
                                        "volumeMode": "string",
                                        "volumeName": "string"
                                      }
                                    ],
                                    "status": [
                                      "object",
                                      {
                                        "accessModes": [
                                          "list",
                                          "string"
                                        ],
                                        "allocatedResources": [
                                          "map",
                                          "string"
                                        ],
                                        "capacity": [
                                          "map",
                                          "string"
                                        ],
                                        "conditions": [
                                          "list",
                                          [
                                            "object",
                                            {
                                              "lastProbeTime": "string",
                                              "lastTransitionTime": "string",
                                              "message": "string",
                                              "reason": "string",
                                              "status": "string",
                                              "type": "string"
                                            }
                                          ]
                                        ],
                                        "phase": "string",
                                        "resizeStatus": "string"
                                      }
                                    ]
                                  }
                                ]
                              ]
                            }
                          ],
                          [
                            "object",
                            {
                              "config": [
                                "object",
                                {
                                  "node.attr.zone": "string",
                                  "node.roles": [
                                    "tuple",
                                    [
                                      "string",
                                      "string",
                                      "string"
                                    ]
                                  ],
                                  "node.store.allow_mmap": "bool",
                                  "xpack.security.authc.realms": [
                                    "object",
                                    {
                                      "saml": [
                                        "object",
                                        {
                                          "saml1": [
                                            "object",
                                            {
                                              "attributes.principal": "string",
                                              "idp.entity_id": "string",
                                              "idp.metadata.path": "string",
                                              "order": "number",
                                              "sp.acs": "string",
                                              "sp.entity_id": "string",
                                              "sp.logout": "string"
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ],
                              "count": "number",
                              "name": "string",
                              "podTemplate": [
                                "object",
                                {
                                  "spec": [
                                    "object",
                                    {
                                      "affinity": [
                                        "object",
                                        {
                                          "nodeAffinity": [
                                            "object",
                                            {
                                              "requiredDuringSchedulingIgnoredDuringExecution": [
                                                "object",
                                                {
                                                  "nodeSelectorTerms": [
                                                    "tuple",
                                                    [
                                                      [
                                                        "object",
                                                        {
                                                          "matchExpressions": [
                                                            "tuple",
                                                            [
                                                              [
                                                                "object",
                                                                {
                                                                  "key": "string",
                                                                  "operator": "string",
                                                                  "values": [
                                                                    "tuple",
                                                                    [
                                                                      "string"
                                                                    ]
                                                                  ]
                                                                }
                                                              ]
                                                            ]
                                                          ]
                                                        }
                                                      ]
                                                    ]
                                                  ]
                                                }
                                              ]
                                            }
                                          ]
                                        }
                                      ],
                                      "containers": [
                                        "tuple",
                                        [
                                          [
                                            "object",
                                            {
                                              "env": [
                                                "tuple",
                                                [
                                                  [
                                                    "object",
                                                    {
                                                      "name": "string",
                                                      "value": "string"
                                                    }
                                                  ]
                                                ]
                                              ],
                                              "name": "string",
                                              "readinessProbe": [
                                                "object",
                                                {
                                                  "exec": [
                                                    "object",
                                                    {
                                                      "command": [
                                                        "tuple",
                                                        [
                                                          "string",
                                                          "string",
                                                          "string"
                                                        ]
                                                      ]
                                                    }
                                                  ],
                                                  "failureThreshold": "number",
                                                  "initialDelaySeconds": "number",
                                                  "periodSeconds": "number",
                                                  "successThreshold": "number",
                                                  "timeoutSeconds": "number"
                                                }
                                              ],
                                              "resources": [
                                                "object",
                                                {
                                                  "limits": [
                                                    "object",
                                                    {
                                                      "memory": "string"
                                                    }
                                                  ],
                                                  "requests": [
                                                    "object",
                                                    {
                                                      "cpu": "number",
                                                      "memory": "string"
                                                    }
                                                  ]
                                                }
                                              ]
                                            }
                                          ]
                                        ]
                                      ],
                                      "nodeSelector": [
                                        "object",
                                        {
                                          "type": "string"
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ],
                              "volumeClaimTemplates": [
                                "list",
                                [
                                  "object",
                                  {
                                    "apiVersion": "string",
                                    "kind": "string",
                                    "metadata": [
                                      "object",
                                      {
                                        "annotations": [
                                          "map",
                                          "string"
                                        ],
                                        "finalizers": [
                                          "list",
                                          "string"
                                        ],
                                        "labels": [
                                          "map",
                                          "string"
                                        ],
                                        "name": "string",
                                        "namespace": "string"
                                      }
                                    ],
                                    "spec": [
                                      "object",
                                      {
                                        "accessModes": [
                                          "list",
                                          "string"
                                        ],
                                        "dataSource": [
                                          "object",
                                          {
                                            "apiGroup": "string",
                                            "kind": "string",
                                            "name": "string"
                                          }
                                        ],
                                        "dataSourceRef": [
                                          "object",
                                          {
                                            "apiGroup": "string",
                                            "kind": "string",
                                            "name": "string"
                                          }
                                        ],
                                        "resources": [
                                          "object",
                                          {
                                            "limits": [
                                              "map",
                                              "string"
                                            ],
                                            "requests": [
                                              "map",
                                              "string"
                                            ]
                                          }
                                        ],
                                        "selector": [
                                          "object",
                                          {
                                            "matchExpressions": [
                                              "list",
                                              [
                                                "object",
                                                {
                                                  "key": "string",
                                                  "operator": "string",
                                                  "values": [
                                                    "list",
                                                    "string"
                                                  ]
                                                }
                                              ]
                                            ],
                                            "matchLabels": [
                                              "map",
                                              "string"
                                            ]
                                          }
                                        ],
                                        "storageClassName": "string",
                                        "volumeMode": "string",
                                        "volumeName": "string"
                                      }
                                    ],
                                    "status": [
                                      "object",
                                      {
                                        "accessModes": [
                                          "list",
                                          "string"
                                        ],
                                        "allocatedResources": [
                                          "map",
                                          "string"
                                        ],
                                        "capacity": [
                                          "map",
                                          "string"
                                        ],
                                        "conditions": [
                                          "list",
                                          [
                                            "object",
                                            {
                                              "lastProbeTime": "string",
                                              "lastTransitionTime": "string",
                                              "message": "string",
                                              "reason": "string",
                                              "status": "string",
                                              "type": "string"
                                            }
                                          ]
                                        ],
                                        "phase": "string",
                                        "resizeStatus": "string"
                                      }
                                    ]
                                  }
                                ]
                              ]
                            }
                          ],
                          [
                            "object",
                            {
                              "config": [
                                "object",
                                {
                                  "node.attr.zone": "string",
                                  "node.roles": [
                                    "tuple",
                                    [
                                      "string",
                                      "string",
                                      "string"
                                    ]
                                  ],
                                  "node.store.allow_mmap": "bool",
                                  "xpack.security.authc.realms": [
                                    "object",
                                    {
                                      "saml": [
                                        "object",
                                        {
                                          "saml1": [
                                            "object",
                                            {
                                              "attributes.principal": "string",
                                              "idp.entity_id": "string",
                                              "idp.metadata.path": "string",
                                              "order": "number",
                                              "sp.acs": "string",
                                              "sp.entity_id": "string",
                                              "sp.logout": "string"
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ],
                              "count": "number",
                              "name": "string",
                              "podTemplate": [
                                "object",
                                {
                                  "spec": [
                                    "object",
                                    {
                                      "affinity": [
                                        "object",
                                        {
                                          "nodeAffinity": [
                                            "object",
                                            {
                                              "requiredDuringSchedulingIgnoredDuringExecution": [
                                                "object",
                                                {
                                                  "nodeSelectorTerms": [
                                                    "tuple",
                                                    [
                                                      [
                                                        "object",
                                                        {
                                                          "matchExpressions": [
                                                            "tuple",
                                                            [
                                                              [
                                                                "object",
                                                                {
                                                                  "key": "string",
                                                                  "operator": "string",
                                                                  "values": [
                                                                    "tuple",
                                                                    [
                                                                      "string"
                                                                    ]
                                                                  ]
                                                                }
                                                              ]
                                                            ]
                                                          ]
                                                        }
                                                      ]
                                                    ]
                                                  ]
                                                }
                                              ]
                                            }
                                          ]
                                        }
                                      ],
                                      "containers": [
                                        "tuple",
                                        [
                                          [
                                            "object",
                                            {
                                              "env": [
                                                "tuple",
                                                [
                                                  [
                                                    "object",
                                                    {
                                                      "name": "string",
                                                      "value": "string"
                                                    }
                                                  ]
                                                ]
                                              ],
                                              "name": "string",
                                              "readinessProbe": [
                                                "object",
                                                {
                                                  "exec": [
                                                    "object",
                                                    {
                                                      "command": [
                                                        "tuple",
                                                        [
                                                          "string",
                                                          "string",
                                                          "string"
                                                        ]
                                                      ]
                                                    }
                                                  ],
                                                  "failureThreshold": "number",
                                                  "initialDelaySeconds": "number",
                                                  "periodSeconds": "number",
                                                  "successThreshold": "number",
                                                  "timeoutSeconds": "number"
                                                }
                                              ],
                                              "resources": [
                                                "object",
                                                {
                                                  "limits": [
                                                    "object",
                                                    {
                                                      "memory": "string"
                                                    }
                                                  ],
                                                  "requests": [
                                                    "object",
                                                    {
                                                      "cpu": "number",
                                                      "memory": "string"
                                                    }
                                                  ]
                                                }
                                              ]
                                            }
                                          ]
                                        ]
                                      ],
                                      "nodeSelector": [
                                        "object",
                                        {
                                          "type": "string"
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ],
                              "volumeClaimTemplates": [
                                "list",
                                [
                                  "object",
                                  {
                                    "apiVersion": "string",
                                    "kind": "string",
                                    "metadata": [
                                      "object",
                                      {
                                        "annotations": [
                                          "map",
                                          "string"
                                        ],
                                        "finalizers": [
                                          "list",
                                          "string"
                                        ],
                                        "labels": [
                                          "map",
                                          "string"
                                        ],
                                        "name": "string",
                                        "namespace": "string"
                                      }
                                    ],
                                    "spec": [
                                      "object",
                                      {
                                        "accessModes": [
                                          "list",
                                          "string"
                                        ],
                                        "dataSource": [
                                          "object",
                                          {
                                            "apiGroup": "string",
                                            "kind": "string",
                                            "name": "string"
                                          }
                                        ],
                                        "dataSourceRef": [
                                          "object",
                                          {
                                            "apiGroup": "string",
                                            "kind": "string",
                                            "name": "string"
                                          }
                                        ],
                                        "resources": [
                                          "object",
                                          {
                                            "limits": [
                                              "map",
                                              "string"
                                            ],
                                            "requests": [
                                              "map",
                                              "string"
                                            ]
                                          }
                                        ],
                                        "selector": [
                                          "object",
                                          {
                                            "matchExpressions": [
                                              "list",
                                              [
                                                "object",
                                                {
                                                  "key": "string",
                                                  "operator": "string",
                                                  "values": [
                                                    "list",
                                                    "string"
                                                  ]
                                                }
                                              ]
                                            ],
                                            "matchLabels": [
                                              "map",
                                              "string"
                                            ]
                                          }
                                        ],
                                        "storageClassName": "string",
                                        "volumeMode": "string",
                                        "volumeName": "string"
                                      }
                                    ],
                                    "status": [
                                      "object",
                                      {
                                        "accessModes": [
                                          "list",
                                          "string"
                                        ],
                                        "allocatedResources": [
                                          "map",
                                          "string"
                                        ],
                                        "capacity": [
                                          "map",
                                          "string"
                                        ],
                                        "conditions": [
                                          "list",
                                          [
                                            "object",
                                            {
                                              "lastProbeTime": "string",
                                              "lastTransitionTime": "string",
                                              "message": "string",
                                              "reason": "string",
                                              "status": "string",
                                              "type": "string"
                                            }
                                          ]
                                        ],
                                        "phase": "string",
                                        "resizeStatus": "string"
                                      }
                                    ]
                                  }
                                ]
                              ]
                            }
                          ],
                          [
                            "object",
                            {
                              "config": [
                                "object",
                                {
                                  "node.attr.zone": "string",
                                  "node.roles": "string",
                                  "node.store.allow_mmap": "bool",
                                  "xpack.security.authc.realms": [
                                    "object",
                                    {
                                      "saml": [
                                        "object",
                                        {
                                          "saml1": [
                                            "object",
                                            {
                                              "attributes.principal": "string",
                                              "idp.entity_id": "string",
                                              "idp.metadata.path": "string",
                                              "order": "number",
                                              "sp.acs": "string",
                                              "sp.entity_id": "string",
                                              "sp.logout": "string"
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ],
                              "count": "number",
                              "name": "string",
                              "podTemplate": [
                                "object",
                                {
                                  "spec": [
                                    "object",
                                    {
                                      "affinity": [
                                        "object",
                                        {
                                          "nodeAffinity": [
                                            "object",
                                            {
                                              "requiredDuringSchedulingIgnoredDuringExecution": [
                                                "object",
                                                {
                                                  "nodeSelectorTerms": [
                                                    "tuple",
                                                    [
                                                      [
                                                        "object",
                                                        {
                                                          "matchExpressions": [
                                                            "tuple",
                                                            [
                                                              [
                                                                "object",
                                                                {
                                                                  "key": "string",
                                                                  "operator": "string",
                                                                  "values": [
                                                                    "tuple",
                                                                    [
                                                                      "string"
                                                                    ]
                                                                  ]
                                                                }
                                                              ]
                                                            ]
                                                          ]
                                                        }
                                                      ]
                                                    ]
                                                  ]
                                                }
                                              ]
                                            }
                                          ]
                                        }
                                      ],
                                      "containers": [
                                        "tuple",
                                        [
                                          [
                                            "object",
                                            {
                                              "env": [
                                                "tuple",
                                                [
                                                  [
                                                    "object",
                                                    {
                                                      "name": "string",
                                                      "value": "string"
                                                    }
                                                  ]
                                                ]
                                              ],
                                              "name": "string",
                                              "readinessProbe": [
                                                "object",
                                                {
                                                  "exec": [
                                                    "object",
                                                    {
                                                      "command": [
                                                        "tuple",
                                                        [
                                                          "string",
                                                          "string",
                                                          "string"
                                                        ]
                                                      ]
                                                    }
                                                  ],
                                                  "failureThreshold": "number",
                                                  "initialDelaySeconds": "number",
                                                  "periodSeconds": "number",
                                                  "successThreshold": "number",
                                                  "timeoutSeconds": "number"
                                                }
                                              ],
                                              "resources": [
                                                "object",
                                                {
                                                  "limits": [
                                                    "object",
                                                    {
                                                      "memory": "string"
                                                    }
                                                  ],
                                                  "requests": [
                                                    "object",
                                                    {
                                                      "cpu": "number",
                                                      "memory": "string"
                                                    }
                                                  ]
                                                }
                                              ]
                                            }
                                          ]
                                        ]
                                      ],
                                      "nodeSelector": [
                                        "object",
                                        {
                                          "type": "string"
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ],
                              "volumeClaimTemplates": [
                                "list",
                                [
                                  "object",
                                  {
                                    "apiVersion": "string",
                                    "kind": "string",
                                    "metadata": [
                                      "object",
                                      {
                                        "annotations": [
                                          "map",
                                          "string"
                                        ],
                                        "finalizers": [
                                          "list",
                                          "string"
                                        ],
                                        "labels": [
                                          "map",
                                          "string"
                                        ],
                                        "name": "string",
                                        "namespace": "string"
                                      }
                                    ],
                                    "spec": [
                                      "object",
                                      {
                                        "accessModes": [
                                          "list",
                                          "string"
                                        ],
                                        "dataSource": [
                                          "object",
                                          {
                                            "apiGroup": "string",
                                            "kind": "string",
                                            "name": "string"
                                          }
                                        ],
                                        "dataSourceRef": [
                                          "object",
                                          {
                                            "apiGroup": "string",
                                            "kind": "string",
                                            "name": "string"
                                          }
                                        ],
                                        "resources": [
                                          "object",
                                          {
                                            "limits": [
                                              "map",
                                              "string"
                                            ],
                                            "requests": [
                                              "map",
                                              "string"
                                            ]
                                          }
                                        ],
                                        "selector": [
                                          "object",
                                          {
                                            "matchExpressions": [
                                              "list",
                                              [
                                                "object",
                                                {
                                                  "key": "string",
                                                  "operator": "string",
                                                  "values": [
                                                    "list",
                                                    "string"
                                                  ]
                                                }
                                              ]
                                            ],
                                            "matchLabels": [
                                              "map",
                                              "string"
                                            ]
                                          }
                                        ],
                                        "storageClassName": "string",
                                        "volumeMode": "string",
                                        "volumeName": "string"
                                      }
                                    ],
                                    "status": [
                                      "object",
                                      {
                                        "accessModes": [
                                          "list",
                                          "string"
                                        ],
                                        "allocatedResources": [
                                          "map",
                                          "string"
                                        ],
                                        "capacity": [
                                          "map",
                                          "string"
                                        ],
                                        "conditions": [
                                          "list",
                                          [
                                            "object",
                                            {
                                              "lastProbeTime": "string",
                                              "lastTransitionTime": "string",
                                              "message": "string",
                                              "reason": "string",
                                              "status": "string",
                                              "type": "string"
                                            }
                                          ]
                                        ],
                                        "phase": "string",
                                        "resizeStatus": "string"
                                      }
                                    ]
                                  }
                                ]
                              ]
                            }
                          ],
                          [
                            "object",
                            {
                              "config": [
                                "object",
                                {
                                  "node.attr.zone": "string",
                                  "node.roles": "string",
                                  "node.store.allow_mmap": "bool",
                                  "xpack.security.authc.realms": [
                                    "object",
                                    {
                                      "saml": [
                                        "object",
                                        {
                                          "saml1": [
                                            "object",
                                            {
                                              "attributes.principal": "string",
                                              "idp.entity_id": "string",
                                              "idp.metadata.path": "string",
                                              "order": "number",
                                              "sp.acs": "string",
                                              "sp.entity_id": "string",
                                              "sp.logout": "string"
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ],
                              "count": "number",
                              "name": "string",
                              "podTemplate": [
                                "object",
                                {
                                  "spec": [
                                    "object",
                                    {
                                      "affinity": [
                                        "object",
                                        {
                                          "nodeAffinity": [
                                            "object",
                                            {
                                              "requiredDuringSchedulingIgnoredDuringExecution": [
                                                "object",
                                                {
                                                  "nodeSelectorTerms": [
                                                    "tuple",
                                                    [
                                                      [
                                                        "object",
                                                        {
                                                          "matchExpressions": [
                                                            "tuple",
                                                            [
                                                              [
                                                                "object",
                                                                {
                                                                  "key": "string",
                                                                  "operator": "string",
                                                                  "values": [
                                                                    "tuple",
                                                                    [
                                                                      "string"
                                                                    ]
                                                                  ]
                                                                }
                                                              ]
                                                            ]
                                                          ]
                                                        }
                                                      ]
                                                    ]
                                                  ]
                                                }
                                              ]
                                            }
                                          ]
                                        }
                                      ],
                                      "containers": [
                                        "tuple",
                                        [
                                          [
                                            "object",
                                            {
                                              "env": [
                                                "tuple",
                                                [
                                                  [
                                                    "object",
                                                    {
                                                      "name": "string",
                                                      "value": "string"
                                                    }
                                                  ]
                                                ]
                                              ],
                                              "name": "string",
                                              "readinessProbe": [
                                                "object",
                                                {
                                                  "exec": [
                                                    "object",
                                                    {
                                                      "command": [
                                                        "tuple",
                                                        [
                                                          "string",
                                                          "string",
                                                          "string"
                                                        ]
                                                      ]
                                                    }
                                                  ],
                                                  "failureThreshold": "number",
                                                  "initialDelaySeconds": "number",
                                                  "periodSeconds": "number",
                                                  "successThreshold": "number",
                                                  "timeoutSeconds": "number"
                                                }
                                              ],
                                              "resources": [
                                                "object",
                                                {
                                                  "limits": [
                                                    "object",
                                                    {
                                                      "memory": "string"
                                                    }
                                                  ],
                                                  "requests": [
                                                    "object",
                                                    {
                                                      "cpu": "number",
                                                      "memory": "string"
                                                    }
                                                  ]
                                                }
                                              ]
                                            }
                                          ]
                                        ]
                                      ],
                                      "nodeSelector": [
                                        "object",
                                        {
                                          "type": "string"
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ],
                              "volumeClaimTemplates": [
                                "list",
                                [
                                  "object",
                                  {
                                    "apiVersion": "string",
                                    "kind": "string",
                                    "metadata": [
                                      "object",
                                      {
                                        "annotations": [
                                          "map",
                                          "string"
                                        ],
                                        "finalizers": [
                                          "list",
                                          "string"
                                        ],
                                        "labels": [
                                          "map",
                                          "string"
                                        ],
                                        "name": "string",
                                        "namespace": "string"
                                      }
                                    ],
                                    "spec": [
                                      "object",
                                      {
                                        "accessModes": [
                                          "list",
                                          "string"
                                        ],
                                        "dataSource": [
                                          "object",
                                          {
                                            "apiGroup": "string",
                                            "kind": "string",
                                            "name": "string"
                                          }
                                        ],
                                        "dataSourceRef": [
                                          "object",
                                          {
                                            "apiGroup": "string",
                                            "kind": "string",
                                            "name": "string"
                                          }
                                        ],
                                        "resources": [
                                          "object",
                                          {
                                            "limits": [
                                              "map",
                                              "string"
                                            ],
                                            "requests": [
                                              "map",
                                              "string"
                                            ]
                                          }
                                        ],
                                        "selector": [
                                          "object",
                                          {
                                            "matchExpressions": [
                                              "list",
                                              [
                                                "object",
                                                {
                                                  "key": "string",
                                                  "operator": "string",
                                                  "values": [
                                                    "list",
                                                    "string"
                                                  ]
                                                }
                                              ]
                                            ],
                                            "matchLabels": [
                                              "map",
                                              "string"
                                            ]
                                          }
                                        ],
                                        "storageClassName": "string",
                                        "volumeMode": "string",
                                        "volumeName": "string"
                                      }
                                    ],
                                    "status": [
                                      "object",
                                      {
                                        "accessModes": [
                                          "list",
                                          "string"
                                        ],
                                        "allocatedResources": [
                                          "map",
                                          "string"
                                        ],
                                        "capacity": [
                                          "map",
                                          "string"
                                        ],
                                        "conditions": [
                                          "list",
                                          [
                                            "object",
                                            {
                                              "lastProbeTime": "string",
                                              "lastTransitionTime": "string",
                                              "message": "string",
                                              "reason": "string",
                                              "status": "string",
                                              "type": "string"
                                            }
                                          ]
                                        ],
                                        "phase": "string",
                                        "resizeStatus": "string"
                                      }
                                    ]
                                  }
                                ]
                              ]
                            }
                          ],
                          [
                            "object",
                            {
                              "config": [
                                "object",
                                {
                                  "node.attr.zone": "string",
                                  "node.roles": "string",
                                  "node.store.allow_mmap": "bool",
                                  "xpack.security.authc.realms": [
                                    "object",
                                    {
                                      "saml": [
                                        "object",
                                        {
                                          "saml1": [
                                            "object",
                                            {
                                              "attributes.principal": "string",
                                              "idp.entity_id": "string",
                                              "idp.metadata.path": "string",
                                              "order": "number",
                                              "sp.acs": "string",
                                              "sp.entity_id": "string",
                                              "sp.logout": "string"
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ],
                              "count": "number",
                              "name": "string",
                              "podTemplate": [
                                "object",
                                {
                                  "spec": [
                                    "object",
                                    {
                                      "affinity": [
                                        "object",
                                        {
                                          "nodeAffinity": [
                                            "object",
                                            {
                                              "requiredDuringSchedulingIgnoredDuringExecution": [
                                                "object",
                                                {
                                                  "nodeSelectorTerms": [
                                                    "tuple",
                                                    [
                                                      [
                                                        "object",
                                                        {
                                                          "matchExpressions": [
                                                            "tuple",
                                                            [
                                                              [
                                                                "object",
                                                                {
                                                                  "key": "string",
                                                                  "operator": "string",
                                                                  "values": [
                                                                    "tuple",
                                                                    [
                                                                      "string"
                                                                    ]
                                                                  ]
                                                                }
                                                              ]
                                                            ]
                                                          ]
                                                        }
                                                      ]
                                                    ]
                                                  ]
                                                }
                                              ]
                                            }
                                          ]
                                        }
                                      ],
                                      "containers": [
                                        "tuple",
                                        [
                                          [
                                            "object",
                                            {
                                              "env": [
                                                "tuple",
                                                [
                                                  [
                                                    "object",
                                                    {
                                                      "name": "string",
                                                      "value": "string"
                                                    }
                                                  ]
                                                ]
                                              ],
                                              "name": "string",
                                              "readinessProbe": [
                                                "object",
                                                {
                                                  "exec": [
                                                    "object",
                                                    {
                                                      "command": [
                                                        "tuple",
                                                        [
                                                          "string",
                                                          "string",
                                                          "string"
                                                        ]
                                                      ]
                                                    }
                                                  ],
                                                  "failureThreshold": "number",
                                                  "initialDelaySeconds": "number",
                                                  "periodSeconds": "number",
                                                  "successThreshold": "number",
                                                  "timeoutSeconds": "number"
                                                }
                                              ],
                                              "resources": [
                                                "object",
                                                {
                                                  "limits": [
                                                    "object",
                                                    {
                                                      "memory": "string"
                                                    }
                                                  ],
                                                  "requests": [
                                                    "object",
                                                    {
                                                      "cpu": "number",
                                                      "memory": "string"
                                                    }
                                                  ]
                                                }
                                              ]
                                            }
                                          ]
                                        ]
                                      ],
                                      "nodeSelector": [
                                        "object",
                                        {
                                          "type": "string"
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ],
                              "volumeClaimTemplates": [
                                "list",
                                [
                                  "object",
                                  {
                                    "apiVersion": "string",
                                    "kind": "string",
                                    "metadata": [
                                      "object",
                                      {
                                        "annotations": [
                                          "map",
                                          "string"
                                        ],
                                        "finalizers": [
                                          "list",
                                          "string"
                                        ],
                                        "labels": [
                                          "map",
                                          "string"
                                        ],
                                        "name": "string",
                                        "namespace": "string"
                                      }
                                    ],
                                    "spec": [
                                      "object",
                                      {
                                        "accessModes": [
                                          "list",
                                          "string"
                                        ],
                                        "dataSource": [
                                          "object",
                                          {
                                            "apiGroup": "string",
                                            "kind": "string",
                                            "name": "string"
                                          }
                                        ],
                                        "dataSourceRef": [
                                          "object",
                                          {
                                            "apiGroup": "string",
                                            "kind": "string",
                                            "name": "string"
                                          }
                                        ],
                                        "resources": [
                                          "object",
                                          {
                                            "limits": [
                                              "map",
                                              "string"
                                            ],
                                            "requests": [
                                              "map",
                                              "string"
                                            ]
                                          }
                                        ],
                                        "selector": [
                                          "object",
                                          {
                                            "matchExpressions": [
                                              "list",
                                              [
                                                "object",
                                                {
                                                  "key": "string",
                                                  "operator": "string",
                                                  "values": [
                                                    "list",
                                                    "string"
                                                  ]
                                                }
                                              ]
                                            ],
                                            "matchLabels": [
                                              "map",
                                              "string"
                                            ]
                                          }
                                        ],
                                        "storageClassName": "string",
                                        "volumeMode": "string",
                                        "volumeName": "string"
                                      }
                                    ],
                                    "status": [
                                      "object",
                                      {
                                        "accessModes": [
                                          "list",
                                          "string"
                                        ],
                                        "allocatedResources": [
                                          "map",
                                          "string"
                                        ],
                                        "capacity": [
                                          "map",
                                          "string"
                                        ],
                                        "conditions": [
                                          "list",
                                          [
                                            "object",
                                            {
                                              "lastProbeTime": "string",
                                              "lastTransitionTime": "string",
                                              "message": "string",
                                              "reason": "string",
                                              "status": "string",
                                              "type": "string"
                                            }
                                          ]
                                        ],
                                        "phase": "string",
                                        "resizeStatus": "string"
                                      }
                                    ]
                                  }
                                ]
                              ]
                            }
                          ],
                          [
                            "object",
                            {
                              "config": [
                                "object",
                                {
                                  "node.attr.zone": "string",
                                  "node.roles": "string",
                                  "node.store.allow_mmap": "bool",
                                  "xpack.security.authc.realms": [
                                    "object",
                                    {
                                      "saml": [
                                        "object",
                                        {
                                          "saml1": [
                                            "object",
                                            {
                                              "attributes.principal": "string",
                                              "idp.entity_id": "string",
                                              "idp.metadata.path": "string",
                                              "order": "number",
                                              "sp.acs": "string",
                                              "sp.entity_id": "string",
                                              "sp.logout": "string"
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ],
                              "count": "number",
                              "name": "string",
                              "podTemplate": [
                                "object",
                                {
                                  "spec": [
                                    "object",
                                    {
                                      "affinity": [
                                        "object",
                                        {
                                          "nodeAffinity": [
                                            "object",
                                            {
                                              "requiredDuringSchedulingIgnoredDuringExecution": [
                                                "object",
                                                {
                                                  "nodeSelectorTerms": [
                                                    "tuple",
                                                    [
                                                      [
                                                        "object",
                                                        {
                                                          "matchExpressions": [
                                                            "tuple",
                                                            [
                                                              [
                                                                "object",
                                                                {
                                                                  "key": "string",
                                                                  "operator": "string",
                                                                  "values": [
                                                                    "tuple",
                                                                    [
                                                                      "string"
                                                                    ]
                                                                  ]
                                                                }
                                                              ]
                                                            ]
                                                          ]
                                                        }
                                                      ]
                                                    ]
                                                  ]
                                                }
                                              ]
                                            }
                                          ]
                                        }
                                      ],
                                      "containers": [
                                        "tuple",
                                        [
                                          [
                                            "object",
                                            {
                                              "env": [
                                                "tuple",
                                                [
                                                  [
                                                    "object",
                                                    {
                                                      "name": "string",
                                                      "value": "string"
                                                    }
                                                  ]
                                                ]
                                              ],
                                              "name": "string",
                                              "readinessProbe": [
                                                "object",
                                                {
                                                  "exec": [
                                                    "object",
                                                    {
                                                      "command": [
                                                        "tuple",
                                                        [
                                                          "string",
                                                          "string",
                                                          "string"
                                                        ]
                                                      ]
                                                    }
                                                  ],
                                                  "failureThreshold": "number",
                                                  "initialDelaySeconds": "number",
                                                  "periodSeconds": "number",
                                                  "successThreshold": "number",
                                                  "timeoutSeconds": "number"
                                                }
                                              ],
                                              "resources": [
                                                "object",
                                                {
                                                  "limits": [
                                                    "object",
                                                    {
                                                      "memory": "string"
                                                    }
                                                  ],
                                                  "requests": [
                                                    "object",
                                                    {
                                                      "memory": "string"
                                                    }
                                                  ]
                                                }
                                              ]
                                            }
                                          ]
                                        ]
                                      ],
                                      "nodeSelector": [
                                        "object",
                                        {
                                          "type": "string"
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ],
                              "volumeClaimTemplates": [
                                "list",
                                [
                                  "object",
                                  {
                                    "apiVersion": "string",
                                    "kind": "string",
                                    "metadata": [
                                      "object",
                                      {
                                        "annotations": [
                                          "map",
                                          "string"
                                        ],
                                        "finalizers": [
                                          "list",
                                          "string"
                                        ],
                                        "labels": [
                                          "map",
                                          "string"
                                        ],
                                        "name": "string",
                                        "namespace": "string"
                                      }
                                    ],
                                    "spec": [
                                      "object",
                                      {
                                        "accessModes": [
                                          "list",
                                          "string"
                                        ],
                                        "dataSource": [
                                          "object",
                                          {
                                            "apiGroup": "string",
                                            "kind": "string",
                                            "name": "string"
                                          }
                                        ],
                                        "dataSourceRef": [
                                          "object",
                                          {
                                            "apiGroup": "string",
                                            "kind": "string",
                                            "name": "string"
                                          }
                                        ],
                                        "resources": [
                                          "object",
                                          {
                                            "limits": [
                                              "map",
                                              "string"
                                            ],
                                            "requests": [
                                              "map",
                                              "string"
                                            ]
                                          }
                                        ],
                                        "selector": [
                                          "object",
                                          {
                                            "matchExpressions": [
                                              "list",
                                              [
                                                "object",
                                                {
                                                  "key": "string",
                                                  "operator": "string",
                                                  "values": [
                                                    "list",
                                                    "string"
                                                  ]
                                                }
                                              ]
                                            ],
                                            "matchLabels": [
                                              "map",
                                              "string"
                                            ]
                                          }
                                        ],
                                        "storageClassName": "string",
                                        "volumeMode": "string",
                                        "volumeName": "string"
                                      }
                                    ],
                                    "status": [
                                      "object",
                                      {
                                        "accessModes": [
                                          "list",
                                          "string"
                                        ],
                                        "allocatedResources": [
                                          "map",
                                          "string"
                                        ],
                                        "capacity": [
                                          "map",
                                          "string"
                                        ],
                                        "conditions": [
                                          "list",
                                          [
                                            "object",
                                            {
                                              "lastProbeTime": "string",
                                              "lastTransitionTime": "string",
                                              "message": "string",
                                              "reason": "string",
                                              "status": "string",
                                              "type": "string"
                                            }
                                          ]
                                        ],
                                        "phase": "string",
                                        "resizeStatus": "string"
                                      }
                                    ]
                                  }
                                ]
                              ]
                            }
                          ],
                          [
                            "object",
                            {
                              "config": [
                                "object",
                                {
                                  "node.attr.zone": "string",
                                  "node.roles": "string",
                                  "node.store.allow_mmap": "bool",
                                  "xpack.security.authc.realms": [
                                    "object",
                                    {
                                      "saml": [
                                        "object",
                                        {
                                          "saml1": [
                                            "object",
                                            {
                                              "attributes.principal": "string",
                                              "idp.entity_id": "string",
                                              "idp.metadata.path": "string",
                                              "order": "number",
                                              "sp.acs": "string",
                                              "sp.entity_id": "string",
                                              "sp.logout": "string"
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ],
                              "count": "number",
                              "name": "string",
                              "podTemplate": [
                                "object",
                                {
                                  "spec": [
                                    "object",
                                    {
                                      "affinity": [
                                        "object",
                                        {
                                          "nodeAffinity": [
                                            "object",
                                            {
                                              "requiredDuringSchedulingIgnoredDuringExecution": [
                                                "object",
                                                {
                                                  "nodeSelectorTerms": [
                                                    "tuple",
                                                    [
                                                      [
                                                        "object",
                                                        {
                                                          "matchExpressions": [
                                                            "tuple",
                                                            [
                                                              [
                                                                "object",
                                                                {
                                                                  "key": "string",
                                                                  "operator": "string",
                                                                  "values": [
                                                                    "tuple",
                                                                    [
                                                                      "string"
                                                                    ]
                                                                  ]
                                                                }
                                                              ]
                                                            ]
                                                          ]
                                                        }
                                                      ]
                                                    ]
                                                  ]
                                                }
                                              ]
                                            }
                                          ]
                                        }
                                      ],
                                      "containers": [
                                        "tuple",
                                        [
                                          [
                                            "object",
                                            {
                                              "env": [
                                                "tuple",
                                                [
                                                  [
                                                    "object",
                                                    {
                                                      "name": "string",
                                                      "value": "string"
                                                    }
                                                  ]
                                                ]
                                              ],
                                              "name": "string",
                                              "readinessProbe": [
                                                "object",
                                                {
                                                  "exec": [
                                                    "object",
                                                    {
                                                      "command": [
                                                        "tuple",
                                                        [
                                                          "string",
                                                          "string",
                                                          "string"
                                                        ]
                                                      ]
                                                    }
                                                  ],
                                                  "failureThreshold": "number",
                                                  "initialDelaySeconds": "number",
                                                  "periodSeconds": "number",
                                                  "successThreshold": "number",
                                                  "timeoutSeconds": "number"
                                                }
                                              ],
                                              "resources": [
                                                "object",
                                                {
                                                  "limits": [
                                                    "object",
                                                    {
                                                      "memory": "string"
                                                    }
                                                  ],
                                                  "requests": [
                                                    "object",
                                                    {
                                                      "memory": "string"
                                                    }
                                                  ]
                                                }
                                              ]
                                            }
                                          ]
                                        ]
                                      ],
                                      "nodeSelector": [
                                        "object",
                                        {
                                          "type": "string"
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ],
                              "volumeClaimTemplates": [
                                "list",
                                [
                                  "object",
                                  {
                                    "apiVersion": "string",
                                    "kind": "string",
                                    "metadata": [
                                      "object",
                                      {
                                        "annotations": [
                                          "map",
                                          "string"
                                        ],
                                        "finalizers": [
                                          "list",
                                          "string"
                                        ],
                                        "labels": [
                                          "map",
                                          "string"
                                        ],
                                        "name": "string",
                                        "namespace": "string"
                                      }
                                    ],
                                    "spec": [
                                      "object",
                                      {
                                        "accessModes": [
                                          "list",
                                          "string"
                                        ],
                                        "dataSource": [
                                          "object",
                                          {
                                            "apiGroup": "string",
                                            "kind": "string",
                                            "name": "string"
                                          }
                                        ],
                                        "dataSourceRef": [
                                          "object",
                                          {
                                            "apiGroup": "string",
                                            "kind": "string",
                                            "name": "string"
                                          }
                                        ],
                                        "resources": [
                                          "object",
                                          {
                                            "limits": [
                                              "map",
                                              "string"
                                            ],
                                            "requests": [
                                              "map",
                                              "string"
                                            ]
                                          }
                                        ],
                                        "selector": [
                                          "object",
                                          {
                                            "matchExpressions": [
                                              "list",
                                              [
                                                "object",
                                                {
                                                  "key": "string",
                                                  "operator": "string",
                                                  "values": [
                                                    "list",
                                                    "string"
                                                  ]
                                                }
                                              ]
                                            ],
                                            "matchLabels": [
                                              "map",
                                              "string"
                                            ]
                                          }
                                        ],
                                        "storageClassName": "string",
                                        "volumeMode": "string",
                                        "volumeName": "string"
                                      }
                                    ],
                                    "status": [
                                      "object",
                                      {
                                        "accessModes": [
                                          "list",
                                          "string"
                                        ],
                                        "allocatedResources": [
                                          "map",
                                          "string"
                                        ],
                                        "capacity": [
                                          "map",
                                          "string"
                                        ],
                                        "conditions": [
                                          "list",
                                          [
                                            "object",
                                            {
                                              "lastProbeTime": "string",
                                              "lastTransitionTime": "string",
                                              "message": "string",
                                              "reason": "string",
                                              "status": "string",
                                              "type": "string"
                                            }
                                          ]
                                        ],
                                        "phase": "string",
                                        "resizeStatus": "string"
                                      }
                                    ]
                                  }
                                ]
                              ]
                            }
                          ],
                          [
                            "object",
                            {
                              "config": [
                                "object",
                                {
                                  "node.attr.zone": "string",
                                  "node.roles": "string",
                                  "node.store.allow_mmap": "bool",
                                  "xpack.security.authc.realms": [
                                    "object",
                                    {
                                      "saml": [
                                        "object",
                                        {
                                          "saml1": [
                                            "object",
                                            {
                                              "attributes.principal": "string",
                                              "idp.entity_id": "string",
                                              "idp.metadata.path": "string",
                                              "order": "number",
                                              "sp.acs": "string",
                                              "sp.entity_id": "string",
                                              "sp.logout": "string"
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ],
                              "count": "number",
                              "name": "string",
                              "podTemplate": [
                                "object",
                                {
                                  "spec": [
                                    "object",
                                    {
                                      "affinity": [
                                        "object",
                                        {
                                          "nodeAffinity": [
                                            "object",
                                            {
                                              "requiredDuringSchedulingIgnoredDuringExecution": [
                                                "object",
                                                {
                                                  "nodeSelectorTerms": [
                                                    "tuple",
                                                    [
                                                      [
                                                        "object",
                                                        {
                                                          "matchExpressions": [
                                                            "tuple",
                                                            [
                                                              [
                                                                "object",
                                                                {
                                                                  "key": "string",
                                                                  "operator": "string",
                                                                  "values": [
                                                                    "tuple",
                                                                    [
                                                                      "string"
                                                                    ]
                                                                  ]
                                                                }
                                                              ]
                                                            ]
                                                          ]
                                                        }
                                                      ]
                                                    ]
                                                  ]
                                                }
                                              ]
                                            }
                                          ]
                                        }
                                      ],
                                      "containers": [
                                        "tuple",
                                        [
                                          [
                                            "object",
                                            {
                                              "env": [
                                                "tuple",
                                                [
                                                  [
                                                    "object",
                                                    {
                                                      "name": "string",
                                                      "value": "string"
                                                    }
                                                  ]
                                                ]
                                              ],
                                              "name": "string",
                                              "readinessProbe": [
                                                "object",
                                                {
                                                  "exec": [
                                                    "object",
                                                    {
                                                      "command": [
                                                        "tuple",
                                                        [
                                                          "string",
                                                          "string",
                                                          "string"
                                                        ]
                                                      ]
                                                    }
                                                  ],
                                                  "failureThreshold": "number",
                                                  "initialDelaySeconds": "number",
                                                  "periodSeconds": "number",
                                                  "successThreshold": "number",
                                                  "timeoutSeconds": "number"
                                                }
                                              ],
                                              "resources": [
                                                "object",
                                                {
                                                  "limits": [
                                                    "object",
                                                    {
                                                      "memory": "string"
                                                    }
                                                  ],
                                                  "requests": [
                                                    "object",
                                                    {
                                                      "memory": "string"
                                                    }
                                                  ]
                                                }
                                              ]
                                            }
                                          ]
                                        ]
                                      ],
                                      "nodeSelector": [
                                        "object",
                                        {
                                          "type": "string"
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ],
                              "volumeClaimTemplates": [
                                "list",
                                [
                                  "object",
                                  {
                                    "apiVersion": "string",
                                    "kind": "string",
                                    "metadata": [
                                      "object",
                                      {
                                        "annotations": [
                                          "map",
                                          "string"
                                        ],
                                        "finalizers": [
                                          "list",
                                          "string"
                                        ],
                                        "labels": [
                                          "map",
                                          "string"
                                        ],
                                        "name": "string",
                                        "namespace": "string"
                                      }
                                    ],
                                    "spec": [
                                      "object",
                                      {
                                        "accessModes": [
                                          "list",
                                          "string"
                                        ],
                                        "dataSource": [
                                          "object",
                                          {
                                            "apiGroup": "string",
                                            "kind": "string",
                                            "name": "string"
                                          }
                                        ],
                                        "dataSourceRef": [
                                          "object",
                                          {
                                            "apiGroup": "string",
                                            "kind": "string",
                                            "name": "string"
                                          }
                                        ],
                                        "resources": [
                                          "object",
                                          {
                                            "limits": [
                                              "map",
                                              "string"
                                            ],
                                            "requests": [
                                              "map",
                                              "string"
                                            ]
                                          }
                                        ],
                                        "selector": [
                                          "object",
                                          {
                                            "matchExpressions": [
                                              "list",
                                              [
                                                "object",
                                                {
                                                  "key": "string",
                                                  "operator": "string",
                                                  "values": [
                                                    "list",
                                                    "string"
                                                  ]
                                                }
                                              ]
                                            ],
                                            "matchLabels": [
                                              "map",
                                              "string"
                                            ]
                                          }
                                        ],
                                        "storageClassName": "string",
                                        "volumeMode": "string",
                                        "volumeName": "string"
                                      }
                                    ],
                                    "status": [
                                      "object",
                                      {
                                        "accessModes": [
                                          "list",
                                          "string"
                                        ],
                                        "allocatedResources": [
                                          "map",
                                          "string"
                                        ],
                                        "capacity": [
                                          "map",
                                          "string"
                                        ],
                                        "conditions": [
                                          "list",
                                          [
                                            "object",
                                            {
                                              "lastProbeTime": "string",
                                              "lastTransitionTime": "string",
                                              "message": "string",
                                              "reason": "string",
                                              "status": "string",
                                              "type": "string"
                                            }
                                          ]
                                        ],
                                        "phase": "string",
                                        "resizeStatus": "string"
                                      }
                                    ]
                                  }
                                ]
                              ]
                            }
                          ],
                          [
                            "object",
                            {
                              "config": [
                                "object",
                                {
                                  "node.attr.zone": "string",
                                  "node.roles": "string",
                                  "node.store.allow_mmap": "bool",
                                  "xpack.security.authc.realms": [
                                    "object",
                                    {
                                      "saml": [
                                        "object",
                                        {
                                          "saml1": [
                                            "object",
                                            {
                                              "attributes.principal": "string",
                                              "idp.entity_id": "string",
                                              "idp.metadata.path": "string",
                                              "order": "number",
                                              "sp.acs": "string",
                                              "sp.entity_id": "string",
                                              "sp.logout": "string"
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ],
                              "count": "number",
                              "name": "string",
                              "podTemplate": [
                                "object",
                                {
                                  "spec": [
                                    "object",
                                    {
                                      "affinity": [
                                        "object",
                                        {
                                          "nodeAffinity": [
                                            "object",
                                            {
                                              "requiredDuringSchedulingIgnoredDuringExecution": [
                                                "object",
                                                {
                                                  "nodeSelectorTerms": [
                                                    "tuple",
                                                    [
                                                      [
                                                        "object",
                                                        {
                                                          "matchExpressions": [
                                                            "tuple",
                                                            [
                                                              [
                                                                "object",
                                                                {
                                                                  "key": "string",
                                                                  "operator": "string",
                                                                  "values": [
                                                                    "tuple",
                                                                    [
                                                                      "string"
                                                                    ]
                                                                  ]
                                                                }
                                                              ]
                                                            ]
                                                          ]
                                                        }
                                                      ]
                                                    ]
                                                  ]
                                                }
                                              ]
                                            }
                                          ]
                                        }
                                      ],
                                      "containers": [
                                        "tuple",
                                        [
                                          [
                                            "object",
                                            {
                                              "env": [
                                                "tuple",
                                                [
                                                  [
                                                    "object",
                                                    {
                                                      "name": "string",
                                                      "value": "string"
                                                    }
                                                  ]
                                                ]
                                              ],
                                              "name": "string",
                                              "readinessProbe": [
                                                "object",
                                                {
                                                  "exec": [
                                                    "object",
                                                    {
                                                      "command": [
                                                        "tuple",
                                                        [
                                                          "string",
                                                          "string",
                                                          "string"
                                                        ]
                                                      ]
                                                    }
                                                  ],
                                                  "failureThreshold": "number",
                                                  "initialDelaySeconds": "number",
                                                  "periodSeconds": "number",
                                                  "successThreshold": "number",
                                                  "timeoutSeconds": "number"
                                                }
                                              ],
                                              "resources": [
                                                "object",
                                                {
                                                  "limits": [
                                                    "object",
                                                    {
                                                      "memory": "string"
                                                    }
                                                  ],
                                                  "requests": [
                                                    "object",
                                                    {
                                                      "cpu": "number",
                                                      "memory": "string"
                                                    }
                                                  ]
                                                }
                                              ]
                                            }
                                          ]
                                        ]
                                      ],
                                      "nodeSelector": [
                                        "object",
                                        {
                                          "type": "string"
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ],
                              "volumeClaimTemplates": [
                                "list",
                                [
                                  "object",
                                  {
                                    "apiVersion": "string",
                                    "kind": "string",
                                    "metadata": [
                                      "object",
                                      {
                                        "annotations": [
                                          "map",
                                          "string"
                                        ],
                                        "finalizers": [
                                          "list",
                                          "string"
                                        ],
                                        "labels": [
                                          "map",
                                          "string"
                                        ],
                                        "name": "string",
                                        "namespace": "string"
                                      }
                                    ],
                                    "spec": [
                                      "object",
                                      {
                                        "accessModes": [
                                          "list",
                                          "string"
                                        ],
                                        "dataSource": [
                                          "object",
                                          {
                                            "apiGroup": "string",
                                            "kind": "string",
                                            "name": "string"
                                          }
                                        ],
                                        "dataSourceRef": [
                                          "object",
                                          {
                                            "apiGroup": "string",
                                            "kind": "string",
                                            "name": "string"
                                          }
                                        ],
                                        "resources": [
                                          "object",
                                          {
                                            "limits": [
                                              "map",
                                              "string"
                                            ],
                                            "requests": [
                                              "map",
                                              "string"
                                            ]
                                          }
                                        ],
                                        "selector": [
                                          "object",
                                          {
                                            "matchExpressions": [
                                              "list",
                                              [
                                                "object",
                                                {
                                                  "key": "string",
                                                  "operator": "string",
                                                  "values": [
                                                    "list",
                                                    "string"
                                                  ]
                                                }
                                              ]
                                            ],
                                            "matchLabels": [
                                              "map",
                                              "string"
                                            ]
                                          }
                                        ],
                                        "storageClassName": "string",
                                        "volumeMode": "string",
                                        "volumeName": "string"
                                      }
                                    ],
                                    "status": [
                                      "object",
                                      {
                                        "accessModes": [
                                          "list",
                                          "string"
                                        ],
                                        "allocatedResources": [
                                          "map",
                                          "string"
                                        ],
                                        "capacity": [
                                          "map",
                                          "string"
                                        ],
                                        "conditions": [
                                          "list",
                                          [
                                            "object",
                                            {
                                              "lastProbeTime": "string",
                                              "lastTransitionTime": "string",
                                              "message": "string",
                                              "reason": "string",
                                              "status": "string",
                                              "type": "string"
                                            }
                                          ]
                                        ],
                                        "phase": "string",
                                        "resizeStatus": "string"
                                      }
                                    ]
                                  }
                                ]
                              ]
                            }
                          ],
                          [
                            "object",
                            {
                              "config": [
                                "object",
                                {
                                  "node.attr.zone": "string",
                                  "node.roles": "string",
                                  "node.store.allow_mmap": "bool",
                                  "xpack.security.authc.realms": [
                                    "object",
                                    {
                                      "saml": [
                                        "object",
                                        {
                                          "saml1": [
                                            "object",
                                            {
                                              "attributes.principal": "string",
                                              "idp.entity_id": "string",
                                              "idp.metadata.path": "string",
                                              "order": "number",
                                              "sp.acs": "string",
                                              "sp.entity_id": "string",
                                              "sp.logout": "string"
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ],
                              "count": "number",
                              "name": "string",
                              "podTemplate": [
                                "object",
                                {
                                  "spec": [
                                    "object",
                                    {
                                      "affinity": [
                                        "object",
                                        {
                                          "nodeAffinity": [
                                            "object",
                                            {
                                              "requiredDuringSchedulingIgnoredDuringExecution": [
                                                "object",
                                                {
                                                  "nodeSelectorTerms": [
                                                    "tuple",
                                                    [
                                                      [
                                                        "object",
                                                        {
                                                          "matchExpressions": [
                                                            "tuple",
                                                            [
                                                              [
                                                                "object",
                                                                {
                                                                  "key": "string",
                                                                  "operator": "string",
                                                                  "values": [
                                                                    "tuple",
                                                                    [
                                                                      "string"
                                                                    ]
                                                                  ]
                                                                }
                                                              ]
                                                            ]
                                                          ]
                                                        }
                                                      ]
                                                    ]
                                                  ]
                                                }
                                              ]
                                            }
                                          ]
                                        }
                                      ],
                                      "containers": [
                                        "tuple",
                                        [
                                          [
                                            "object",
                                            {
                                              "env": [
                                                "tuple",
                                                [
                                                  [
                                                    "object",
                                                    {
                                                      "name": "string",
                                                      "value": "string"
                                                    }
                                                  ]
                                                ]
                                              ],
                                              "name": "string",
                                              "readinessProbe": [
                                                "object",
                                                {
                                                  "exec": [
                                                    "object",
                                                    {
                                                      "command": [
                                                        "tuple",
                                                        [
                                                          "string",
                                                          "string",
                                                          "string"
                                                        ]
                                                      ]
                                                    }
                                                  ],
                                                  "failureThreshold": "number",
                                                  "initialDelaySeconds": "number",
                                                  "periodSeconds": "number",
                                                  "successThreshold": "number",
                                                  "timeoutSeconds": "number"
                                                }
                                              ],
                                              "resources": [
                                                "object",
                                                {
                                                  "limits": [
                                                    "object",
                                                    {
                                                      "memory": "string"
                                                    }
                                                  ],
                                                  "requests": [
                                                    "object",
                                                    {
                                                      "cpu": "number",
                                                      "memory": "string"
                                                    }
                                                  ]
                                                }
                                              ]
                                            }
                                          ]
                                        ]
                                      ],
                                      "nodeSelector": [
                                        "object",
                                        {
                                          "type": "string"
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ],
                              "volumeClaimTemplates": [
                                "list",
                                [
                                  "object",
                                  {
                                    "apiVersion": "string",
                                    "kind": "string",
                                    "metadata": [
                                      "object",
                                      {
                                        "annotations": [
                                          "map",
                                          "string"
                                        ],
                                        "finalizers": [
                                          "list",
                                          "string"
                                        ],
                                        "labels": [
                                          "map",
                                          "string"
                                        ],
                                        "name": "string",
                                        "namespace": "string"
                                      }
                                    ],
                                    "spec": [
                                      "object",
                                      {
                                        "accessModes": [
                                          "list",
                                          "string"
                                        ],
                                        "dataSource": [
                                          "object",
                                          {
                                            "apiGroup": "string",
                                            "kind": "string",
                                            "name": "string"
                                          }
                                        ],
                                        "dataSourceRef": [
                                          "object",
                                          {
                                            "apiGroup": "string",
                                            "kind": "string",
                                            "name": "string"
                                          }
                                        ],
                                        "resources": [
                                          "object",
                                          {
                                            "limits": [
                                              "map",
                                              "string"
                                            ],
                                            "requests": [
                                              "map",
                                              "string"
                                            ]
                                          }
                                        ],
                                        "selector": [
                                          "object",
                                          {
                                            "matchExpressions": [
                                              "list",
                                              [
                                                "object",
                                                {
                                                  "key": "string",
                                                  "operator": "string",
                                                  "values": [
                                                    "list",
                                                    "string"
                                                  ]
                                                }
                                              ]
                                            ],
                                            "matchLabels": [
                                              "map",
                                              "string"
                                            ]
                                          }
                                        ],
                                        "storageClassName": "string",
                                        "volumeMode": "string",
                                        "volumeName": "string"
                                      }
                                    ],
                                    "status": [
                                      "object",
                                      {
                                        "accessModes": [
                                          "list",
                                          "string"
                                        ],
                                        "allocatedResources": [
                                          "map",
                                          "string"
                                        ],
                                        "capacity": [
                                          "map",
                                          "string"
                                        ],
                                        "conditions": [
                                          "list",
                                          [
                                            "object",
                                            {
                                              "lastProbeTime": "string",
                                              "lastTransitionTime": "string",
                                              "message": "string",
                                              "reason": "string",
                                              "status": "string",
                                              "type": "string"
                                            }
                                          ]
                                        ],
                                        "phase": "string",
                                        "resizeStatus": "string"
                                      }
                                    ]
                                  }
                                ]
                              ]
                            }
                          ],
                          [
                            "object",
                            {
                              "config": [
                                "object",
                                {
                                  "node.attr.zone": "string",
                                  "node.roles": "string",
                                  "node.store.allow_mmap": "bool",
                                  "xpack.security.authc.realms": [
                                    "object",
                                    {
                                      "saml": [
                                        "object",
                                        {
                                          "saml1": [
                                            "object",
                                            {
                                              "attributes.principal": "string",
                                              "idp.entity_id": "string",
                                              "idp.metadata.path": "string",
                                              "order": "number",
                                              "sp.acs": "string",
                                              "sp.entity_id": "string",
                                              "sp.logout": "string"
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ],
                              "count": "number",
                              "name": "string",
                              "podTemplate": [
                                "object",
                                {
                                  "spec": [
                                    "object",
                                    {
                                      "affinity": [
                                        "object",
                                        {
                                          "nodeAffinity": [
                                            "object",
                                            {
                                              "requiredDuringSchedulingIgnoredDuringExecution": [
                                                "object",
                                                {
                                                  "nodeSelectorTerms": [
                                                    "tuple",
                                                    [
                                                      [
                                                        "object",
                                                        {
                                                          "matchExpressions": [
                                                            "tuple",
                                                            [
                                                              [
                                                                "object",
                                                                {
                                                                  "key": "string",
                                                                  "operator": "string",
                                                                  "values": [
                                                                    "tuple",
                                                                    [
                                                                      "string"
                                                                    ]
                                                                  ]
                                                                }
                                                              ]
                                                            ]
                                                          ]
                                                        }
                                                      ]
                                                    ]
                                                  ]
                                                }
                                              ]
                                            }
                                          ]
                                        }
                                      ],
                                      "containers": [
                                        "tuple",
                                        [
                                          [
                                            "object",
                                            {
                                              "env": [
                                                "tuple",
                                                [
                                                  [
                                                    "object",
                                                    {
                                                      "name": "string",
                                                      "value": "string"
                                                    }
                                                  ]
                                                ]
                                              ],
                                              "name": "string",
                                              "readinessProbe": [
                                                "object",
                                                {
                                                  "exec": [
                                                    "object",
                                                    {
                                                      "command": [
                                                        "tuple",
                                                        [
                                                          "string",
                                                          "string",
                                                          "string"
                                                        ]
                                                      ]
                                                    }
                                                  ],
                                                  "failureThreshold": "number",
                                                  "initialDelaySeconds": "number",
                                                  "periodSeconds": "number",
                                                  "successThreshold": "number",
                                                  "timeoutSeconds": "number"
                                                }
                                              ],
                                              "resources": [
                                                "object",
                                                {
                                                  "limits": [
                                                    "object",
                                                    {
                                                      "memory": "string"
                                                    }
                                                  ],
                                                  "requests": [
                                                    "object",
                                                    {
                                                      "cpu": "number",
                                                      "memory": "string"
                                                    }
                                                  ]
                                                }
                                              ]
                                            }
                                          ]
                                        ]
                                      ],
                                      "nodeSelector": [
                                        "object",
                                        {
                                          "type": "string"
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ],
                              "volumeClaimTemplates": [
                                "list",
                                [
                                  "object",
                                  {
                                    "apiVersion": "string",
                                    "kind": "string",
                                    "metadata": [
                                      "object",
                                      {
                                        "annotations": [
                                          "map",
                                          "string"
                                        ],
                                        "finalizers": [
                                          "list",
                                          "string"
                                        ],
                                        "labels": [
                                          "map",
                                          "string"
                                        ],
                                        "name": "string",
                                        "namespace": "string"
                                      }
                                    ],
                                    "spec": [
                                      "object",
                                      {
                                        "accessModes": [
                                          "list",
                                          "string"
                                        ],
                                        "dataSource": [
                                          "object",
                                          {
                                            "apiGroup": "string",
                                            "kind": "string",
                                            "name": "string"
                                          }
                                        ],
                                        "dataSourceRef": [
                                          "object",
                                          {
                                            "apiGroup": "string",
                                            "kind": "string",
                                            "name": "string"
                                          }
                                        ],
                                        "resources": [
                                          "object",
                                          {
                                            "limits": [
                                              "map",
                                              "string"
                                            ],
                                            "requests": [
                                              "map",
                                              "string"
                                            ]
                                          }
                                        ],
                                        "selector": [
                                          "object",
                                          {
                                            "matchExpressions": [
                                              "list",
                                              [
                                                "object",
                                                {
                                                  "key": "string",
                                                  "operator": "string",
                                                  "values": [
                                                    "list",
                                                    "string"
                                                  ]
                                                }
                                              ]
                                            ],
                                            "matchLabels": [
                                              "map",
                                              "string"
                                            ]
                                          }
                                        ],
                                        "storageClassName": "string",
                                        "volumeMode": "string",
                                        "volumeName": "string"
                                      }
                                    ],
                                    "status": [
                                      "object",
                                      {
                                        "accessModes": [
                                          "list",
                                          "string"
                                        ],
                                        "allocatedResources": [
                                          "map",
                                          "string"
                                        ],
                                        "capacity": [
                                          "map",
                                          "string"
                                        ],
                                        "conditions": [
                                          "list",
                                          [
                                            "object",
                                            {
                                              "lastProbeTime": "string",
                                              "lastTransitionTime": "string",
                                              "message": "string",
                                              "reason": "string",
                                              "status": "string",
                                              "type": "string"
                                            }
                                          ]
                                        ],
                                        "phase": "string",
                                        "resizeStatus": "string"
                                      }
                                    ]
                                  }
                                ]
                              ]
                            }
                          ]
                        ]
                      ],
                      "podDisruptionBudget": [
                        "object",
                        {
                          "metadata": [
                            "object",
                            {
                              "annotations": [
                                "map",
                                "string"
                              ],
                              "finalizers": [
                                "list",
                                "string"
                              ],
                              "labels": [
                                "map",
                                "string"
                              ],
                              "name": "string",
                              "namespace": "string"
                            }
                          ],
                          "spec": [
                            "object",
                            {
                              "maxUnavailable": "string",
                              "minAvailable": "string",
                              "selector": [
                                "object",
                                {
                                  "matchExpressions": [
                                    "list",
                                    [
                                      "object",
                                      {
                                        "key": "string",
                                        "operator": "string",
                                        "values": [
                                          "list",
                                          "string"
                                        ]
                                      }
                                    ]
                                  ],
                                  "matchLabels": [
                                    "map",
                                    "string"
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ],
                      "remoteClusters": [
                        "list",
                        [
                          "object",
                          {
                            "elasticsearchRef": [
                              "object",
                              {
                                "name": "string",
                                "namespace": "string",
                                "serviceName": "string"
                              }
                            ],
                            "name": "string"
                          }
                        ]
                      ],
                      "secureSettings": [
                        "list",
                        [
                          "object",
                          {
                            "entries": [
                              "list",
                              [
                                "object",
                                {
                                  "key": "string",
                                  "path": "string"
                                }
                              ]
                            ],
                            "secretName": "string"
                          }
                        ]
                      ],
                      "serviceAccountName": "string",
                      "transport": [
                        "object",
                        {
                          "service": [
                            "object",
                            {
                              "metadata": [
                                "object",
                                {
                                  "annotations": [
                                    "map",
                                    "string"
                                  ],
                                  "finalizers": [
                                    "list",
                                    "string"
                                  ],
                                  "labels": [
                                    "map",
                                    "string"
                                  ],
                                  "name": "string",
                                  "namespace": "string"
                                }
                              ],
                              "spec": [
                                "object",
                                {
                                  "allocateLoadBalancerNodePorts": "bool",
                                  "clusterIP": "string",
                                  "clusterIPs": [
                                    "list",
                                    "string"
                                  ],
                                  "externalIPs": [
                                    "list",
                                    "string"
                                  ],
                                  "externalName": "string",
                                  "externalTrafficPolicy": "string",
                                  "healthCheckNodePort": "number",
                                  "internalTrafficPolicy": "string",
                                  "ipFamilies": [
                                    "list",
                                    "string"
                                  ],
                                  "ipFamilyPolicy": "string",
                                  "loadBalancerClass": "string",
                                  "loadBalancerIP": "string",
                                  "loadBalancerSourceRanges": [
                                    "list",
                                    "string"
                                  ],
                                  "ports": [
                                    "list",
                                    [
                                      "object",
                                      {
                                        "appProtocol": "string",
                                        "name": "string",
                                        "nodePort": "number",
                                        "port": "number",
                                        "protocol": "string",
                                        "targetPort": "string"
                                      }
                                    ]
                                  ],
                                  "publishNotReadyAddresses": "bool",
                                  "selector": [
                                    "map",
                                    "string"
                                  ],
                                  "sessionAffinity": "string",
                                  "sessionAffinityConfig": [
                                    "object",
                                    {
                                      "clientIP": [
                                        "object",
                                        {
                                          "timeoutSeconds": "number"
                                        }
                                      ]
                                    }
                                  ],
                                  "type": "string"
                                }
                              ]
                            }
                          ],
                          "tls": [
                            "object",
                            {
                              "certificate": [
                                "object",
                                {
                                  "secretName": "string"
                                }
                              ],
                              "otherNameSuffix": "string",
                              "subjectAltNames": [
                                "list",
                                [
                                  "object",
                                  {
                                    "dns": "string",
                                    "ip": "string"
                                  }
                                ]
                              ]
                            }
                          ]
                        }
                      ],
                      "updateStrategy": [
                        "object",
                        {
                          "changeBudget": [
                            "object",
                            {
                              "maxSurge": "number",
                              "maxUnavailable": "number"
                            }
                          ]
                        }
                      ],
                      "version": "string",
                      "volumeClaimDeletePolicy": "string"
                    }
                  ]
                }
              ]
            },
            "timeouts": [],
            "wait": [],
            "wait_for": null
          },
          "sensitive_attributes": []
        }
      ]
    },
    {
      "mode": "managed",
      "type": "kubernetes_manifest",
      "name": "elasticsearch_monitoring_monitoring",
      "provider": "provider[\"registry.terraform.io/hashicorp/kubernetes\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "computed_fields": null,
            "field_manager": [],
            "manifest": {
              "value": {
                "apiVersion": "elasticsearch.k8s.elastic.co/v1",
                "kind": "Elasticsearch",
                "metadata": {
                  "name": "monitoring",
                  "namespace": "monitoring"
                },
                "spec": {
                  "nodeSets": [
                    {
                      "config": {
                        "node.store.allow_mmap": false,
                        "xpack.security.authc.realms": {
                          "saml": {
                            "saml1": {
                              "attributes.principal": "nameid",
                              "idp.entity_id": "urn:framsouza.eu.auth0.com",
                              "idp.metadata.path": "https://framsouza.eu.auth0.com/samlp/metadata/nbNudmA4FTPI3kO6im0o5KPV3gugxxQI",
                              "order": 2,
                              "sp.acs": "https://monitoring.framsouza.co/api/security/v1/saml",
                              "sp.entity_id": "https://framsouza.co",
                              "sp.logout": "https://monitoring.framsouza.co/logout"
                            }
                          }
                        }
                      },
                      "count": 1,
                      "name": "es",
                      "volumeClaimTemplates": [
                        {
                          "metadata": {
                            "name": "elasticsearch-data"
                          },
                          "spec": {
                            "accessModes": [
                              "ReadWriteOnce"
                            ],
                            "resources": {
                              "requests": {
                                "storage": "100Gi"
                              }
                            },
                            "storageClassName": "standard"
                          }
                        }
                      ]
                    }
                  ],
                  "version": "8.0.0"
                }
              },
              "type": [
                "object",
                {
                  "apiVersion": "string",
                  "kind": "string",
                  "metadata": [
                    "object",
                    {
                      "name": "string",
                      "namespace": "string"
                    }
                  ],
                  "spec": [
                    "object",
                    {
                      "nodeSets": [
                        "tuple",
                        [
                          [
                            "object",
                            {
                              "config": [
                                "object",
                                {
                                  "node.store.allow_mmap": "bool",
                                  "xpack.security.authc.realms": [
                                    "object",
                                    {
                                      "saml": [
                                        "object",
                                        {
                                          "saml1": [
                                            "object",
                                            {
                                              "attributes.principal": "string",
                                              "idp.entity_id": "string",
                                              "idp.metadata.path": "string",
                                              "order": "number",
                                              "sp.acs": "string",
                                              "sp.entity_id": "string",
                                              "sp.logout": "string"
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ],
                              "count": "number",
                              "name": "string",
                              "volumeClaimTemplates": [
                                "tuple",
                                [
                                  [
                                    "object",
                                    {
                                      "metadata": [
                                        "object",
                                        {
                                          "name": "string"
                                        }
                                      ],
                                      "spec": [
                                        "object",
                                        {
                                          "accessModes": [
                                            "tuple",
                                            [
                                              "string"
                                            ]
                                          ],
                                          "resources": [
                                            "object",
                                            {
                                              "requests": [
                                                "object",
                                                {
                                                  "storage": "string"
                                                }
                                              ]
                                            }
                                          ],
                                          "storageClassName": "string"
                                        }
                                      ]
                                    }
                                  ]
                                ]
                              ]
                            }
                          ]
                        ]
                      ],
                      "version": "string"
                    }
                  ]
                }
              ]
            },
            "object": {
              "value": {
                "apiVersion": "elasticsearch.k8s.elastic.co/v1",
                "kind": "Elasticsearch",
                "metadata": {
                  "annotations": null,
                  "clusterName": null,
                  "creationTimestamp": null,
                  "deletionGracePeriodSeconds": null,
                  "deletionTimestamp": null,
                  "finalizers": null,
                  "generateName": null,
                  "generation": null,
                  "labels": null,
                  "managedFields": null,
                  "name": "monitoring",
                  "namespace": "monitoring",
                  "ownerReferences": null,
                  "resourceVersion": null,
                  "selfLink": null,
                  "uid": null
                },
                "spec": {
                  "auth": {
                    "fileRealm": null,
                    "roles": null
                  },
                  "http": {
                    "service": {
                      "metadata": {
                        "annotations": null,
                        "finalizers": null,
                        "labels": null,
                        "name": null,
                        "namespace": null
                      },
                      "spec": {
                        "allocateLoadBalancerNodePorts": null,
                        "clusterIP": null,
                        "clusterIPs": null,
                        "externalIPs": null,
                        "externalName": null,
                        "externalTrafficPolicy": null,
                        "healthCheckNodePort": null,
                        "internalTrafficPolicy": null,
                        "ipFamilies": null,
                        "ipFamilyPolicy": null,
                        "loadBalancerClass": null,
                        "loadBalancerIP": null,
                        "loadBalancerSourceRanges": null,
                        "ports": null,
                        "publishNotReadyAddresses": null,
                        "selector": null,
                        "sessionAffinity": null,
                        "sessionAffinityConfig": {
                          "clientIP": {
                            "timeoutSeconds": null
                          }
                        },
                        "type": null
                      }
                    },
                    "tls": {
                      "certificate": {
                        "secretName": null
                      },
                      "selfSignedCertificate": {
                        "disabled": null,
                        "subjectAltNames": null
                      }
                    }
                  },
                  "image": null,
                  "monitoring": {
                    "logs": {
                      "elasticsearchRefs": null
                    },
                    "metrics": {
                      "elasticsearchRefs": null
                    }
                  },
                  "nodeSets": [
                    {
                      "config": {
                        "node.store.allow_mmap": false,
                        "xpack.security.authc.realms": {
                          "saml": {
                            "saml1": {
                              "attributes.principal": "nameid",
                              "idp.entity_id": "urn:framsouza.eu.auth0.com",
                              "idp.metadata.path": "https://framsouza.eu.auth0.com/samlp/metadata/nbNudmA4FTPI3kO6im0o5KPV3gugxxQI",
                              "order": 2,
                              "sp.acs": "https://monitoring.framsouza.co/api/security/v1/saml",
                              "sp.entity_id": "https://framsouza.co",
                              "sp.logout": "https://monitoring.framsouza.co/logout"
                            }
                          }
                        }
                      },
                      "count": 1,
                      "name": "es",
                      "podTemplate": null,
                      "volumeClaimTemplates": [
                        {
                          "apiVersion": null,
                          "kind": null,
                          "metadata": {
                            "annotations": null,
                            "finalizers": null,
                            "labels": null,
                            "name": "elasticsearch-data",
                            "namespace": null
                          },
                          "spec": {
                            "accessModes": [
                              "ReadWriteOnce"
                            ],
                            "dataSource": {
                              "apiGroup": null,
                              "kind": null,
                              "name": null
                            },
                            "dataSourceRef": {
                              "apiGroup": null,
                              "kind": null,
                              "name": null
                            },
                            "resources": {
                              "limits": null,
                              "requests": {
                                "storage": "100Gi"
                              }
                            },
                            "selector": {
                              "matchExpressions": null,
                              "matchLabels": null
                            },
                            "storageClassName": "standard",
                            "volumeMode": null,
                            "volumeName": null
                          },
                          "status": {
                            "accessModes": null,
                            "allocatedResources": null,
                            "capacity": null,
                            "conditions": null,
                            "phase": null,
                            "resizeStatus": null
                          }
                        }
                      ]
                    }
                  ],
                  "podDisruptionBudget": {
                    "metadata": {
                      "annotations": null,
                      "finalizers": null,
                      "labels": null,
                      "name": null,
                      "namespace": null
                    },
                    "spec": {
                      "maxUnavailable": null,
                      "minAvailable": null,
                      "selector": {
                        "matchExpressions": null,
                        "matchLabels": null
                      }
                    }
                  },
                  "remoteClusters": null,
                  "secureSettings": null,
                  "serviceAccountName": null,
                  "transport": {
                    "service": {
                      "metadata": {
                        "annotations": null,
                        "finalizers": null,
                        "labels": null,
                        "name": null,
                        "namespace": null
                      },
                      "spec": {
                        "allocateLoadBalancerNodePorts": null,
                        "clusterIP": null,
                        "clusterIPs": null,
                        "externalIPs": null,
                        "externalName": null,
                        "externalTrafficPolicy": null,
                        "healthCheckNodePort": null,
                        "internalTrafficPolicy": null,
                        "ipFamilies": null,
                        "ipFamilyPolicy": null,
                        "loadBalancerClass": null,
                        "loadBalancerIP": null,
                        "loadBalancerSourceRanges": null,
                        "ports": null,
                        "publishNotReadyAddresses": null,
                        "selector": null,
                        "sessionAffinity": null,
                        "sessionAffinityConfig": {
                          "clientIP": {
                            "timeoutSeconds": null
                          }
                        },
                        "type": null
                      }
                    },
                    "tls": {
                      "certificate": {
                        "secretName": null
                      },
                      "otherNameSuffix": null,
                      "subjectAltNames": null
                    }
                  },
                  "updateStrategy": {
                    "changeBudget": {
                      "maxSurge": null,
                      "maxUnavailable": null
                    }
                  },
                  "version": "8.0.0",
                  "volumeClaimDeletePolicy": null
                }
              },
              "type": [
                "object",
                {
                  "apiVersion": "string",
                  "kind": "string",
                  "metadata": [
                    "object",
                    {
                      "annotations": [
                        "map",
                        "string"
                      ],
                      "clusterName": "string",
                      "creationTimestamp": "string",
                      "deletionGracePeriodSeconds": "number",
                      "deletionTimestamp": "string",
                      "finalizers": [
                        "list",
                        "string"
                      ],
                      "generateName": "string",
                      "generation": "number",
                      "labels": [
                        "map",
                        "string"
                      ],
                      "managedFields": [
                        "tuple",
                        [
                          [
                            "object",
                            {
                              "apiVersion": "string",
                              "fieldsType": "string",
                              "fieldsV1": "dynamic",
                              "manager": "string",
                              "operation": "string",
                              "time": "string"
                            }
                          ]
                        ]
                      ],
                      "name": "string",
                      "namespace": "string",
                      "ownerReferences": [
                        "list",
                        [
                          "object",
                          {
                            "apiVersion": "string",
                            "blockOwnerDeletion": "bool",
                            "controller": "bool",
                            "kind": "string",
                            "name": "string",
                            "uid": "string"
                          }
                        ]
                      ],
                      "resourceVersion": "string",
                      "selfLink": "string",
                      "uid": "string"
                    }
                  ],
                  "spec": [
                    "object",
                    {
                      "auth": [
                        "object",
                        {
                          "fileRealm": [
                            "list",
                            [
                              "object",
                              {
                                "secretName": "string"
                              }
                            ]
                          ],
                          "roles": [
                            "list",
                            [
                              "object",
                              {
                                "secretName": "string"
                              }
                            ]
                          ]
                        }
                      ],
                      "http": [
                        "object",
                        {
                          "service": [
                            "object",
                            {
                              "metadata": [
                                "object",
                                {
                                  "annotations": [
                                    "map",
                                    "string"
                                  ],
                                  "finalizers": [
                                    "list",
                                    "string"
                                  ],
                                  "labels": [
                                    "map",
                                    "string"
                                  ],
                                  "name": "string",
                                  "namespace": "string"
                                }
                              ],
                              "spec": [
                                "object",
                                {
                                  "allocateLoadBalancerNodePorts": "bool",
                                  "clusterIP": "string",
                                  "clusterIPs": [
                                    "list",
                                    "string"
                                  ],
                                  "externalIPs": [
                                    "list",
                                    "string"
                                  ],
                                  "externalName": "string",
                                  "externalTrafficPolicy": "string",
                                  "healthCheckNodePort": "number",
                                  "internalTrafficPolicy": "string",
                                  "ipFamilies": [
                                    "list",
                                    "string"
                                  ],
                                  "ipFamilyPolicy": "string",
                                  "loadBalancerClass": "string",
                                  "loadBalancerIP": "string",
                                  "loadBalancerSourceRanges": [
                                    "list",
                                    "string"
                                  ],
                                  "ports": [
                                    "list",
                                    [
                                      "object",
                                      {
                                        "appProtocol": "string",
                                        "name": "string",
                                        "nodePort": "number",
                                        "port": "number",
                                        "protocol": "string",
                                        "targetPort": "string"
                                      }
                                    ]
                                  ],
                                  "publishNotReadyAddresses": "bool",
                                  "selector": [
                                    "map",
                                    "string"
                                  ],
                                  "sessionAffinity": "string",
                                  "sessionAffinityConfig": [
                                    "object",
                                    {
                                      "clientIP": [
                                        "object",
                                        {
                                          "timeoutSeconds": "number"
                                        }
                                      ]
                                    }
                                  ],
                                  "type": "string"
                                }
                              ]
                            }
                          ],
                          "tls": [
                            "object",
                            {
                              "certificate": [
                                "object",
                                {
                                  "secretName": "string"
                                }
                              ],
                              "selfSignedCertificate": [
                                "object",
                                {
                                  "disabled": "bool",
                                  "subjectAltNames": [
                                    "list",
                                    [
                                      "object",
                                      {
                                        "dns": "string",
                                        "ip": "string"
                                      }
                                    ]
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ],
                      "image": "string",
                      "monitoring": [
                        "object",
                        {
                          "logs": [
                            "object",
                            {
                              "elasticsearchRefs": [
                                "list",
                                [
                                  "object",
                                  {
                                    "name": "string",
                                    "namespace": "string",
                                    "serviceName": "string"
                                  }
                                ]
                              ]
                            }
                          ],
                          "metrics": [
                            "object",
                            {
                              "elasticsearchRefs": [
                                "list",
                                [
                                  "object",
                                  {
                                    "name": "string",
                                    "namespace": "string",
                                    "serviceName": "string"
                                  }
                                ]
                              ]
                            }
                          ]
                        }
                      ],
                      "nodeSets": [
                        "tuple",
                        [
                          [
                            "object",
                            {
                              "config": [
                                "object",
                                {
                                  "node.store.allow_mmap": "bool",
                                  "xpack.security.authc.realms": [
                                    "object",
                                    {
                                      "saml": [
                                        "object",
                                        {
                                          "saml1": [
                                            "object",
                                            {
                                              "attributes.principal": "string",
                                              "idp.entity_id": "string",
                                              "idp.metadata.path": "string",
                                              "order": "number",
                                              "sp.acs": "string",
                                              "sp.entity_id": "string",
                                              "sp.logout": "string"
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ],
                              "count": "number",
                              "name": "string",
                              "podTemplate": "dynamic",
                              "volumeClaimTemplates": [
                                "list",
                                [
                                  "object",
                                  {
                                    "apiVersion": "string",
                                    "kind": "string",
                                    "metadata": [
                                      "object",
                                      {
                                        "annotations": [
                                          "map",
                                          "string"
                                        ],
                                        "finalizers": [
                                          "list",
                                          "string"
                                        ],
                                        "labels": [
                                          "map",
                                          "string"
                                        ],
                                        "name": "string",
                                        "namespace": "string"
                                      }
                                    ],
                                    "spec": [
                                      "object",
                                      {
                                        "accessModes": [
                                          "list",
                                          "string"
                                        ],
                                        "dataSource": [
                                          "object",
                                          {
                                            "apiGroup": "string",
                                            "kind": "string",
                                            "name": "string"
                                          }
                                        ],
                                        "dataSourceRef": [
                                          "object",
                                          {
                                            "apiGroup": "string",
                                            "kind": "string",
                                            "name": "string"
                                          }
                                        ],
                                        "resources": [
                                          "object",
                                          {
                                            "limits": [
                                              "map",
                                              "string"
                                            ],
                                            "requests": [
                                              "map",
                                              "string"
                                            ]
                                          }
                                        ],
                                        "selector": [
                                          "object",
                                          {
                                            "matchExpressions": [
                                              "list",
                                              [
                                                "object",
                                                {
                                                  "key": "string",
                                                  "operator": "string",
                                                  "values": [
                                                    "list",
                                                    "string"
                                                  ]
                                                }
                                              ]
                                            ],
                                            "matchLabels": [
                                              "map",
                                              "string"
                                            ]
                                          }
                                        ],
                                        "storageClassName": "string",
                                        "volumeMode": "string",
                                        "volumeName": "string"
                                      }
                                    ],
                                    "status": [
                                      "object",
                                      {
                                        "accessModes": [
                                          "list",
                                          "string"
                                        ],
                                        "allocatedResources": [
                                          "map",
                                          "string"
                                        ],
                                        "capacity": [
                                          "map",
                                          "string"
                                        ],
                                        "conditions": [
                                          "list",
                                          [
                                            "object",
                                            {
                                              "lastProbeTime": "string",
                                              "lastTransitionTime": "string",
                                              "message": "string",
                                              "reason": "string",
                                              "status": "string",
                                              "type": "string"
                                            }
                                          ]
                                        ],
                                        "phase": "string",
                                        "resizeStatus": "string"
                                      }
                                    ]
                                  }
                                ]
                              ]
                            }
                          ]
                        ]
                      ],
                      "podDisruptionBudget": [
                        "object",
                        {
                          "metadata": [
                            "object",
                            {
                              "annotations": [
                                "map",
                                "string"
                              ],
                              "finalizers": [
                                "list",
                                "string"
                              ],
                              "labels": [
                                "map",
                                "string"
                              ],
                              "name": "string",
                              "namespace": "string"
                            }
                          ],
                          "spec": [
                            "object",
                            {
                              "maxUnavailable": "string",
                              "minAvailable": "string",
                              "selector": [
                                "object",
                                {
                                  "matchExpressions": [
                                    "list",
                                    [
                                      "object",
                                      {
                                        "key": "string",
                                        "operator": "string",
                                        "values": [
                                          "list",
                                          "string"
                                        ]
                                      }
                                    ]
                                  ],
                                  "matchLabels": [
                                    "map",
                                    "string"
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ],
                      "remoteClusters": [
                        "list",
                        [
                          "object",
                          {
                            "elasticsearchRef": [
                              "object",
                              {
                                "name": "string",
                                "namespace": "string",
                                "serviceName": "string"
                              }
                            ],
                            "name": "string"
                          }
                        ]
                      ],
                      "secureSettings": [
                        "list",
                        [
                          "object",
                          {
                            "entries": [
                              "list",
                              [
                                "object",
                                {
                                  "key": "string",
                                  "path": "string"
                                }
                              ]
                            ],
                            "secretName": "string"
                          }
                        ]
                      ],
                      "serviceAccountName": "string",
                      "transport": [
                        "object",
                        {
                          "service": [
                            "object",
                            {
                              "metadata": [
                                "object",
                                {
                                  "annotations": [
                                    "map",
                                    "string"
                                  ],
                                  "finalizers": [
                                    "list",
                                    "string"
                                  ],
                                  "labels": [
                                    "map",
                                    "string"
                                  ],
                                  "name": "string",
                                  "namespace": "string"
                                }
                              ],
                              "spec": [
                                "object",
                                {
                                  "allocateLoadBalancerNodePorts": "bool",
                                  "clusterIP": "string",
                                  "clusterIPs": [
                                    "list",
                                    "string"
                                  ],
                                  "externalIPs": [
                                    "list",
                                    "string"
                                  ],
                                  "externalName": "string",
                                  "externalTrafficPolicy": "string",
                                  "healthCheckNodePort": "number",
                                  "internalTrafficPolicy": "string",
                                  "ipFamilies": [
                                    "list",
                                    "string"
                                  ],
                                  "ipFamilyPolicy": "string",
                                  "loadBalancerClass": "string",
                                  "loadBalancerIP": "string",
                                  "loadBalancerSourceRanges": [
                                    "list",
                                    "string"
                                  ],
                                  "ports": [
                                    "list",
                                    [
                                      "object",
                                      {
                                        "appProtocol": "string",
                                        "name": "string",
                                        "nodePort": "number",
                                        "port": "number",
                                        "protocol": "string",
                                        "targetPort": "string"
                                      }
                                    ]
                                  ],
                                  "publishNotReadyAddresses": "bool",
                                  "selector": [
                                    "map",
                                    "string"
                                  ],
                                  "sessionAffinity": "string",
                                  "sessionAffinityConfig": [
                                    "object",
                                    {
                                      "clientIP": [
                                        "object",
                                        {
                                          "timeoutSeconds": "number"
                                        }
                                      ]
                                    }
                                  ],
                                  "type": "string"
                                }
                              ]
                            }
                          ],
                          "tls": [
                            "object",
                            {
                              "certificate": [
                                "object",
                                {
                                  "secretName": "string"
                                }
                              ],
                              "otherNameSuffix": "string",
                              "subjectAltNames": [
                                "list",
                                [
                                  "object",
                                  {
                                    "dns": "string",
                                    "ip": "string"
                                  }
                                ]
                              ]
                            }
                          ]
                        }
                      ],
                      "updateStrategy": [
                        "object",
                        {
                          "changeBudget": [
                            "object",
                            {
                              "maxSurge": "number",
                              "maxUnavailable": "number"
                            }
                          ]
                        }
                      ],
                      "version": "string",
                      "volumeClaimDeletePolicy": "string"
                    }
                  ]
                }
              ]
            },
            "timeouts": [],
            "wait": [],
            "wait_for": null
          },
          "sensitive_attributes": []
        }
      ]
    },
    {
      "mode": "managed",
      "type": "kubernetes_manifest",
      "name": "ingress_kibana",
      "provider": "provider[\"registry.terraform.io/hashicorp/kubernetes\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "computed_fields": null,
            "field_manager": [],
            "manifest": {
              "value": {
                "apiVersion": "networking.k8s.io/v1",
                "kind": "Ingress",
                "metadata": {
                  "annotations": {
                    "cert-manager.io/cluster-issuer": "letsencrypt-production",
                    "nginx.ingress.kubernetes.io/backend-protocol": "HTTPS"
                  },
                  "name": "kibana",
                  "namespace": "default"
                },
                "spec": {
                  "ingressClassName": "nginx",
                  "rules": [
                    {
                      "host": "kibana.framsouza.co",
                      "http": {
                        "paths": [
                          {
                            "backend": {
                              "service": {
                                "name": "kibana-kb-http",
                                "port": {
                                  "number": 5601
                                }
                              }
                            },
                            "path": "/",
                            "pathType": "Prefix"
                          }
                        ]
                      }
                    }
                  ],
                  "tls": [
                    {
                      "hosts": [
                        "kibana.framsouza.co"
                      ],
                      "secretName": "letsencrypt-cert"
                    }
                  ]
                }
              },
              "type": [
                "object",
                {
                  "apiVersion": "string",
                  "kind": "string",
                  "metadata": [
                    "object",
                    {
                      "annotations": [
                        "object",
                        {
                          "cert-manager.io/cluster-issuer": "string",
                          "nginx.ingress.kubernetes.io/backend-protocol": "string"
                        }
                      ],
                      "name": "string",
                      "namespace": "string"
                    }
                  ],
                  "spec": [
                    "object",
                    {
                      "ingressClassName": "string",
                      "rules": [
                        "tuple",
                        [
                          [
                            "object",
                            {
                              "host": "string",
                              "http": [
                                "object",
                                {
                                  "paths": [
                                    "tuple",
                                    [
                                      [
                                        "object",
                                        {
                                          "backend": [
                                            "object",
                                            {
                                              "service": [
                                                "object",
                                                {
                                                  "name": "string",
                                                  "port": [
                                                    "object",
                                                    {
                                                      "number": "number"
                                                    }
                                                  ]
                                                }
                                              ]
                                            }
                                          ],
                                          "path": "string",
                                          "pathType": "string"
                                        }
                                      ]
                                    ]
                                  ]
                                }
                              ]
                            }
                          ]
                        ]
                      ],
                      "tls": [
                        "tuple",
                        [
                          [
                            "object",
                            {
                              "hosts": [
                                "tuple",
                                [
                                  "string"
                                ]
                              ],
                              "secretName": "string"
                            }
                          ]
                        ]
                      ]
                    }
                  ]
                }
              ]
            },
            "object": {
              "value": {
                "apiVersion": "networking.k8s.io/v1",
                "kind": "Ingress",
                "metadata": {
                  "annotations": {
                    "cert-manager.io/cluster-issuer": "letsencrypt-production",
                    "nginx.ingress.kubernetes.io/backend-protocol": "HTTPS"
                  },
                  "clusterName": null,
                  "creationTimestamp": null,
                  "deletionGracePeriodSeconds": null,
                  "deletionTimestamp": null,
                  "finalizers": null,
                  "generateName": null,
                  "generation": null,
                  "labels": null,
                  "managedFields": null,
                  "name": "kibana",
                  "namespace": "default",
                  "ownerReferences": null,
                  "resourceVersion": null,
                  "selfLink": null,
                  "uid": null
                },
                "spec": {
                  "defaultBackend": {
                    "resource": {
                      "apiGroup": null,
                      "kind": null,
                      "name": null
                    },
                    "service": {
                      "name": null,
                      "port": {
                        "name": null,
                        "number": null
                      }
                    }
                  },
                  "ingressClassName": "nginx",
                  "rules": [
                    {
                      "host": "kibana.framsouza.co",
                      "http": {
                        "paths": [
                          {
                            "backend": {
                              "resource": {
                                "apiGroup": null,
                                "kind": null,
                                "name": null
                              },
                              "service": {
                                "name": "kibana-kb-http",
                                "port": {
                                  "name": null,
                                  "number": 5601
                                }
                              }
                            },
                            "path": "/",
                            "pathType": "Prefix"
                          }
                        ]
                      }
                    }
                  ],
                  "tls": [
                    {
                      "hosts": [
                        "kibana.framsouza.co"
                      ],
                      "secretName": "letsencrypt-cert"
                    }
                  ]
                }
              },
              "type": [
                "object",
                {
                  "apiVersion": "string",
                  "kind": "string",
                  "metadata": [
                    "object",
                    {
                      "annotations": [
                        "map",
                        "string"
                      ],
                      "clusterName": "string",
                      "creationTimestamp": "string",
                      "deletionGracePeriodSeconds": "number",
                      "deletionTimestamp": "string",
                      "finalizers": [
                        "list",
                        "string"
                      ],
                      "generateName": "string",
                      "generation": "number",
                      "labels": [
                        "map",
                        "string"
                      ],
                      "managedFields": [
                        "tuple",
                        [
                          [
                            "object",
                            {
                              "apiVersion": "string",
                              "fieldsType": "string",
                              "fieldsV1": "dynamic",
                              "manager": "string",
                              "operation": "string",
                              "time": "string"
                            }
                          ]
                        ]
                      ],
                      "name": "string",
                      "namespace": "string",
                      "ownerReferences": [
                        "list",
                        [
                          "object",
                          {
                            "apiVersion": "string",
                            "blockOwnerDeletion": "bool",
                            "controller": "bool",
                            "kind": "string",
                            "name": "string",
                            "uid": "string"
                          }
                        ]
                      ],
                      "resourceVersion": "string",
                      "selfLink": "string",
                      "uid": "string"
                    }
                  ],
                  "spec": [
                    "object",
                    {
                      "defaultBackend": [
                        "object",
                        {
                          "resource": [
                            "object",
                            {
                              "apiGroup": "string",
                              "kind": "string",
                              "name": "string"
                            }
                          ],
                          "service": [
                            "object",
                            {
                              "name": "string",
                              "port": [
                                "object",
                                {
                                  "name": "string",
                                  "number": "number"
                                }
                              ]
                            }
                          ]
                        }
                      ],
                      "ingressClassName": "string",
                      "rules": [
                        "list",
                        [
                          "object",
                          {
                            "host": "string",
                            "http": [
                              "object",
                              {
                                "paths": [
                                  "list",
                                  [
                                    "object",
                                    {
                                      "backend": [
                                        "object",
                                        {
                                          "resource": [
                                            "object",
                                            {
                                              "apiGroup": "string",
                                              "kind": "string",
                                              "name": "string"
                                            }
                                          ],
                                          "service": [
                                            "object",
                                            {
                                              "name": "string",
                                              "port": [
                                                "object",
                                                {
                                                  "name": "string",
                                                  "number": "number"
                                                }
                                              ]
                                            }
                                          ]
                                        }
                                      ],
                                      "path": "string",
                                      "pathType": "string"
                                    }
                                  ]
                                ]
                              }
                            ]
                          }
                        ]
                      ],
                      "tls": [
                        "list",
                        [
                          "object",
                          {
                            "hosts": [
                              "list",
                              "string"
                            ],
                            "secretName": "string"
                          }
                        ]
                      ]
                    }
                  ]
                }
              ]
            },
            "timeouts": [],
            "wait": [],
            "wait_for": null
          },
          "sensitive_attributes": []
        }
      ]
    },
    {
      "mode": "managed",
      "type": "kubernetes_manifest",
      "name": "ingress_monitoring_monitoring",
      "provider": "provider[\"registry.terraform.io/hashicorp/kubernetes\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "computed_fields": null,
            "field_manager": [],
            "manifest": {
              "value": {
                "apiVersion": "networking.k8s.io/v1",
                "kind": "Ingress",
                "metadata": {
                  "annotations": {
                    "cert-manager.io/cluster-issuer": "letsencrypt-production",
                    "nginx.ingress.kubernetes.io/backend-protocol": "HTTPS"
                  },
                  "name": "monitoring",
                  "namespace": "monitoring"
                },
                "spec": {
                  "ingressClassName": "nginx",
                  "rules": [
                    {
                      "host": "monitoring.framsouza.co",
                      "http": {
                        "paths": [
                          {
                            "backend": {
                              "service": {
                                "name": "monitoring-kb-http",
                                "port": {
                                  "number": 5601
                                }
                              }
                            },
                            "path": "/",
                            "pathType": "Prefix"
                          }
                        ]
                      }
                    }
                  ],
                  "tls": [
                    {
                      "hosts": [
                        "monitoring.framsouza.co"
                      ],
                      "secretName": "letsencrypt-cert"
                    }
                  ]
                }
              },
              "type": [
                "object",
                {
                  "apiVersion": "string",
                  "kind": "string",
                  "metadata": [
                    "object",
                    {
                      "annotations": [
                        "object",
                        {
                          "cert-manager.io/cluster-issuer": "string",
                          "nginx.ingress.kubernetes.io/backend-protocol": "string"
                        }
                      ],
                      "name": "string",
                      "namespace": "string"
                    }
                  ],
                  "spec": [
                    "object",
                    {
                      "ingressClassName": "string",
                      "rules": [
                        "tuple",
                        [
                          [
                            "object",
                            {
                              "host": "string",
                              "http": [
                                "object",
                                {
                                  "paths": [
                                    "tuple",
                                    [
                                      [
                                        "object",
                                        {
                                          "backend": [
                                            "object",
                                            {
                                              "service": [
                                                "object",
                                                {
                                                  "name": "string",
                                                  "port": [
                                                    "object",
                                                    {
                                                      "number": "number"
                                                    }
                                                  ]
                                                }
                                              ]
                                            }
                                          ],
                                          "path": "string",
                                          "pathType": "string"
                                        }
                                      ]
                                    ]
                                  ]
                                }
                              ]
                            }
                          ]
                        ]
                      ],
                      "tls": [
                        "tuple",
                        [
                          [
                            "object",
                            {
                              "hosts": [
                                "tuple",
                                [
                                  "string"
                                ]
                              ],
                              "secretName": "string"
                            }
                          ]
                        ]
                      ]
                    }
                  ]
                }
              ]
            },
            "object": {
              "value": {
                "apiVersion": "networking.k8s.io/v1",
                "kind": "Ingress",
                "metadata": {
                  "annotations": {
                    "cert-manager.io/cluster-issuer": "letsencrypt-production",
                    "nginx.ingress.kubernetes.io/backend-protocol": "HTTPS"
                  },
                  "clusterName": null,
                  "creationTimestamp": null,
                  "deletionGracePeriodSeconds": null,
                  "deletionTimestamp": null,
                  "finalizers": null,
                  "generateName": null,
                  "generation": null,
                  "labels": null,
                  "managedFields": null,
                  "name": "monitoring",
                  "namespace": "monitoring",
                  "ownerReferences": null,
                  "resourceVersion": null,
                  "selfLink": null,
                  "uid": null
                },
                "spec": {
                  "defaultBackend": {
                    "resource": {
                      "apiGroup": null,
                      "kind": null,
                      "name": null
                    },
                    "service": {
                      "name": null,
                      "port": {
                        "name": null,
                        "number": null
                      }
                    }
                  },
                  "ingressClassName": "nginx",
                  "rules": [
                    {
                      "host": "monitoring.framsouza.co",
                      "http": {
                        "paths": [
                          {
                            "backend": {
                              "resource": {
                                "apiGroup": null,
                                "kind": null,
                                "name": null
                              },
                              "service": {
                                "name": "monitoring-kb-http",
                                "port": {
                                  "name": null,
                                  "number": 5601
                                }
                              }
                            },
                            "path": "/",
                            "pathType": "Prefix"
                          }
                        ]
                      }
                    }
                  ],
                  "tls": [
                    {
                      "hosts": [
                        "monitoring.framsouza.co"
                      ],
                      "secretName": "letsencrypt-cert"
                    }
                  ]
                }
              },
              "type": [
                "object",
                {
                  "apiVersion": "string",
                  "kind": "string",
                  "metadata": [
                    "object",
                    {
                      "annotations": [
                        "map",
                        "string"
                      ],
                      "clusterName": "string",
                      "creationTimestamp": "string",
                      "deletionGracePeriodSeconds": "number",
                      "deletionTimestamp": "string",
                      "finalizers": [
                        "list",
                        "string"
                      ],
                      "generateName": "string",
                      "generation": "number",
                      "labels": [
                        "map",
                        "string"
                      ],
                      "managedFields": [
                        "tuple",
                        [
                          [
                            "object",
                            {
                              "apiVersion": "string",
                              "fieldsType": "string",
                              "fieldsV1": "dynamic",
                              "manager": "string",
                              "operation": "string",
                              "time": "string"
                            }
                          ]
                        ]
                      ],
                      "name": "string",
                      "namespace": "string",
                      "ownerReferences": [
                        "list",
                        [
                          "object",
                          {
                            "apiVersion": "string",
                            "blockOwnerDeletion": "bool",
                            "controller": "bool",
                            "kind": "string",
                            "name": "string",
                            "uid": "string"
                          }
                        ]
                      ],
                      "resourceVersion": "string",
                      "selfLink": "string",
                      "uid": "string"
                    }
                  ],
                  "spec": [
                    "object",
                    {
                      "defaultBackend": [
                        "object",
                        {
                          "resource": [
                            "object",
                            {
                              "apiGroup": "string",
                              "kind": "string",
                              "name": "string"
                            }
                          ],
                          "service": [
                            "object",
                            {
                              "name": "string",
                              "port": [
                                "object",
                                {
                                  "name": "string",
                                  "number": "number"
                                }
                              ]
                            }
                          ]
                        }
                      ],
                      "ingressClassName": "string",
                      "rules": [
                        "list",
                        [
                          "object",
                          {
                            "host": "string",
                            "http": [
                              "object",
                              {
                                "paths": [
                                  "list",
                                  [
                                    "object",
                                    {
                                      "backend": [
                                        "object",
                                        {
                                          "resource": [
                                            "object",
                                            {
                                              "apiGroup": "string",
                                              "kind": "string",
                                              "name": "string"
                                            }
                                          ],
                                          "service": [
                                            "object",
                                            {
                                              "name": "string",
                                              "port": [
                                                "object",
                                                {
                                                  "name": "string",
                                                  "number": "number"
                                                }
                                              ]
                                            }
                                          ]
                                        }
                                      ],
                                      "path": "string",
                                      "pathType": "string"
                                    }
                                  ]
                                ]
                              }
                            ]
                          }
                        ]
                      ],
                      "tls": [
                        "list",
                        [
                          "object",
                          {
                            "hosts": [
                              "list",
                              "string"
                            ],
                            "secretName": "string"
                          }
                        ]
                      ]
                    }
                  ]
                }
              ]
            },
            "timeouts": [],
            "wait": [],
            "wait_for": null
          },
          "sensitive_attributes": []
        }
      ]
    },
    {
      "mode": "managed",
      "type": "kubernetes_manifest",
      "name": "kibana_kibana",
      "provider": "provider[\"registry.terraform.io/hashicorp/kubernetes\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "computed_fields": null,
            "field_manager": [],
            "manifest": {
              "value": {
                "apiVersion": "kibana.k8s.elastic.co/v1",
                "kind": "Kibana",
                "metadata": {
                  "name": "kibana",
                  "namespace": "default"
                },
                "spec": {
                  "config": {
                    "xpack.fleet.agentPolicies": [
                      {
                        "id": "eck-fleet-server",
                        "is_default_fleet_server": true,
                        "monitoring_enabled": [
                          "logs",
                          "metrics"
                        ],
                        "name": "Fleet Server on ECK policy",
                        "namespace": "default",
                        "package_policies": [
                          {
                            "id": "fleet_server-1",
                            "name": "fleet_server-1",
                            "package": {
                              "name": "fleet_server"
                            }
                          }
                        ]
                      },
                      {
                        "id": "eck-agent",
                        "is_default": true,
                        "monitoring_enabled": [
                          "logs",
                          "metrics"
                        ],
                        "name": "Elastic Agent on ECK policy",
                        "namespace": "default",
                        "package_policies": [
                          {
                            "name": "system-1",
                            "package": {
                              "name": "system"
                            }
                          },
                          {
                            "name": "kubernetes-1",
                            "package": {
                              "name": "kubernetes"
                            }
                          }
                        ],
                        "unenroll_timeout": 900
                      }
                    ],
                    "xpack.fleet.agents.elasticsearch.hosts": [
                      "https://elasticsearch-es-http.default.svc:9200"
                    ],
                    "xpack.fleet.agents.fleet_server.hosts": [
                      "https://fleet-server-agent-http.default.svc:8220"
                    ],
                    "xpack.fleet.packages": [
                      {
                        "name": "system",
                        "version": "latest"
                      },
                      {
                        "name": "elastic_agent",
                        "version": "latest"
                      },
                      {
                        "name": "fleet_server",
                        "version": "latest"
                      },
                      {
                        "name": "kubernetes",
                        "version": "0.14.0"
                      }
                    ],
                    "xpack.security.authc.providers": {
                      "basic.basic1": {
                        "order": 1
                      },
                      "saml.saml1": {
                        "order": 0,
                        "realm": "saml1"
                      }
                    }
                  },
                  "count": 1,
                  "elasticsearchRef": {
                    "name": "elasticsearch"
                  },
                  "monitoring": {
                    "logs": {
                      "elasticsearchRefs": [
                        {
                          "name": "monitoring",
                          "namespace": "monitoring"
                        }
                      ]
                    },
                    "metrics": {
                      "elasticsearchRefs": [
                        {
                          "name": "monitoring",
                          "namespace": "monitoring"
                        }
                      ]
                    }
                  },
                  "version": "8.0.0"
                }
              },
              "type": [
                "object",
                {
                  "apiVersion": "string",
                  "kind": "string",
                  "metadata": [
                    "object",
                    {
                      "name": "string",
                      "namespace": "string"
                    }
                  ],
                  "spec": [
                    "object",
                    {
                      "config": [
                        "object",
                        {
                          "xpack.fleet.agentPolicies": [
                            "tuple",
                            [
                              [
                                "object",
                                {
                                  "id": "string",
                                  "is_default_fleet_server": "bool",
                                  "monitoring_enabled": [
                                    "tuple",
                                    [
                                      "string",
                                      "string"
                                    ]
                                  ],
                                  "name": "string",
                                  "namespace": "string",
                                  "package_policies": [
                                    "tuple",
                                    [
                                      [
                                        "object",
                                        {
                                          "id": "string",
                                          "name": "string",
                                          "package": [
                                            "object",
                                            {
                                              "name": "string"
                                            }
                                          ]
                                        }
                                      ]
                                    ]
                                  ]
                                }
                              ],
                              [
                                "object",
                                {
                                  "id": "string",
                                  "is_default": "bool",
                                  "monitoring_enabled": [
                                    "tuple",
                                    [
                                      "string",
                                      "string"
                                    ]
                                  ],
                                  "name": "string",
                                  "namespace": "string",
                                  "package_policies": [
                                    "tuple",
                                    [
                                      [
                                        "object",
                                        {
                                          "name": "string",
                                          "package": [
                                            "object",
                                            {
                                              "name": "string"
                                            }
                                          ]
                                        }
                                      ],
                                      [
                                        "object",
                                        {
                                          "name": "string",
                                          "package": [
                                            "object",
                                            {
                                              "name": "string"
                                            }
                                          ]
                                        }
                                      ]
                                    ]
                                  ],
                                  "unenroll_timeout": "number"
                                }
                              ]
                            ]
                          ],
                          "xpack.fleet.agents.elasticsearch.hosts": [
                            "tuple",
                            [
                              "string"
                            ]
                          ],
                          "xpack.fleet.agents.fleet_server.hosts": [
                            "tuple",
                            [
                              "string"
                            ]
                          ],
                          "xpack.fleet.packages": [
                            "tuple",
                            [
                              [
                                "object",
                                {
                                  "name": "string",
                                  "version": "string"
                                }
                              ],
                              [
                                "object",
                                {
                                  "name": "string",
                                  "version": "string"
                                }
                              ],
                              [
                                "object",
                                {
                                  "name": "string",
                                  "version": "string"
                                }
                              ],
                              [
                                "object",
                                {
                                  "name": "string",
                                  "version": "string"
                                }
                              ]
                            ]
                          ],
                          "xpack.security.authc.providers": [
                            "object",
                            {
                              "basic.basic1": [
                                "object",
                                {
                                  "order": "number"
                                }
                              ],
                              "saml.saml1": [
                                "object",
                                {
                                  "order": "number",
                                  "realm": "string"
                                }
                              ]
                            }
                          ]
                        }
                      ],
                      "count": "number",
                      "elasticsearchRef": [
                        "object",
                        {
                          "name": "string"
                        }
                      ],
                      "monitoring": [
                        "object",
                        {
                          "logs": [
                            "object",
                            {
                              "elasticsearchRefs": [
                                "tuple",
                                [
                                  [
                                    "object",
                                    {
                                      "name": "string",
                                      "namespace": "string"
                                    }
                                  ]
                                ]
                              ]
                            }
                          ],
                          "metrics": [
                            "object",
                            {
                              "elasticsearchRefs": [
                                "tuple",
                                [
                                  [
                                    "object",
                                    {
                                      "name": "string",
                                      "namespace": "string"
                                    }
                                  ]
                                ]
                              ]
                            }
                          ]
                        }
                      ],
                      "version": "string"
                    }
                  ]
                }
              ]
            },
            "object": {
              "value": {
                "apiVersion": "kibana.k8s.elastic.co/v1",
                "kind": "Kibana",
                "metadata": {
                  "annotations": null,
                  "clusterName": null,
                  "creationTimestamp": null,
                  "deletionGracePeriodSeconds": null,
                  "deletionTimestamp": null,
                  "finalizers": null,
                  "generateName": null,
                  "generation": null,
                  "labels": null,
                  "managedFields": null,
                  "name": "kibana",
                  "namespace": "default",
                  "ownerReferences": null,
                  "resourceVersion": null,
                  "selfLink": null,
                  "uid": null
                },
                "spec": {
                  "config": {
                    "xpack.fleet.agentPolicies": [
                      {
                        "id": "eck-fleet-server",
                        "is_default_fleet_server": true,
                        "monitoring_enabled": [
                          "logs",
                          "metrics"
                        ],
                        "name": "Fleet Server on ECK policy",
                        "namespace": "default",
                        "package_policies": [
                          {
                            "id": "fleet_server-1",
                            "name": "fleet_server-1",
                            "package": {
                              "name": "fleet_server"
                            }
                          }
                        ]
                      },
                      {
                        "id": "eck-agent",
                        "is_default": true,
                        "monitoring_enabled": [
                          "logs",
                          "metrics"
                        ],
                        "name": "Elastic Agent on ECK policy",
                        "namespace": "default",
                        "package_policies": [
                          {
                            "name": "system-1",
                            "package": {
                              "name": "system"
                            }
                          },
                          {
                            "name": "kubernetes-1",
                            "package": {
                              "name": "kubernetes"
                            }
                          }
                        ],
                        "unenroll_timeout": 900
                      }
                    ],
                    "xpack.fleet.agents.elasticsearch.hosts": [
                      "https://elasticsearch-es-http.default.svc:9200"
                    ],
                    "xpack.fleet.agents.fleet_server.hosts": [
                      "https://fleet-server-agent-http.default.svc:8220"
                    ],
                    "xpack.fleet.packages": [
                      {
                        "name": "system",
                        "version": "latest"
                      },
                      {
                        "name": "elastic_agent",
                        "version": "latest"
                      },
                      {
                        "name": "fleet_server",
                        "version": "latest"
                      },
                      {
                        "name": "kubernetes",
                        "version": "0.14.0"
                      }
                    ],
                    "xpack.security.authc.providers": {
                      "basic.basic1": {
                        "order": 1
                      },
                      "saml.saml1": {
                        "order": 0,
                        "realm": "saml1"
                      }
                    }
                  },
                  "count": 1,
                  "elasticsearchRef": {
                    "name": "elasticsearch",
                    "namespace": null,
                    "serviceName": null
                  },
                  "enterpriseSearchRef": {
                    "name": null,
                    "namespace": null,
                    "serviceName": null
                  },
                  "http": {
                    "service": {
                      "metadata": {
                        "annotations": null,
                        "finalizers": null,
                        "labels": null,
                        "name": null,
                        "namespace": null
                      },
                      "spec": {
                        "allocateLoadBalancerNodePorts": null,
                        "clusterIP": null,
                        "clusterIPs": null,
                        "externalIPs": null,
                        "externalName": null,
                        "externalTrafficPolicy": null,
                        "healthCheckNodePort": null,
                        "internalTrafficPolicy": null,
                        "ipFamilies": null,
                        "ipFamilyPolicy": null,
                        "loadBalancerClass": null,
                        "loadBalancerIP": null,
                        "loadBalancerSourceRanges": null,
                        "ports": null,
                        "publishNotReadyAddresses": null,
                        "selector": null,
                        "sessionAffinity": null,
                        "sessionAffinityConfig": {
                          "clientIP": {
                            "timeoutSeconds": null
                          }
                        },
                        "type": null
                      }
                    },
                    "tls": {
                      "certificate": {
                        "secretName": null
                      },
                      "selfSignedCertificate": {
                        "disabled": null,
                        "subjectAltNames": null
                      }
                    }
                  },
                  "image": null,
                  "monitoring": {
                    "logs": {
                      "elasticsearchRefs": [
                        {
                          "name": "monitoring",
                          "namespace": "monitoring",
                          "serviceName": null
                        }
                      ]
                    },
                    "metrics": {
                      "elasticsearchRefs": [
                        {
                          "name": "monitoring",
                          "namespace": "monitoring",
                          "serviceName": null
                        }
                      ]
                    }
                  },
                  "podTemplate": null,
                  "secureSettings": null,
                  "serviceAccountName": null,
                  "version": "8.0.0"
                }
              },
              "type": [
                "object",
                {
                  "apiVersion": "string",
                  "kind": "string",
                  "metadata": [
                    "object",
                    {
                      "annotations": [
                        "map",
                        "string"
                      ],
                      "clusterName": "string",
                      "creationTimestamp": "string",
                      "deletionGracePeriodSeconds": "number",
                      "deletionTimestamp": "string",
                      "finalizers": [
                        "list",
                        "string"
                      ],
                      "generateName": "string",
                      "generation": "number",
                      "labels": [
                        "map",
                        "string"
                      ],
                      "managedFields": [
                        "tuple",
                        [
                          [
                            "object",
                            {
                              "apiVersion": "string",
                              "fieldsType": "string",
                              "fieldsV1": "dynamic",
                              "manager": "string",
                              "operation": "string",
                              "time": "string"
                            }
                          ]
                        ]
                      ],
                      "name": "string",
                      "namespace": "string",
                      "ownerReferences": [
                        "list",
                        [
                          "object",
                          {
                            "apiVersion": "string",
                            "blockOwnerDeletion": "bool",
                            "controller": "bool",
                            "kind": "string",
                            "name": "string",
                            "uid": "string"
                          }
                        ]
                      ],
                      "resourceVersion": "string",
                      "selfLink": "string",
                      "uid": "string"
                    }
                  ],
                  "spec": [
                    "object",
                    {
                      "config": [
                        "object",
                        {
                          "xpack.fleet.agentPolicies": [
                            "tuple",
                            [
                              [
                                "object",
                                {
                                  "id": "string",
                                  "is_default_fleet_server": "bool",
                                  "monitoring_enabled": [
                                    "tuple",
                                    [
                                      "string",
                                      "string"
                                    ]
                                  ],
                                  "name": "string",
                                  "namespace": "string",
                                  "package_policies": [
                                    "tuple",
                                    [
                                      [
                                        "object",
                                        {
                                          "id": "string",
                                          "name": "string",
                                          "package": [
                                            "object",
                                            {
                                              "name": "string"
                                            }
                                          ]
                                        }
                                      ]
                                    ]
                                  ]
                                }
                              ],
                              [
                                "object",
                                {
                                  "id": "string",
                                  "is_default": "bool",
                                  "monitoring_enabled": [
                                    "tuple",
                                    [
                                      "string",
                                      "string"
                                    ]
                                  ],
                                  "name": "string",
                                  "namespace": "string",
                                  "package_policies": [
                                    "tuple",
                                    [
                                      [
                                        "object",
                                        {
                                          "name": "string",
                                          "package": [
                                            "object",
                                            {
                                              "name": "string"
                                            }
                                          ]
                                        }
                                      ],
                                      [
                                        "object",
                                        {
                                          "name": "string",
                                          "package": [
                                            "object",
                                            {
                                              "name": "string"
                                            }
                                          ]
                                        }
                                      ]
                                    ]
                                  ],
                                  "unenroll_timeout": "number"
                                }
                              ]
                            ]
                          ],
                          "xpack.fleet.agents.elasticsearch.hosts": [
                            "tuple",
                            [
                              "string"
                            ]
                          ],
                          "xpack.fleet.agents.fleet_server.hosts": [
                            "tuple",
                            [
                              "string"
                            ]
                          ],
                          "xpack.fleet.packages": [
                            "tuple",
                            [
                              [
                                "object",
                                {
                                  "name": "string",
                                  "version": "string"
                                }
                              ],
                              [
                                "object",
                                {
                                  "name": "string",
                                  "version": "string"
                                }
                              ],
                              [
                                "object",
                                {
                                  "name": "string",
                                  "version": "string"
                                }
                              ],
                              [
                                "object",
                                {
                                  "name": "string",
                                  "version": "string"
                                }
                              ]
                            ]
                          ],
                          "xpack.security.authc.providers": [
                            "object",
                            {
                              "basic.basic1": [
                                "object",
                                {
                                  "order": "number"
                                }
                              ],
                              "saml.saml1": [
                                "object",
                                {
                                  "order": "number",
                                  "realm": "string"
                                }
                              ]
                            }
                          ]
                        }
                      ],
                      "count": "number",
                      "elasticsearchRef": [
                        "object",
                        {
                          "name": "string",
                          "namespace": "string",
                          "serviceName": "string"
                        }
                      ],
                      "enterpriseSearchRef": [
                        "object",
                        {
                          "name": "string",
                          "namespace": "string",
                          "serviceName": "string"
                        }
                      ],
                      "http": [
                        "object",
                        {
                          "service": [
                            "object",
                            {
                              "metadata": [
                                "object",
                                {
                                  "annotations": [
                                    "map",
                                    "string"
                                  ],
                                  "finalizers": [
                                    "list",
                                    "string"
                                  ],
                                  "labels": [
                                    "map",
                                    "string"
                                  ],
                                  "name": "string",
                                  "namespace": "string"
                                }
                              ],
                              "spec": [
                                "object",
                                {
                                  "allocateLoadBalancerNodePorts": "bool",
                                  "clusterIP": "string",
                                  "clusterIPs": [
                                    "list",
                                    "string"
                                  ],
                                  "externalIPs": [
                                    "list",
                                    "string"
                                  ],
                                  "externalName": "string",
                                  "externalTrafficPolicy": "string",
                                  "healthCheckNodePort": "number",
                                  "internalTrafficPolicy": "string",
                                  "ipFamilies": [
                                    "list",
                                    "string"
                                  ],
                                  "ipFamilyPolicy": "string",
                                  "loadBalancerClass": "string",
                                  "loadBalancerIP": "string",
                                  "loadBalancerSourceRanges": [
                                    "list",
                                    "string"
                                  ],
                                  "ports": [
                                    "list",
                                    [
                                      "object",
                                      {
                                        "appProtocol": "string",
                                        "name": "string",
                                        "nodePort": "number",
                                        "port": "number",
                                        "protocol": "string",
                                        "targetPort": "string"
                                      }
                                    ]
                                  ],
                                  "publishNotReadyAddresses": "bool",
                                  "selector": [
                                    "map",
                                    "string"
                                  ],
                                  "sessionAffinity": "string",
                                  "sessionAffinityConfig": [
                                    "object",
                                    {
                                      "clientIP": [
                                        "object",
                                        {
                                          "timeoutSeconds": "number"
                                        }
                                      ]
                                    }
                                  ],
                                  "type": "string"
                                }
                              ]
                            }
                          ],
                          "tls": [
                            "object",
                            {
                              "certificate": [
                                "object",
                                {
                                  "secretName": "string"
                                }
                              ],
                              "selfSignedCertificate": [
                                "object",
                                {
                                  "disabled": "bool",
                                  "subjectAltNames": [
                                    "list",
                                    [
                                      "object",
                                      {
                                        "dns": "string",
                                        "ip": "string"
                                      }
                                    ]
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ],
                      "image": "string",
                      "monitoring": [
                        "object",
                        {
                          "logs": [
                            "object",
                            {
                              "elasticsearchRefs": [
                                "list",
                                [
                                  "object",
                                  {
                                    "name": "string",
                                    "namespace": "string",
                                    "serviceName": "string"
                                  }
                                ]
                              ]
                            }
                          ],
                          "metrics": [
                            "object",
                            {
                              "elasticsearchRefs": [
                                "list",
                                [
                                  "object",
                                  {
                                    "name": "string",
                                    "namespace": "string",
                                    "serviceName": "string"
                                  }
                                ]
                              ]
                            }
                          ]
                        }
                      ],
                      "podTemplate": "dynamic",
                      "secureSettings": [
                        "list",
                        [
                          "object",
                          {
                            "entries": [
                              "list",
                              [
                                "object",
                                {
                                  "key": "string",
                                  "path": "string"
                                }
                              ]
                            ],
                            "secretName": "string"
                          }
                        ]
                      ],
                      "serviceAccountName": "string",
                      "version": "string"
                    }
                  ]
                }
              ]
            },
            "timeouts": [],
            "wait": [],
            "wait_for": null
          },
          "sensitive_attributes": []
        }
      ]
    },
    {
      "mode": "managed",
      "type": "kubernetes_manifest",
      "name": "kibana_monitoring_monitoring",
      "provider": "provider[\"registry.terraform.io/hashicorp/kubernetes\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "computed_fields": null,
            "field_manager": [],
            "manifest": {
              "value": {
                "apiVersion": "kibana.k8s.elastic.co/v1",
                "kind": "Kibana",
                "metadata": {
                  "name": "monitoring",
                  "namespace": "monitoring"
                },
                "spec": {
                  "config": {
                    "xpack.security.authc.providers": {
                      "basic.basic1": {
                        "order": 1
                      },
                      "saml.saml1": {
                        "order": 0,
                        "realm": "saml1"
                      }
                    }
                  },
                  "count": 1,
                  "elasticsearchRef": {
                    "name": "monitoring"
                  },
                  "version": "8.0.0"
                }
              },
              "type": [
                "object",
                {
                  "apiVersion": "string",
                  "kind": "string",
                  "metadata": [
                    "object",
                    {
                      "name": "string",
                      "namespace": "string"
                    }
                  ],
                  "spec": [
                    "object",
                    {
                      "config": [
                        "object",
                        {
                          "xpack.security.authc.providers": [
                            "object",
                            {
                              "basic.basic1": [
                                "object",
                                {
                                  "order": "number"
                                }
                              ],
                              "saml.saml1": [
                                "object",
                                {
                                  "order": "number",
                                  "realm": "string"
                                }
                              ]
                            }
                          ]
                        }
                      ],
                      "count": "number",
                      "elasticsearchRef": [
                        "object",
                        {
                          "name": "string"
                        }
                      ],
                      "version": "string"
                    }
                  ]
                }
              ]
            },
            "object": {
              "value": {
                "apiVersion": "kibana.k8s.elastic.co/v1",
                "kind": "Kibana",
                "metadata": {
                  "annotations": null,
                  "clusterName": null,
                  "creationTimestamp": null,
                  "deletionGracePeriodSeconds": null,
                  "deletionTimestamp": null,
                  "finalizers": null,
                  "generateName": null,
                  "generation": null,
                  "labels": null,
                  "managedFields": null,
                  "name": "monitoring",
                  "namespace": "monitoring",
                  "ownerReferences": null,
                  "resourceVersion": null,
                  "selfLink": null,
                  "uid": null
                },
                "spec": {
                  "config": {
                    "xpack.security.authc.providers": {
                      "basic.basic1": {
                        "order": 1
                      },
                      "saml.saml1": {
                        "order": 0,
                        "realm": "saml1"
                      }
                    }
                  },
                  "count": 1,
                  "elasticsearchRef": {
                    "name": "monitoring",
                    "namespace": null,
                    "serviceName": null
                  },
                  "enterpriseSearchRef": {
                    "name": null,
                    "namespace": null,
                    "serviceName": null
                  },
                  "http": {
                    "service": {
                      "metadata": {
                        "annotations": null,
                        "finalizers": null,
                        "labels": null,
                        "name": null,
                        "namespace": null
                      },
                      "spec": {
                        "allocateLoadBalancerNodePorts": null,
                        "clusterIP": null,
                        "clusterIPs": null,
                        "externalIPs": null,
                        "externalName": null,
                        "externalTrafficPolicy": null,
                        "healthCheckNodePort": null,
                        "internalTrafficPolicy": null,
                        "ipFamilies": null,
                        "ipFamilyPolicy": null,
                        "loadBalancerClass": null,
                        "loadBalancerIP": null,
                        "loadBalancerSourceRanges": null,
                        "ports": null,
                        "publishNotReadyAddresses": null,
                        "selector": null,
                        "sessionAffinity": null,
                        "sessionAffinityConfig": {
                          "clientIP": {
                            "timeoutSeconds": null
                          }
                        },
                        "type": null
                      }
                    },
                    "tls": {
                      "certificate": {
                        "secretName": null
                      },
                      "selfSignedCertificate": {
                        "disabled": null,
                        "subjectAltNames": null
                      }
                    }
                  },
                  "image": null,
                  "monitoring": {
                    "logs": {
                      "elasticsearchRefs": null
                    },
                    "metrics": {
                      "elasticsearchRefs": null
                    }
                  },
                  "podTemplate": null,
                  "secureSettings": null,
                  "serviceAccountName": null,
                  "version": "8.0.0"
                }
              },
              "type": [
                "object",
                {
                  "apiVersion": "string",
                  "kind": "string",
                  "metadata": [
                    "object",
                    {
                      "annotations": [
                        "map",
                        "string"
                      ],
                      "clusterName": "string",
                      "creationTimestamp": "string",
                      "deletionGracePeriodSeconds": "number",
                      "deletionTimestamp": "string",
                      "finalizers": [
                        "list",
                        "string"
                      ],
                      "generateName": "string",
                      "generation": "number",
                      "labels": [
                        "map",
                        "string"
                      ],
                      "managedFields": [
                        "tuple",
                        [
                          [
                            "object",
                            {
                              "apiVersion": "string",
                              "fieldsType": "string",
                              "fieldsV1": "dynamic",
                              "manager": "string",
                              "operation": "string",
                              "time": "string"
                            }
                          ]
                        ]
                      ],
                      "name": "string",
                      "namespace": "string",
                      "ownerReferences": [
                        "list",
                        [
                          "object",
                          {
                            "apiVersion": "string",
                            "blockOwnerDeletion": "bool",
                            "controller": "bool",
                            "kind": "string",
                            "name": "string",
                            "uid": "string"
                          }
                        ]
                      ],
                      "resourceVersion": "string",
                      "selfLink": "string",
                      "uid": "string"
                    }
                  ],
                  "spec": [
                    "object",
                    {
                      "config": [
                        "object",
                        {
                          "xpack.security.authc.providers": [
                            "object",
                            {
                              "basic.basic1": [
                                "object",
                                {
                                  "order": "number"
                                }
                              ],
                              "saml.saml1": [
                                "object",
                                {
                                  "order": "number",
                                  "realm": "string"
                                }
                              ]
                            }
                          ]
                        }
                      ],
                      "count": "number",
                      "elasticsearchRef": [
                        "object",
                        {
                          "name": "string",
                          "namespace": "string",
                          "serviceName": "string"
                        }
                      ],
                      "enterpriseSearchRef": [
                        "object",
                        {
                          "name": "string",
                          "namespace": "string",
                          "serviceName": "string"
                        }
                      ],
                      "http": [
                        "object",
                        {
                          "service": [
                            "object",
                            {
                              "metadata": [
                                "object",
                                {
                                  "annotations": [
                                    "map",
                                    "string"
                                  ],
                                  "finalizers": [
                                    "list",
                                    "string"
                                  ],
                                  "labels": [
                                    "map",
                                    "string"
                                  ],
                                  "name": "string",
                                  "namespace": "string"
                                }
                              ],
                              "spec": [
                                "object",
                                {
                                  "allocateLoadBalancerNodePorts": "bool",
                                  "clusterIP": "string",
                                  "clusterIPs": [
                                    "list",
                                    "string"
                                  ],
                                  "externalIPs": [
                                    "list",
                                    "string"
                                  ],
                                  "externalName": "string",
                                  "externalTrafficPolicy": "string",
                                  "healthCheckNodePort": "number",
                                  "internalTrafficPolicy": "string",
                                  "ipFamilies": [
                                    "list",
                                    "string"
                                  ],
                                  "ipFamilyPolicy": "string",
                                  "loadBalancerClass": "string",
                                  "loadBalancerIP": "string",
                                  "loadBalancerSourceRanges": [
                                    "list",
                                    "string"
                                  ],
                                  "ports": [
                                    "list",
                                    [
                                      "object",
                                      {
                                        "appProtocol": "string",
                                        "name": "string",
                                        "nodePort": "number",
                                        "port": "number",
                                        "protocol": "string",
                                        "targetPort": "string"
                                      }
                                    ]
                                  ],
                                  "publishNotReadyAddresses": "bool",
                                  "selector": [
                                    "map",
                                    "string"
                                  ],
                                  "sessionAffinity": "string",
                                  "sessionAffinityConfig": [
                                    "object",
                                    {
                                      "clientIP": [
                                        "object",
                                        {
                                          "timeoutSeconds": "number"
                                        }
                                      ]
                                    }
                                  ],
                                  "type": "string"
                                }
                              ]
                            }
                          ],
                          "tls": [
                            "object",
                            {
                              "certificate": [
                                "object",
                                {
                                  "secretName": "string"
                                }
                              ],
                              "selfSignedCertificate": [
                                "object",
                                {
                                  "disabled": "bool",
                                  "subjectAltNames": [
                                    "list",
                                    [
                                      "object",
                                      {
                                        "dns": "string",
                                        "ip": "string"
                                      }
                                    ]
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ],
                      "image": "string",
                      "monitoring": [
                        "object",
                        {
                          "logs": [
                            "object",
                            {
                              "elasticsearchRefs": [
                                "list",
                                [
                                  "object",
                                  {
                                    "name": "string",
                                    "namespace": "string",
                                    "serviceName": "string"
                                  }
                                ]
                              ]
                            }
                          ],
                          "metrics": [
                            "object",
                            {
                              "elasticsearchRefs": [
                                "list",
                                [
                                  "object",
                                  {
                                    "name": "string",
                                    "namespace": "string",
                                    "serviceName": "string"
                                  }
                                ]
                              ]
                            }
                          ]
                        }
                      ],
                      "podTemplate": "dynamic",
                      "secureSettings": [
                        "list",
                        [
                          "object",
                          {
                            "entries": [
                              "list",
                              [
                                "object",
                                {
                                  "key": "string",
                                  "path": "string"
                                }
                              ]
                            ],
                            "secretName": "string"
                          }
                        ]
                      ],
                      "serviceAccountName": "string",
                      "version": "string"
                    }
                  ]
                }
              ]
            },
            "timeouts": [],
            "wait": [],
            "wait_for": null
          },
          "sensitive_attributes": []
        }
      ]
    },
    {
      "mode": "managed",
      "type": "kubernetes_manifest",
      "name": "namespace_monitoring",
      "provider": "provider[\"registry.terraform.io/hashicorp/kubernetes\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "computed_fields": null,
            "field_manager": [],
            "manifest": {
              "value": {
                "apiVersion": "v1",
                "kind": "Namespace",
                "metadata": {
                  "name": "monitoring"
                }
              },
              "type": [
                "object",
                {
                  "apiVersion": "string",
                  "kind": "string",
                  "metadata": [
                    "object",
                    {
                      "name": "string"
                    }
                  ]
                }
              ]
            },
            "object": {
              "value": {
                "apiVersion": "v1",
                "kind": "Namespace",
                "metadata": {
                  "annotations": null,
                  "clusterName": null,
                  "creationTimestamp": null,
                  "deletionGracePeriodSeconds": null,
                  "deletionTimestamp": null,
                  "finalizers": null,
                  "generateName": null,
                  "generation": null,
                  "labels": {
                    "kubernetes.io/metadata.name": "monitoring"
                  },
                  "managedFields": null,
                  "name": "monitoring",
                  "namespace": null,
                  "ownerReferences": null,
                  "resourceVersion": null,
                  "selfLink": null,
                  "uid": null
                },
                "spec": {
                  "finalizers": [
                    "kubernetes"
                  ]
                }
              },
              "type": [
                "object",
                {
                  "apiVersion": "string",
                  "kind": "string",
                  "metadata": [
                    "object",
                    {
                      "annotations": [
                        "map",
                        "string"
                      ],
                      "clusterName": "string",
                      "creationTimestamp": "string",
                      "deletionGracePeriodSeconds": "number",
                      "deletionTimestamp": "string",
                      "finalizers": [
                        "list",
                        "string"
                      ],
                      "generateName": "string",
                      "generation": "number",
                      "labels": [
                        "map",
                        "string"
                      ],
                      "managedFields": [
                        "tuple",
                        [
                          [
                            "object",
                            {
                              "apiVersion": "string",
                              "fieldsType": "string",
                              "fieldsV1": "dynamic",
                              "manager": "string",
                              "operation": "string",
                              "time": "string"
                            }
                          ]
                        ]
                      ],
                      "name": "string",
                      "namespace": "string",
                      "ownerReferences": [
                        "list",
                        [
                          "object",
                          {
                            "apiVersion": "string",
                            "blockOwnerDeletion": "bool",
                            "controller": "bool",
                            "kind": "string",
                            "name": "string",
                            "uid": "string"
                          }
                        ]
                      ],
                      "resourceVersion": "string",
                      "selfLink": "string",
                      "uid": "string"
                    }
                  ],
                  "spec": [
                    "object",
                    {
                      "finalizers": [
                        "list",
                        "string"
                      ]
                    }
                  ]
                }
              ]
            },
            "timeouts": [],
            "wait": [],
            "wait_for": null
          },
          "sensitive_attributes": []
        }
      ]
    },
    {
      "mode": "managed",
      "type": "kubernetes_manifest",
      "name": "secret_elastic_system_eck_trial_license",
      "provider": "provider[\"registry.terraform.io/hashicorp/kubernetes\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "computed_fields": null,
            "field_manager": [],
            "manifest": {
              "value": {
                "apiVersion": "v1",
                "kind": "Secret",
                "metadata": {
                  "annotations": {
                    "elastic.co/eula": "accepted"
                  },
                  "labels": {
                    "license.k8s.elastic.co/type": "enterprise_trial"
                  },
                  "name": "eck-trial-license",
                  "namespace": "elastic-system"
                }
              },
              "type": [
                "object",
                {
                  "apiVersion": "string",
                  "kind": "string",
                  "metadata": [
                    "object",
                    {
                      "annotations": [
                        "object",
                        {
                          "elastic.co/eula": "string"
                        }
                      ],
                      "labels": [
                        "object",
                        {
                          "license.k8s.elastic.co/type": "string"
                        }
                      ],
                      "name": "string",
                      "namespace": "string"
                    }
                  ]
                }
              ]
            },
            "object": {
              "value": {
                "apiVersion": "v1",
                "data": null,
                "immutable": null,
                "kind": "Secret",
                "metadata": {
                  "annotations": {
                    "elastic.co/eula": "accepted"
                  },
                  "clusterName": null,
                  "creationTimestamp": null,
                  "deletionGracePeriodSeconds": null,
                  "deletionTimestamp": null,
                  "finalizers": null,
                  "generateName": null,
                  "generation": null,
                  "labels": {
                    "license.k8s.elastic.co/type": "enterprise_trial"
                  },
                  "managedFields": null,
                  "name": "eck-trial-license",
                  "namespace": "elastic-system",
                  "ownerReferences": null,
                  "resourceVersion": null,
                  "selfLink": null,
                  "uid": null
                },
                "stringData": null,
                "type": "Opaque"
              },
              "type": [
                "object",
                {
                  "apiVersion": "string",
                  "data": [
                    "map",
                    "string"
                  ],
                  "immutable": "bool",
                  "kind": "string",
                  "metadata": [
                    "object",
                    {
                      "annotations": [
                        "map",
                        "string"
                      ],
                      "clusterName": "string",
                      "creationTimestamp": "string",
                      "deletionGracePeriodSeconds": "number",
                      "deletionTimestamp": "string",
                      "finalizers": [
                        "list",
                        "string"
                      ],
                      "generateName": "string",
                      "generation": "number",
                      "labels": [
                        "map",
                        "string"
                      ],
                      "managedFields": [
                        "tuple",
                        [
                          [
                            "object",
                            {
                              "apiVersion": "string",
                              "fieldsType": "string",
                              "fieldsV1": "dynamic",
                              "manager": "string",
                              "operation": "string",
                              "time": "string"
                            }
                          ]
                        ]
                      ],
                      "name": "string",
                      "namespace": "string",
                      "ownerReferences": [
                        "list",
                        [
                          "object",
                          {
                            "apiVersion": "string",
                            "blockOwnerDeletion": "bool",
                            "controller": "bool",
                            "kind": "string",
                            "name": "string",
                            "uid": "string"
                          }
                        ]
                      ],
                      "resourceVersion": "string",
                      "selfLink": "string",
                      "uid": "string"
                    }
                  ],
                  "stringData": [
                    "map",
                    "string"
                  ],
                  "type": "string"
                }
              ]
            },
            "timeouts": [],
            "wait": [],
            "wait_for": null
          },
          "sensitive_attributes": []
        }
      ]
    },
    {
      "mode": "managed",
      "type": "kubernetes_manifest",
      "name": "serviceaccount_elastic_agent",
      "provider": "provider[\"registry.terraform.io/hashicorp/kubernetes\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "computed_fields": null,
            "field_manager": [],
            "manifest": {
              "value": {
                "apiVersion": "v1",
                "kind": "ServiceAccount",
                "metadata": {
                  "name": "elastic-agent",
                  "namespace": "default"
                }
              },
              "type": [
                "object",
                {
                  "apiVersion": "string",
                  "kind": "string",
                  "metadata": [
                    "object",
                    {
                      "name": "string",
                      "namespace": "string"
                    }
                  ]
                }
              ]
            },
            "object": {
              "value": {
                "apiVersion": "v1",
                "automountServiceAccountToken": null,
                "imagePullSecrets": null,
                "kind": "ServiceAccount",
                "metadata": {
                  "annotations": null,
                  "clusterName": null,
                  "creationTimestamp": null,
                  "deletionGracePeriodSeconds": null,
                  "deletionTimestamp": null,
                  "finalizers": null,
                  "generateName": null,
                  "generation": null,
                  "labels": null,
                  "managedFields": null,
                  "name": "elastic-agent",
                  "namespace": "default",
                  "ownerReferences": null,
                  "resourceVersion": null,
                  "selfLink": null,
                  "uid": null
                },
                "secrets": null
              },
              "type": [
                "object",
                {
                  "apiVersion": "string",
                  "automountServiceAccountToken": "bool",
                  "imagePullSecrets": [
                    "list",
                    [
                      "object",
                      {
                        "name": "string"
                      }
                    ]
                  ],
                  "kind": "string",
                  "metadata": [
                    "object",
                    {
                      "annotations": [
                        "map",
                        "string"
                      ],
                      "clusterName": "string",
                      "creationTimestamp": "string",
                      "deletionGracePeriodSeconds": "number",
                      "deletionTimestamp": "string",
                      "finalizers": [
                        "list",
                        "string"
                      ],
                      "generateName": "string",
                      "generation": "number",
                      "labels": [
                        "map",
                        "string"
                      ],
                      "managedFields": [
                        "tuple",
                        [
                          [
                            "object",
                            {
                              "apiVersion": "string",
                              "fieldsType": "string",
                              "fieldsV1": "dynamic",
                              "manager": "string",
                              "operation": "string",
                              "time": "string"
                            }
                          ]
                        ]
                      ],
                      "name": "string",
                      "namespace": "string",
                      "ownerReferences": [
                        "list",
                        [
                          "object",
                          {
                            "apiVersion": "string",
                            "blockOwnerDeletion": "bool",
                            "controller": "bool",
                            "kind": "string",
                            "name": "string",
                            "uid": "string"
                          }
                        ]
                      ],
                      "resourceVersion": "string",
                      "selfLink": "string",
                      "uid": "string"
                    }
                  ],
                  "secrets": [
                    "list",
                    [
                      "object",
                      {
                        "apiVersion": "string",
                        "fieldPath": "string",
                        "kind": "string",
                        "name": "string",
                        "namespace": "string",
                        "resourceVersion": "string",
                        "uid": "string"
                      }
                    ]
                  ]
                }
              ]
            },
            "timeouts": [],
            "wait": [],
            "wait_for": null
          },
          "sensitive_attributes": []
        }
      ]
    },
    {
      "mode": "managed",
      "type": "kubernetes_manifest",
      "name": "serviceaccount_external_dns",
      "provider": "provider[\"registry.terraform.io/hashicorp/kubernetes\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "computed_fields": null,
            "field_manager": [],
            "manifest": {
              "value": {
                "apiVersion": "v1",
                "kind": "ServiceAccount",
                "metadata": {
                  "name": "external-dns",
                  "namespace": "default"
                }
              },
              "type": [
                "object",
                {
                  "apiVersion": "string",
                  "kind": "string",
                  "metadata": [
                    "object",
                    {
                      "name": "string",
                      "namespace": "string"
                    }
                  ]
                }
              ]
            },
            "object": {
              "value": {
                "apiVersion": "v1",
                "automountServiceAccountToken": null,
                "imagePullSecrets": null,
                "kind": "ServiceAccount",
                "metadata": {
                  "annotations": null,
                  "clusterName": null,
                  "creationTimestamp": null,
                  "deletionGracePeriodSeconds": null,
                  "deletionTimestamp": null,
                  "finalizers": null,
                  "generateName": null,
                  "generation": null,
                  "labels": null,
                  "managedFields": null,
                  "name": "external-dns",
                  "namespace": "default",
                  "ownerReferences": null,
                  "resourceVersion": null,
                  "selfLink": null,
                  "uid": null
                },
                "secrets": null
              },
              "type": [
                "object",
                {
                  "apiVersion": "string",
                  "automountServiceAccountToken": "bool",
                  "imagePullSecrets": [
                    "list",
                    [
                      "object",
                      {
                        "name": "string"
                      }
                    ]
                  ],
                  "kind": "string",
                  "metadata": [
                    "object",
                    {
                      "annotations": [
                        "map",
                        "string"
                      ],
                      "clusterName": "string",
                      "creationTimestamp": "string",
                      "deletionGracePeriodSeconds": "number",
                      "deletionTimestamp": "string",
                      "finalizers": [
                        "list",
                        "string"
                      ],
                      "generateName": "string",
                      "generation": "number",
                      "labels": [
                        "map",
                        "string"
                      ],
                      "managedFields": [
                        "tuple",
                        [
                          [
                            "object",
                            {
                              "apiVersion": "string",
                              "fieldsType": "string",
                              "fieldsV1": "dynamic",
                              "manager": "string",
                              "operation": "string",
                              "time": "string"
                            }
                          ]
                        ]
                      ],
                      "name": "string",
                      "namespace": "string",
                      "ownerReferences": [
                        "list",
                        [
                          "object",
                          {
                            "apiVersion": "string",
                            "blockOwnerDeletion": "bool",
                            "controller": "bool",
                            "kind": "string",
                            "name": "string",
                            "uid": "string"
                          }
                        ]
                      ],
                      "resourceVersion": "string",
                      "selfLink": "string",
                      "uid": "string"
                    }
                  ],
                  "secrets": [
                    "list",
                    [
                      "object",
                      {
                        "apiVersion": "string",
                        "fieldPath": "string",
                        "kind": "string",
                        "name": "string",
                        "namespace": "string",
                        "resourceVersion": "string",
                        "uid": "string"
                      }
                    ]
                  ]
                }
              ]
            },
            "timeouts": [],
            "wait": [],
            "wait_for": null
          },
          "sensitive_attributes": []
        }
      ]
    },
    {
      "mode": "managed",
      "type": "kubernetes_manifest",
      "name": "serviceaccount_fleet_server",
      "provider": "provider[\"registry.terraform.io/hashicorp/kubernetes\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "computed_fields": null,
            "field_manager": [],
            "manifest": {
              "value": {
                "apiVersion": "v1",
                "kind": "ServiceAccount",
                "metadata": {
                  "name": "fleet-server",
                  "namespace": "default"
                }
              },
              "type": [
                "object",
                {
                  "apiVersion": "string",
                  "kind": "string",
                  "metadata": [
                    "object",
                    {
                      "name": "string",
                      "namespace": "string"
                    }
                  ]
                }
              ]
            },
            "object": {
              "value": {
                "apiVersion": "v1",
                "automountServiceAccountToken": null,
                "imagePullSecrets": null,
                "kind": "ServiceAccount",
                "metadata": {
                  "annotations": null,
                  "clusterName": null,
                  "creationTimestamp": null,
                  "deletionGracePeriodSeconds": null,
                  "deletionTimestamp": null,
                  "finalizers": null,
                  "generateName": null,
                  "generation": null,
                  "labels": null,
                  "managedFields": null,
                  "name": "fleet-server",
                  "namespace": "default",
                  "ownerReferences": null,
                  "resourceVersion": null,
                  "selfLink": null,
                  "uid": null
                },
                "secrets": null
              },
              "type": [
                "object",
                {
                  "apiVersion": "string",
                  "automountServiceAccountToken": "bool",
                  "imagePullSecrets": [
                    "list",
                    [
                      "object",
                      {
                        "name": "string"
                      }
                    ]
                  ],
                  "kind": "string",
                  "metadata": [
                    "object",
                    {
                      "annotations": [
                        "map",
                        "string"
                      ],
                      "clusterName": "string",
                      "creationTimestamp": "string",
                      "deletionGracePeriodSeconds": "number",
                      "deletionTimestamp": "string",
                      "finalizers": [
                        "list",
                        "string"
                      ],
                      "generateName": "string",
                      "generation": "number",
                      "labels": [
                        "map",
                        "string"
                      ],
                      "managedFields": [
                        "tuple",
                        [
                          [
                            "object",
                            {
                              "apiVersion": "string",
                              "fieldsType": "string",
                              "fieldsV1": "dynamic",
                              "manager": "string",
                              "operation": "string",
                              "time": "string"
                            }
                          ]
                        ]
                      ],
                      "name": "string",
                      "namespace": "string",
                      "ownerReferences": [
                        "list",
                        [
                          "object",
                          {
                            "apiVersion": "string",
                            "blockOwnerDeletion": "bool",
                            "controller": "bool",
                            "kind": "string",
                            "name": "string",
                            "uid": "string"
                          }
                        ]
                      ],
                      "resourceVersion": "string",
                      "selfLink": "string",
                      "uid": "string"
                    }
                  ],
                  "secrets": [
                    "list",
                    [
                      "object",
                      {
                        "apiVersion": "string",
                        "fieldPath": "string",
                        "kind": "string",
                        "name": "string",
                        "namespace": "string",
                        "resourceVersion": "string",
                        "uid": "string"
                      }
                    ]
                  ]
                }
              ]
            },
            "timeouts": [],
            "wait": [],
            "wait_for": null
          },
          "sensitive_attributes": []
        }
      ]
    },
    {
      "mode": "managed",
      "type": "kubernetes_manifest",
      "name": "storageclass_sc_hot",
      "provider": "provider[\"registry.terraform.io/hashicorp/kubernetes\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "computed_fields": null,
            "field_manager": [],
            "manifest": {
              "value": {
                "allowVolumeExpansion": true,
                "apiVersion": "storage.k8s.io/v1",
                "kind": "StorageClass",
                "metadata": {
                  "name": "sc-hot"
                },
                "parameters": {
                  "type": "pd-ssd"
                },
                "provisioner": "kubernetes.io/gce-pd",
                "reclaimPolicy": "Delete",
                "volumeBindingMode": "WaitForFirstConsumer"
              },
              "type": [
                "object",
                {
                  "allowVolumeExpansion": "bool",
                  "apiVersion": "string",
                  "kind": "string",
                  "metadata": [
                    "object",
                    {
                      "name": "string"
                    }
                  ],
                  "parameters": [
                    "object",
                    {
                      "type": "string"
                    }
                  ],
                  "provisioner": "string",
                  "reclaimPolicy": "string",
                  "volumeBindingMode": "string"
                }
              ]
            },
            "object": {
              "value": {
                "allowVolumeExpansion": true,
                "allowedTopologies": null,
                "apiVersion": "storage.k8s.io/v1",
                "kind": "StorageClass",
                "metadata": {
                  "annotations": null,
                  "clusterName": null,
                  "creationTimestamp": null,
                  "deletionGracePeriodSeconds": null,
                  "deletionTimestamp": null,
                  "finalizers": null,
                  "generateName": null,
                  "generation": null,
                  "labels": null,
                  "managedFields": null,
                  "name": "sc-hot",
                  "namespace": null,
                  "ownerReferences": null,
                  "resourceVersion": null,
                  "selfLink": null,
                  "uid": null
                },
                "mountOptions": null,
                "parameters": {
                  "type": "pd-ssd"
                },
                "provisioner": "kubernetes.io/gce-pd",
                "reclaimPolicy": "Delete",
                "volumeBindingMode": "WaitForFirstConsumer"
              },
              "type": [
                "object",
                {
                  "allowVolumeExpansion": "bool",
                  "allowedTopologies": [
                    "list",
                    [
                      "object",
                      {
                        "matchLabelExpressions": [
                          "list",
                          [
                            "object",
                            {
                              "key": "string",
                              "values": [
                                "list",
                                "string"
                              ]
                            }
                          ]
                        ]
                      }
                    ]
                  ],
                  "apiVersion": "string",
                  "kind": "string",
                  "metadata": [
                    "object",
                    {
                      "annotations": [
                        "map",
                        "string"
                      ],
                      "clusterName": "string",
                      "creationTimestamp": "string",
                      "deletionGracePeriodSeconds": "number",
                      "deletionTimestamp": "string",
                      "finalizers": [
                        "list",
                        "string"
                      ],
                      "generateName": "string",
                      "generation": "number",
                      "labels": [
                        "map",
                        "string"
                      ],
                      "managedFields": [
                        "tuple",
                        [
                          [
                            "object",
                            {
                              "apiVersion": "string",
                              "fieldsType": "string",
                              "fieldsV1": "dynamic",
                              "manager": "string",
                              "operation": "string",
                              "time": "string"
                            }
                          ]
                        ]
                      ],
                      "name": "string",
                      "namespace": "string",
                      "ownerReferences": [
                        "list",
                        [
                          "object",
                          {
                            "apiVersion": "string",
                            "blockOwnerDeletion": "bool",
                            "controller": "bool",
                            "kind": "string",
                            "name": "string",
                            "uid": "string"
                          }
                        ]
                      ],
                      "resourceVersion": "string",
                      "selfLink": "string",
                      "uid": "string"
                    }
                  ],
                  "mountOptions": [
                    "list",
                    "string"
                  ],
                  "parameters": [
                    "map",
                    "string"
                  ],
                  "provisioner": "string",
                  "reclaimPolicy": "string",
                  "volumeBindingMode": "string"
                }
              ]
            },
            "timeouts": [],
            "wait": [],
            "wait_for": null
          },
          "sensitive_attributes": []
        }
      ]
    },
    {
      "mode": "managed",
      "type": "kubernetes_manifest",
      "name": "storageclass_sc_warm_cold",
      "provider": "provider[\"registry.terraform.io/hashicorp/kubernetes\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "computed_fields": null,
            "field_manager": [],
            "manifest": {
              "value": {
                "allowVolumeExpansion": true,
                "apiVersion": "storage.k8s.io/v1",
                "kind": "StorageClass",
                "metadata": {
                  "name": "sc-warm-cold"
                },
                "parameters": {
                  "type": "pd-standard"
                },
                "provisioner": "kubernetes.io/gce-pd",
                "reclaimPolicy": "Delete",
                "volumeBindingMode": "WaitForFirstConsumer"
              },
              "type": [
                "object",
                {
                  "allowVolumeExpansion": "bool",
                  "apiVersion": "string",
                  "kind": "string",
                  "metadata": [
                    "object",
                    {
                      "name": "string"
                    }
                  ],
                  "parameters": [
                    "object",
                    {
                      "type": "string"
                    }
                  ],
                  "provisioner": "string",
                  "reclaimPolicy": "string",
                  "volumeBindingMode": "string"
                }
              ]
            },
            "object": {
              "value": {
                "allowVolumeExpansion": true,
                "allowedTopologies": null,
                "apiVersion": "storage.k8s.io/v1",
                "kind": "StorageClass",
                "metadata": {
                  "annotations": null,
                  "clusterName": null,
                  "creationTimestamp": null,
                  "deletionGracePeriodSeconds": null,
                  "deletionTimestamp": null,
                  "finalizers": null,
                  "generateName": null,
                  "generation": null,
                  "labels": null,
                  "managedFields": null,
                  "name": "sc-warm-cold",
                  "namespace": null,
                  "ownerReferences": null,
                  "resourceVersion": null,
                  "selfLink": null,
                  "uid": null
                },
                "mountOptions": null,
                "parameters": {
                  "type": "pd-standard"
                },
                "provisioner": "kubernetes.io/gce-pd",
                "reclaimPolicy": "Delete",
                "volumeBindingMode": "WaitForFirstConsumer"
              },
              "type": [
                "object",
                {
                  "allowVolumeExpansion": "bool",
                  "allowedTopologies": [
                    "list",
                    [
                      "object",
                      {
                        "matchLabelExpressions": [
                          "list",
                          [
                            "object",
                            {
                              "key": "string",
                              "values": [
                                "list",
                                "string"
                              ]
                            }
                          ]
                        ]
                      }
                    ]
                  ],
                  "apiVersion": "string",
                  "kind": "string",
                  "metadata": [
                    "object",
                    {
                      "annotations": [
                        "map",
                        "string"
                      ],
                      "clusterName": "string",
                      "creationTimestamp": "string",
                      "deletionGracePeriodSeconds": "number",
                      "deletionTimestamp": "string",
                      "finalizers": [
                        "list",
                        "string"
                      ],
                      "generateName": "string",
                      "generation": "number",
                      "labels": [
                        "map",
                        "string"
                      ],
                      "managedFields": [
                        "tuple",
                        [
                          [
                            "object",
                            {
                              "apiVersion": "string",
                              "fieldsType": "string",
                              "fieldsV1": "dynamic",
                              "manager": "string",
                              "operation": "string",
                              "time": "string"
                            }
                          ]
                        ]
                      ],
                      "name": "string",
                      "namespace": "string",
                      "ownerReferences": [
                        "list",
                        [
                          "object",
                          {
                            "apiVersion": "string",
                            "blockOwnerDeletion": "bool",
                            "controller": "bool",
                            "kind": "string",
                            "name": "string",
                            "uid": "string"
                          }
                        ]
                      ],
                      "resourceVersion": "string",
                      "selfLink": "string",
                      "uid": "string"
                    }
                  ],
                  "mountOptions": [
                    "list",
                    "string"
                  ],
                  "parameters": [
                    "map",
                    "string"
                  ],
                  "provisioner": "string",
                  "reclaimPolicy": "string",
                  "volumeBindingMode": "string"
                }
              ]
            },
            "timeouts": [],
            "wait": [],
            "wait_for": null
          },
          "sensitive_attributes": []
        }
      ]
    }
  ]
}
